// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// VCS coverage exclude_file
module ram_2x64(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [63:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [63:0] W0_data
);

  reg [63:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 64'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:55:11
                reset,	// <stdin>:56:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [63:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:55:11
    if (reset) begin	// <stdin>:55:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:55:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x64 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock,
        io_enq_bits_burst,
        io_enq_bits_size,
        io_enq_bits_len,
        io_enq_bits_addr,
        io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_addr = _ram_ext_R0_data[34:3];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[42:35];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[45:43];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[47:46];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[48];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[52:49];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[55:53];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[59:56];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[63:60];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x67(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [66:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [66:0] W0_data
);

  reg [66:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [95:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h60; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[66:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 67'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:106:11
                reset,	// <stdin>:107:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [63:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [63:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [66:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:106:11
    if (reset) begin	// <stdin>:106:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:106:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x67 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_resp, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[63:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = _ram_ext_R0_data[65:64];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[66];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module mem_32x67(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [66:0] R0_data,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [66:0] W0_data
);

  reg [66:0] Memory[0:31];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  always @(posedge W0_clk) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    if (W0_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      Memory[W0_addr] <= W0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    reg [95:0] _RANDOM_MEM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h60; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
          end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
          Memory[i[4:0]] = _RANDOM_MEM[66:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
        end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 67'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
endmodule

module SyncWriteElasticReadMemory(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
  input         clock,	// <stdin>:157:11
                io_wrEn,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [4:0]  io_wrAddr,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [63:0] io_wrData_data,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [1:0]  io_wrData_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input         io_wrData_last,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output        io_rdReq_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input         io_rdReq_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [4:0]  io_rdReq_bits,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input         io_rdResp_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output        io_rdResp_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output [63:0] io_rdResp_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output [1:0]  io_rdResp_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output        io_rdResp_bits_last	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
);

  wire [66:0] _mem_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  mem_32x67 mem_ext (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    .R0_addr (io_rdReq_bits),
    .R0_en   (1'h1),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .W0_addr (io_wrAddr),
    .W0_en   (io_wrEn),
    .W0_clk  (clock),
    .W0_data ({io_wrData_last, io_wrData_resp, io_wrData_data})	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  );
  assign io_rdReq_ready = io_rdResp_ready;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
  assign io_rdResp_valid = io_rdReq_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
  assign io_rdResp_bits_data = _mem_ext_R0_data[63:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15, :95:18
  assign io_rdResp_bits_resp = _mem_ext_R0_data[65:64];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15, :95:18
  assign io_rdResp_bits_last = _mem_ext_R0_data[66];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15, :95:18
endmodule

module Counter(	// src/main/scala/chext/util/Counter.scala:6:7
  input  clock,	// <stdin>:171:11, :311:11
         reset,	// <stdin>:172:11, :312:11
         io_incEn,	// src/main/scala/chext/util/Counter.scala:7:14
         io_decEn,	// src/main/scala/chext/util/Counter.scala:7:14
  output io_empty	// src/main/scala/chext/util/Counter.scala:7:14
);

  reg [3:0] rCounter;	// src/main/scala/chext/util/Counter.scala:16:33
  always @(posedge clock) begin	// <stdin>:171:11, :311:11
    if (reset)	// <stdin>:171:11, :311:11
      rCounter <= 4'h0;	// src/main/scala/chext/util/Counter.scala:16:33
    else if (~(io_incEn & io_decEn)) begin	// src/main/scala/chext/util/Counter.scala:18:17
      if (io_incEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter + 4'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :20:28
      else if (io_decEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter - 4'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :23:28
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/util/Counter.scala:6:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/util/Counter.scala:6:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/util/Counter.scala:6:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/util/Counter.scala:6:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/util/Counter.scala:6:7
        rCounter = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chext/util/Counter.scala:6:7, :16:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_empty = rCounter == 4'h0;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :26:24
endmodule

module Queue2_WriteAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:195:11
                reset,	// <stdin>:196:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [63:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:195:11
    if (reset) begin	// <stdin>:195:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:195:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x64 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock,
        io_enq_bits_burst,
        io_enq_bits_size,
        io_enq_bits_len,
        io_enq_bits_addr,
        io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_addr = _ram_ext_R0_data[34:3];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[42:35];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[45:43];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[47:46];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[48];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[52:49];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[55:53];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[59:56];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[63:60];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x34(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [33:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [33:0] W0_data
);

  reg [33:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[33:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 34'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteResponseChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:246:11
                reset,	// <stdin>:247:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_user,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_user	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [33:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:246:11
    if (reset) begin	// <stdin>:246:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:246:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x34 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_user, io_enq_bits_resp})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_resp = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_user = _ram_ext_R0_data[33:2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module mem_8x34(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  input  [2:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [33:0] R0_data,
  input  [2:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [33:0] W0_data
);

  reg [33:0] Memory[0:7];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  always @(posedge W0_clk) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    if (W0_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      Memory[W0_addr] <= W0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
          end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
          Memory[i[2:0]] = _RANDOM_MEM[33:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
        end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 34'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
endmodule

module SyncWriteElasticReadMemory_1(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
  input         clock,	// <stdin>:297:11
                io_wrEn,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [2:0]  io_wrAddr,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [1:0]  io_wrData_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [31:0] io_wrData_user,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output        io_rdReq_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input         io_rdReq_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input  [2:0]  io_rdReq_bits,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  input         io_rdResp_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output        io_rdResp_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output [1:0]  io_rdResp_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
  output [31:0] io_rdResp_bits_user	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:53:14
);

  wire [33:0] _mem_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  mem_8x34 mem_ext (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
    .R0_addr (io_rdReq_bits),
    .R0_en   (1'h1),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .W0_addr (io_wrAddr),
    .W0_en   (io_wrEn),
    .W0_clk  (clock),
    .W0_data ({io_wrData_user, io_wrData_resp})	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:95:18
  );
  assign io_rdReq_ready = io_rdResp_ready;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
  assign io_rdResp_valid = io_rdReq_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15
  assign io_rdResp_bits_resp = _mem_ext_R0_data[1:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15, :95:18
  assign io_rdResp_bits_user = _mem_ext_R0_data[33:2];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:41:15, :95:18
endmodule

// VCS coverage exclude_file
module read_xIndexFill_8x5(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  input  [2:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [4:0] R0_data,
  input  [2:0] R1_addr,
  input        R1_en,
               R1_clk,
  output [4:0] R1_data,
  input  [2:0] R2_addr,
  input        R2_en,
               R2_clk,
  output [4:0] R2_data,
  input  [2:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [4:0] W0_data,
  input  [2:0] W1_addr,
  input        W1_en,
               W1_clk,
  input  [4:0] W1_data
);

  reg [4:0] Memory[0:7];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  always @(posedge W0_clk) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    if (W0_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
      Memory[W0_addr] <= W0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    if (W1_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
      Memory[W1_addr] <= W1_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
          Memory[i[2:0]] = _RANDOM_MEM[4:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
        end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 5'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  assign R1_data = R1_en ? Memory[R1_addr] : 5'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  assign R2_data = R2_en ? Memory[R2_addr] : 5'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
endmodule

// VCS coverage exclude_file
module read_bufferValid_32x1(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
  input  [4:0] R0_addr,
  input        R0_en,
               R0_clk,
  output       R0_data,
  input  [4:0] W0_addr,
  input        W0_en,
               W0_clk,
               W0_data,
  input  [4:0] W1_addr,
  input        W1_en,
               W1_clk,
               W1_data
);

  reg Memory[0:31];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
  always @(posedge W0_clk) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
    if (W0_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
      Memory[W0_addr] <= W0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
    if (W1_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
      Memory[W1_addr] <= W1_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
          Memory[i[4:0]] = _RANDOM_MEM[0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
        end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
endmodule

// VCS coverage exclude_file
module write_bufferValid_8x1(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
  input  [2:0] R0_addr,
  input        R0_en,
               R0_clk,
  output       R0_data,
  input  [2:0] W0_addr,
  input        W0_en,
               W0_clk,
               W0_data,
  input  [2:0] W1_addr,
  input        W1_en,
               W1_clk,
               W1_data
);

  reg Memory[0:7];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
  always @(posedge W0_clk) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
    if (W0_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
      Memory[W0_addr] <= W0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
    if (W1_en & 1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
      Memory[W1_addr] <= W1_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
          Memory[i[2:0]] = _RANDOM_MEM[0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
        end	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
endmodule

module IdParallelize(	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  input         clock,	// <stdin>:335:11
                reset,	// <stdin>:336:11
  output        s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [31:0] s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [3:0]  s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [2:0]  s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [3:0]  s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
                s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output        s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output [63:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output [1:0]  s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
                s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [31:0] s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [3:0]  s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [2:0]  s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [3:0]  s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
                s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output        s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [63:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input  [7:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
                s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output        s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output [1:0]  s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  output [31:0] s_axi_b_bits_user,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17
  input         m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output        m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [2:0]  m_axi_ar_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [31:0] m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [7:0]  m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [2:0]  m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [1:0]  m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output        m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [3:0]  m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [2:0]  m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [3:0]  m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
                m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input         m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input  [2:0]  m_axi_r_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input  [63:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input  [1:0]  m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input         m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
                m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output        m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [2:0]  m_axi_aw_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [31:0] m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [7:0]  m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [2:0]  m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [1:0]  m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output        m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [3:0]  m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [2:0]  m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [3:0]  m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
                m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input         m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output        m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [63:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output [7:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  output        m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input         m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input  [2:0]  m_axi_b_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input  [1:0]  m_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
  input  [31:0] m_axi_b_bits_user	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:111:17
);

  wire        _write_xCount_io_empty;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:220:24
  wire        _write_bufferPayload_io_rdReq_ready;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
  wire        _write_bufferPayload_io_rdResp_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
  wire [1:0]  _write_bufferPayload_io_rdResp_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
  wire [31:0] _write_bufferPayload_io_rdResp_bits_user;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
  wire        _write_bufferValid_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
  wire        _write_s_b_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_m_aw_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_xCount_io_empty;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:142:24
  wire        _read_bufferPayload_io_rdReq_ready;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
  wire        _read_bufferPayload_io_rdResp_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
  wire [63:0] _read_bufferPayload_io_rdResp_bits_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
  wire [1:0]  _read_bufferPayload_io_rdResp_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
  wire        _read_bufferPayload_io_rdResp_bits_last;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
  wire        _read_bufferValid_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
  wire [4:0]  _read_xIndexFill_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  wire [4:0]  _read_xIndexFill_ext_R1_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  wire [4:0]  _read_xIndexFill_ext_R2_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
  wire        _read_s_r_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_m_ar_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  reg  [3:0]  read_nextIdFill;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29
  reg  [4:0]  read_nextIndexFill;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:137:32
  reg  [4:0]  read_nextIndexDrain;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:138:33
  reg  [5:0]  read_bufferAvailable;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:140:34
  wire [7:0]  _read_bufferAvailable_T = s_axi_ar_bits_len + 8'h1;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:149:44
  wire        s_axi_ar_ready_0 =
    _read_m_ar_sinkBuffer_io_enq_ready & ~(read_nextIdFill[3])
    & {2'h0, read_bufferAvailable} >= _read_bufferAvailable_T;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29, :140:34, :148:{9,41}, :149:{26,44}, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/util/BitOps.scala:82:10
  wire        read_m_ar_valid = s_axi_ar_ready_0 & s_axi_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:148:41, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _read_T_5 =
    _read_bufferPayload_io_rdReq_ready & _read_bufferValid_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26, :126:31, src/main/scala/chisel3/util/Decoupled.scala:51:35
  reg  [3:0]  write_nextIdFill;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:217:25
  reg  [2:0]  write_nextIdDrain;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:218:26
  wire        s_axi_aw_ready_0 =
    _write_m_aw_sinkBuffer_io_enq_ready & ~(write_nextIdFill[3]);	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:217:25, :225:18, :226:9, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/util/BitOps.scala:82:10
  wire        write_m_aw_valid = s_axi_aw_ready_0 & s_axi_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:225:18, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _write_T_2 =
    _write_bufferPayload_io_rdReq_ready & _write_bufferValid_ext_R0_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26, :209:31, src/main/scala/chisel3/util/Decoupled.scala:51:35
  always @(posedge clock) begin	// <stdin>:335:11
    if (reset) begin	// <stdin>:335:11
      read_nextIdFill <= 4'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29
      read_nextIndexFill <= 5'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:137:32
      read_nextIndexDrain <= 5'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:137:32, :138:33
      read_bufferAvailable <= 6'h20;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:140:34
    end
    else if (_read_xCount_io_empty & ~read_m_ar_valid) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:142:24, :192:{22,25}, src/main/scala/chisel3/util/Decoupled.scala:51:35
      read_nextIdFill <= 4'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29
      read_nextIndexFill <= 5'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:137:32
      read_nextIndexDrain <= 5'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:137:32, :138:33
      read_bufferAvailable <= 6'h20;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:140:34
    end
    else begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:192:22
      if (read_m_ar_valid) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        read_nextIdFill <= read_nextIdFill + 4'h1;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29, :163:32, :254:34
        read_nextIndexFill <= read_nextIndexFill + s_axi_ar_bits_len[4:0] + 5'h1;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:110:17, :137:32, :162:54, :163:32
        read_bufferAvailable <= read_bufferAvailable - _read_bufferAvailable_T[5:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:140:34, :149:44, :164:42
      end
      if (_read_T_5)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        read_nextIndexDrain <= read_nextIndexDrain + 5'h1;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:138:33, :163:32, :183:40
    end
    if (_write_xCount_io_empty & ~write_m_aw_valid) begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:220:24, :261:{22,25}, src/main/scala/chisel3/util/Decoupled.scala:51:35
      write_nextIdFill <= 4'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29, :217:25
      write_nextIdDrain <= 3'h0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:218:26, :263:19
    end
    else begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:261:22
      if (write_m_aw_valid)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        write_nextIdFill <= write_nextIdFill + 4'h1;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:217:25, :237:32, :254:34
      if (_write_T_2)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        write_nextIdDrain <= write_nextIdDrain + 3'h1;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:218:26, :254:34
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
        read_nextIdFill = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :135:29
        read_nextIndexFill = _RANDOM[/*Zero width*/ 1'b0][8:4];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :135:29, :137:32
        read_nextIndexDrain = _RANDOM[/*Zero width*/ 1'b0][13:9];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :135:29, :138:33
        read_bufferAvailable = _RANDOM[/*Zero width*/ 1'b0][19:14];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :135:29, :140:34
        write_nextIdFill = _RANDOM[/*Zero width*/ 1'b0][23:20];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :135:29, :217:25
        write_nextIdDrain = _RANDOM[/*Zero width*/ 1'b0][26:24];	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :135:29, :218:26
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_ReadAddressChannel read_m_ar_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_read_m_ar_sinkBuffer_io_enq_ready),
    .io_enq_valid       (read_m_ar_valid),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_enq_bits_id     (read_nextIdFill[2:0]),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29, :152:18
    .io_enq_bits_addr   (s_axi_ar_bits_addr),
    .io_enq_bits_len    (s_axi_ar_bits_len),
    .io_enq_bits_size   (s_axi_ar_bits_size),
    .io_enq_bits_burst  (s_axi_ar_bits_burst),
    .io_enq_bits_lock   (s_axi_ar_bits_lock),
    .io_enq_bits_cache  (s_axi_ar_bits_cache),
    .io_enq_bits_prot   (s_axi_ar_bits_prot),
    .io_enq_bits_qos    (s_axi_ar_bits_qos),
    .io_enq_bits_region (s_axi_ar_bits_region),
    .io_deq_ready       (m_axi_ar_ready),
    .io_deq_valid       (m_axi_ar_valid),
    .io_deq_bits_id     (m_axi_ar_bits_id),
    .io_deq_bits_addr   (m_axi_ar_bits_addr),
    .io_deq_bits_len    (m_axi_ar_bits_len),
    .io_deq_bits_size   (m_axi_ar_bits_size),
    .io_deq_bits_burst  (m_axi_ar_bits_burst),
    .io_deq_bits_lock   (m_axi_ar_bits_lock),
    .io_deq_bits_cache  (m_axi_ar_bits_cache),
    .io_deq_bits_prot   (m_axi_ar_bits_prot),
    .io_deq_bits_qos    (m_axi_ar_bits_qos),
    .io_deq_bits_region (m_axi_ar_bits_region)
  );
  Queue2_ReadDataChannel read_s_r_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_s_r_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_read_bufferPayload_io_rdResp_valid),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
    .io_enq_bits_data (_read_bufferPayload_io_rdResp_bits_data),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
    .io_enq_bits_resp (_read_bufferPayload_io_rdResp_bits_resp),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
    .io_enq_bits_last (_read_bufferPayload_io_rdResp_bits_last),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
    .io_deq_ready     (s_axi_r_ready),
    .io_deq_valid     (s_axi_r_valid),
    .io_deq_bits_data (s_axi_r_bits_data),
    .io_deq_bits_resp (s_axi_r_bits_resp),
    .io_deq_bits_last (s_axi_r_bits_last)
  );
  read_xIndexFill_8x5 read_xIndexFill_ext (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    .R0_addr (m_axi_r_bits_id),
    .R0_en   (1'h1),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    .R0_clk  (clock),
    .R0_data (_read_xIndexFill_ext_R0_data),
    .R1_addr (m_axi_r_bits_id),
    .R1_en   (m_axi_r_valid),
    .R1_clk  (clock),
    .R1_data (_read_xIndexFill_ext_R1_data),
    .R2_addr (m_axi_r_bits_id),
    .R2_en   (m_axi_r_valid),
    .R2_clk  (clock),
    .R2_data (_read_xIndexFill_ext_R2_data),
    .W0_addr (m_axi_r_bits_id),
    .W0_en   (m_axi_r_valid),
    .W0_clk  (clock),
    .W0_data (_read_xIndexFill_ext_R2_data + 5'h1),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25, :163:32, :174:66
    .W1_addr (read_nextIdFill[2:0]),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:135:29, :160:23
    .W1_en   (read_m_ar_valid),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W1_clk  (clock),
    .W1_data (read_nextIndexFill)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:137:32
  );
  read_bufferValid_32x1 read_bufferValid_ext (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
    .R0_addr (read_nextIndexDrain),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:138:33
    .R0_en   (1'h1),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    .R0_clk  (clock),
    .R0_data (_read_bufferValid_ext_R0_data),
    .W0_addr (read_nextIndexDrain),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:138:33
    .W0_en   (_read_T_5),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (1'h0),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    .W1_addr (_read_xIndexFill_ext_R1_data),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    .W1_en   (m_axi_r_valid),
    .W1_clk  (clock),
    .W1_data (1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  );
  SyncWriteElasticReadMemory read_bufferPayload (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31
    .clock               (clock),
    .io_wrEn             (m_axi_r_valid),
    .io_wrAddr           (_read_xIndexFill_ext_R0_data),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:123:25
    .io_wrData_data      (m_axi_r_bits_data),
    .io_wrData_resp      (m_axi_r_bits_resp),
    .io_wrData_last      (m_axi_r_bits_last),
    .io_rdReq_ready      (_read_bufferPayload_io_rdReq_ready),
    .io_rdReq_valid      (_read_bufferValid_ext_R0_data),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:125:26
    .io_rdReq_bits       (read_nextIndexDrain),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:138:33
    .io_rdResp_ready     (_read_s_r_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_rdResp_valid     (_read_bufferPayload_io_rdResp_valid),
    .io_rdResp_bits_data (_read_bufferPayload_io_rdResp_bits_data),
    .io_rdResp_bits_resp (_read_bufferPayload_io_rdResp_bits_resp),
    .io_rdResp_bits_last (_read_bufferPayload_io_rdResp_bits_last)
  );
  Counter read_xCount (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:142:24
    .clock    (clock),
    .reset    (reset),
    .io_incEn (read_m_ar_valid),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn
      (_read_s_r_sinkBuffer_io_enq_ready & _read_bufferPayload_io_rdResp_valid
       & _read_bufferPayload_io_rdResp_bits_last),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:126:31, :186:20, :187:27, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/util/Counter.scala:38:26
    .io_empty (_read_xCount_io_empty)
  );
  Queue2_WriteAddressChannel write_m_aw_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_write_m_aw_sinkBuffer_io_enq_ready),
    .io_enq_valid       (write_m_aw_valid),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_enq_bits_id     (write_nextIdFill[2:0]),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:217:25, :229:18
    .io_enq_bits_addr   (s_axi_aw_bits_addr),
    .io_enq_bits_len    (s_axi_aw_bits_len),
    .io_enq_bits_size   (s_axi_aw_bits_size),
    .io_enq_bits_burst  (s_axi_aw_bits_burst),
    .io_enq_bits_lock   (s_axi_aw_bits_lock),
    .io_enq_bits_cache  (s_axi_aw_bits_cache),
    .io_enq_bits_prot   (s_axi_aw_bits_prot),
    .io_enq_bits_qos    (s_axi_aw_bits_qos),
    .io_enq_bits_region (s_axi_aw_bits_region),
    .io_deq_ready       (m_axi_aw_ready),
    .io_deq_valid       (m_axi_aw_valid),
    .io_deq_bits_id     (m_axi_aw_bits_id),
    .io_deq_bits_addr   (m_axi_aw_bits_addr),
    .io_deq_bits_len    (m_axi_aw_bits_len),
    .io_deq_bits_size   (m_axi_aw_bits_size),
    .io_deq_bits_burst  (m_axi_aw_bits_burst),
    .io_deq_bits_lock   (m_axi_aw_bits_lock),
    .io_deq_bits_cache  (m_axi_aw_bits_cache),
    .io_deq_bits_prot   (m_axi_aw_bits_prot),
    .io_deq_bits_qos    (m_axi_aw_bits_qos),
    .io_deq_bits_region (m_axi_aw_bits_region)
  );
  Queue2_WriteResponseChannel write_s_b_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_s_b_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_write_bufferPayload_io_rdResp_valid),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
    .io_enq_bits_resp (_write_bufferPayload_io_rdResp_bits_resp),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
    .io_enq_bits_user (_write_bufferPayload_io_rdResp_bits_user),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_resp (s_axi_b_bits_resp),
    .io_deq_bits_user (s_axi_b_bits_user)
  );
  write_bufferValid_8x1 write_bufferValid_ext (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
    .R0_addr (write_nextIdDrain),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:218:26
    .R0_en   (1'h1),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    .R0_clk  (clock),
    .R0_data (_write_bufferValid_ext_R0_data),
    .W0_addr (write_nextIdDrain),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:218:26
    .W0_en   (_write_T_2),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (1'h0),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
    .W1_addr (m_axi_b_bits_id),
    .W1_en   (m_axi_b_valid),
    .W1_clk  (clock),
    .W1_data (1'h1)	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  );
  SyncWriteElasticReadMemory_1 write_bufferPayload (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31
    .clock               (clock),
    .io_wrEn             (m_axi_b_valid),
    .io_wrAddr           (m_axi_b_bits_id),
    .io_wrData_resp      (m_axi_b_bits_resp),
    .io_wrData_user      (m_axi_b_bits_user),
    .io_rdReq_ready      (_write_bufferPayload_io_rdReq_ready),
    .io_rdReq_valid      (_write_bufferValid_ext_R0_data),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:208:26
    .io_rdReq_bits       (write_nextIdDrain),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:218:26
    .io_rdResp_ready     (_write_s_b_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_rdResp_valid     (_write_bufferPayload_io_rdResp_valid),
    .io_rdResp_bits_resp (_write_bufferPayload_io_rdResp_bits_resp),
    .io_rdResp_bits_user (_write_bufferPayload_io_rdResp_bits_user)
  );
  Counter write_xCount (	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:220:24
    .clock    (clock),
    .reset    (reset),
    .io_incEn (write_m_aw_valid),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (_write_s_b_sinkBuffer_io_enq_ready & _write_bufferPayload_io_rdResp_valid),	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:209:31, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_empty (_write_xCount_io_empty)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :148:41
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7, :225:18
  assign s_axi_w_ready = m_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  assign m_axi_w_valid = s_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  assign m_axi_w_bits_data = s_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  assign m_axi_w_bits_strb = s_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
  assign m_axi_w_bits_last = s_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/IdParallelize.scala:107:7
endmodule

module IdParallelizeTestTop2_2(	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:112:7
  input         clock,	// <stdin>:559:11
                reset,	// <stdin>:560:11
  output        S_AXI_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [31:0] S_AXI_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [7:0]  S_AXI_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [2:0]  S_AXI_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [1:0]  S_AXI_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [3:0]  S_AXI_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [2:0]  S_AXI_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [3:0]  S_AXI_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
                S_AXI_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_RREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output        S_AXI_RVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output [63:0] S_AXI_RDATA,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output [1:0]  S_AXI_RRESP,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output        S_AXI_RLAST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
                S_AXI_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [31:0] S_AXI_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [7:0]  S_AXI_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [2:0]  S_AXI_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [1:0]  S_AXI_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [3:0]  S_AXI_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [2:0]  S_AXI_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [3:0]  S_AXI_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
                S_AXI_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output        S_AXI_WREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_WVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [63:0] S_AXI_WDATA,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input  [7:0]  S_AXI_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         S_AXI_WLAST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
                S_AXI_BREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output        S_AXI_BVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output [1:0]  S_AXI_BRESP,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  output [31:0] S_AXI_BUSER,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:130:17
  input         M_AXI_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [2:0]  M_AXI_ARID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [31:0] M_AXI_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [7:0]  M_AXI_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [2:0]  M_AXI_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [1:0]  M_AXI_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [3:0]  M_AXI_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [2:0]  M_AXI_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [3:0]  M_AXI_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
                M_AXI_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_RREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input         M_AXI_RVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input  [2:0]  M_AXI_RID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input  [63:0] M_AXI_RDATA,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input  [1:0]  M_AXI_RRESP,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input         M_AXI_RLAST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
                M_AXI_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [2:0]  M_AXI_AWID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [31:0] M_AXI_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [7:0]  M_AXI_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [2:0]  M_AXI_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [1:0]  M_AXI_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [3:0]  M_AXI_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [2:0]  M_AXI_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [3:0]  M_AXI_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
                M_AXI_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input         M_AXI_WREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_WVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [63:0] M_AXI_WDATA,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output [7:0]  M_AXI_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  output        M_AXI_WLAST,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
                M_AXI_BREADY,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input         M_AXI_BVALID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input  [2:0]  M_AXI_BID,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input  [1:0]  M_AXI_BRESP,	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
  input  [31:0] M_AXI_BUSER	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:131:17
);

  IdParallelize dut (	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:128:27
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (S_AXI_ARREADY),
    .s_axi_ar_valid       (S_AXI_ARVALID),
    .s_axi_ar_bits_addr   (S_AXI_ARADDR),
    .s_axi_ar_bits_len    (S_AXI_ARLEN),
    .s_axi_ar_bits_size   (S_AXI_ARSIZE),
    .s_axi_ar_bits_burst  (S_AXI_ARBURST),
    .s_axi_ar_bits_lock   (S_AXI_ARLOCK),
    .s_axi_ar_bits_cache  (S_AXI_ARCACHE),
    .s_axi_ar_bits_prot   (S_AXI_ARPROT),
    .s_axi_ar_bits_qos    (S_AXI_ARQOS),
    .s_axi_ar_bits_region (S_AXI_ARREGION),
    .s_axi_r_ready        (S_AXI_RREADY),
    .s_axi_r_valid        (S_AXI_RVALID),
    .s_axi_r_bits_data    (S_AXI_RDATA),
    .s_axi_r_bits_resp    (S_AXI_RRESP),
    .s_axi_r_bits_last    (S_AXI_RLAST),
    .s_axi_aw_ready       (S_AXI_AWREADY),
    .s_axi_aw_valid       (S_AXI_AWVALID),
    .s_axi_aw_bits_addr   (S_AXI_AWADDR),
    .s_axi_aw_bits_len    (S_AXI_AWLEN),
    .s_axi_aw_bits_size   (S_AXI_AWSIZE),
    .s_axi_aw_bits_burst  (S_AXI_AWBURST),
    .s_axi_aw_bits_lock   (S_AXI_AWLOCK),
    .s_axi_aw_bits_cache  (S_AXI_AWCACHE),
    .s_axi_aw_bits_prot   (S_AXI_AWPROT),
    .s_axi_aw_bits_qos    (S_AXI_AWQOS),
    .s_axi_aw_bits_region (S_AXI_AWREGION),
    .s_axi_w_ready        (S_AXI_WREADY),
    .s_axi_w_valid        (S_AXI_WVALID),
    .s_axi_w_bits_data    (S_AXI_WDATA),
    .s_axi_w_bits_strb    (S_AXI_WSTRB),
    .s_axi_w_bits_last    (S_AXI_WLAST),
    .s_axi_b_ready        (S_AXI_BREADY),
    .s_axi_b_valid        (S_AXI_BVALID),
    .s_axi_b_bits_resp    (S_AXI_BRESP),
    .s_axi_b_bits_user    (S_AXI_BUSER),
    .m_axi_ar_ready       (M_AXI_ARREADY),
    .m_axi_ar_valid       (M_AXI_ARVALID),
    .m_axi_ar_bits_id     (M_AXI_ARID),
    .m_axi_ar_bits_addr   (M_AXI_ARADDR),
    .m_axi_ar_bits_len    (M_AXI_ARLEN),
    .m_axi_ar_bits_size   (M_AXI_ARSIZE),
    .m_axi_ar_bits_burst  (M_AXI_ARBURST),
    .m_axi_ar_bits_lock   (M_AXI_ARLOCK),
    .m_axi_ar_bits_cache  (M_AXI_ARCACHE),
    .m_axi_ar_bits_prot   (M_AXI_ARPROT),
    .m_axi_ar_bits_qos    (M_AXI_ARQOS),
    .m_axi_ar_bits_region (M_AXI_ARREGION),
    .m_axi_r_valid        (M_AXI_RVALID),
    .m_axi_r_bits_id      (M_AXI_RID),
    .m_axi_r_bits_data    (M_AXI_RDATA),
    .m_axi_r_bits_resp    (M_AXI_RRESP),
    .m_axi_r_bits_last    (M_AXI_RLAST),
    .m_axi_aw_ready       (M_AXI_AWREADY),
    .m_axi_aw_valid       (M_AXI_AWVALID),
    .m_axi_aw_bits_id     (M_AXI_AWID),
    .m_axi_aw_bits_addr   (M_AXI_AWADDR),
    .m_axi_aw_bits_len    (M_AXI_AWLEN),
    .m_axi_aw_bits_size   (M_AXI_AWSIZE),
    .m_axi_aw_bits_burst  (M_AXI_AWBURST),
    .m_axi_aw_bits_lock   (M_AXI_AWLOCK),
    .m_axi_aw_bits_cache  (M_AXI_AWCACHE),
    .m_axi_aw_bits_prot   (M_AXI_AWPROT),
    .m_axi_aw_bits_qos    (M_AXI_AWQOS),
    .m_axi_aw_bits_region (M_AXI_AWREGION),
    .m_axi_w_ready        (M_AXI_WREADY),
    .m_axi_w_valid        (M_AXI_WVALID),
    .m_axi_w_bits_data    (M_AXI_WDATA),
    .m_axi_w_bits_strb    (M_AXI_WSTRB),
    .m_axi_w_bits_last    (M_AXI_WLAST),
    .m_axi_b_valid        (M_AXI_BVALID),
    .m_axi_b_bits_id      (M_AXI_BID),
    .m_axi_b_bits_resp    (M_AXI_BRESP),
    .m_axi_b_bits_user    (M_AXI_BUSER)
  );
  assign M_AXI_RREADY = 1'h1;	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:112:7, :128:27
  assign M_AXI_BREADY = 1'h1;	// src/test/scala/chext/amba/axi4/full/components/IdParallelize.tb.scala:112:7, :128:27
endmodule

