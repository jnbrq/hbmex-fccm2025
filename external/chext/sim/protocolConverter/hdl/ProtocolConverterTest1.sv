// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// VCS coverage exclude_file
module mem_8192x64(	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  input  [12:0] R0_addr,
  input         R0_en,
                R0_clk,
  output [63:0] R0_data,
  input  [12:0] R1_addr,
  input         R1_en,
                R1_clk,
  output [63:0] R1_data,
  input  [12:0] W0_addr,
  input         W0_en,
                W0_clk,
  input  [63:0] W0_data,
  input  [7:0]  W0_mask,
  input  [12:0] W1_addr,
  input         W1_en,
                W1_clk,
  input  [63:0] W1_data,
  input  [7:0]  W1_mask
);

  reg [63:0] Memory[0:8191];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg        _R0_en_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg [12:0] _R0_addr_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  always @(posedge R0_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R0_en_d0 <= R0_en;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R0_addr_d0 <= R0_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  reg        _R1_en_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg [12:0] _R1_addr_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  always @(posedge R1_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R1_en_d0 <= R1_en;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R1_addr_d0 <= R1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  always @(posedge W0_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[0])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h0 +: 8] <= W0_data[7:0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[1])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h8 +: 8] <= W0_data[15:8];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[2])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h10 +: 8] <= W0_data[23:16];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[3])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h18 +: 8] <= W0_data[31:24];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[4])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h20 +: 8] <= W0_data[39:32];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[5])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h28 +: 8] <= W0_data[47:40];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[6])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h30 +: 8] <= W0_data[55:48];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[7])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h38 +: 8] <= W0_data[63:56];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[0])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h0 +: 8] <= W1_data[7:0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[1])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h8 +: 8] <= W1_data[15:8];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[2])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h10 +: 8] <= W1_data[23:16];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[3])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h18 +: 8] <= W1_data[31:24];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[4])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h20 +: 8] <= W1_data[39:32];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[5])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h28 +: 8] <= W1_data[47:40];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[6])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h30 +: 8] <= W1_data[55:48];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[7])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h38 +: 8] <= W1_data[63:56];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      reg [31:0] _RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    `endif // RANDOMIZE_REG_INIT
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    initial begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        for (logic [13:0] i = 14'h0; i < 14'h2000; i += 14'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
          end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
          Memory[i[12:0]] = _RANDOM_MEM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _RANDOM = {`RANDOM};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R0_en_d0 = _RANDOM[0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R0_addr_d0 = _RANDOM[13:1];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R1_en_d0 = _RANDOM[14];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R1_addr_d0 = _RANDOM[27:15];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 64'bx;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  assign R1_data = _R1_en_d0 ? Memory[_R1_addr_d0] : 64'bx;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
endmodule

module ChiselSimpleDualPortMem(	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
  input         clock,	// <stdin>:4122:11
  input  [12:0] raw1_addr,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [63:0] raw1_dIn,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  output [63:0] raw1_dOut,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [7:0]  raw1_wstrb,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [12:0] raw2_addr,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  input  [63:0] raw2_dIn,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  output [63:0] raw2_dOut,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  input  [7:0]  raw2_wstrb	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
);

  wire [63:0] _mem_ext_R0_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  wire [63:0] _mem_ext_R1_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg  [63:0] raw1_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [63:0] raw2_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  always @(posedge clock) begin	// <stdin>:4122:11
    raw1_dOut_r <= _mem_ext_R1_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16, :184:45
    raw2_dOut_r <= _mem_ext_R0_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16, :184:45
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      automatic logic [31:0] _RANDOM[0:3];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        raw1_dOut_r = {_RANDOM[2'h0], _RANDOM[2'h1]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
        raw2_dOut_r = {_RANDOM[2'h2], _RANDOM[2'h3]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  mem_8192x64 mem_ext (	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    .R0_addr (raw2_addr),
    .R0_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .R1_addr (raw1_addr),
    .R1_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .R1_clk  (clock),
    .R1_data (_mem_ext_R1_data),
    .W0_addr (raw2_addr),
    .W0_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .W0_clk  (clock),
    .W0_data (raw2_dIn),
    .W0_mask (raw2_wstrb),
    .W1_addr (raw1_addr),
    .W1_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .W1_clk  (clock),
    .W1_data (raw1_dIn),
    .W1_mask (raw1_wstrb)
  );
  assign raw1_dOut = raw1_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
  assign raw2_dOut = raw2_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
endmodule

// VCS coverage exclude_file
module ram_2x64(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [63:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [63:0] W0_data
);

  reg [63:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 64'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_UInt64(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:4256:11, :4644:11, :7254:11, :7642:11, :11139:11, :11527:11, :15024:11, :15412:11, :18909:11, :19297:11
                reset,	// <stdin>:4257:11, :4645:11, :7255:11, :7643:11, :11140:11, :11528:11, :15025:11, :15413:11, :18910:11, :19298:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [63:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [63:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:4256:11, :4644:11, :7254:11, :7642:11, :11139:11, :11527:11, :15024:11, :15412:11, :18909:11, :19297:11
    if (reset) begin	// <stdin>:4256:11, :4644:11, :7254:11, :7642:11, :11139:11, :11527:11, :15024:11, :15412:11, :18909:11, :19297:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4256:11, :4644:11, :7254:11, :7642:11, :11139:11, :11527:11, :15024:11, :15412:11, :18909:11, :19297:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x64 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Queue2_UInt0(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:4307:11, :4695:11, :7305:11, :7693:11, :11190:11, :11578:11, :15075:11, :15463:11, :18960:11, :19348:11
         reset,	// <stdin>:4308:11, :4696:11, :7306:11, :7694:11, :11191:11, :11579:11, :15076:11, :15464:11, :18961:11, :19349:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  always @(posedge clock) begin	// <stdin>:4307:11, :4695:11, :7305:11, :7693:11, :11190:11, :11578:11, :15075:11, :15463:11, :18960:11, :19348:11
    if (reset) begin	// <stdin>:4307:11, :4695:11, :7305:11, :7693:11, :11190:11, :11578:11, :15075:11, :15463:11, :18960:11, :19348:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4307:11, :4695:11, :7305:11, :7693:11, :11190:11, :11578:11, :15075:11, :15463:11, :18960:11, :19348:11
      automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Counter(	// src/main/scala/chext/util/Counter.scala:6:7
  input  clock,	// <stdin>:4358:11, :4382:11, :4406:11, :4746:11, :4770:11, :4794:11
         reset,	// <stdin>:4359:11, :4383:11, :4407:11, :4747:11, :4771:11, :4795:11
         io_incEn,	// src/main/scala/chext/util/Counter.scala:7:14
         io_decEn,	// src/main/scala/chext/util/Counter.scala:7:14
  output io_empty,	// src/main/scala/chext/util/Counter.scala:7:14
         io_full	// src/main/scala/chext/util/Counter.scala:7:14
);

  reg [4:0] rCounter;	// src/main/scala/chext/util/Counter.scala:16:33
  always @(posedge clock) begin	// <stdin>:4358:11, :4382:11, :4406:11, :4746:11, :4770:11, :4794:11
    if (reset)	// <stdin>:4358:11, :4382:11, :4406:11, :4746:11, :4770:11, :4794:11
      rCounter <= 5'h0;	// src/main/scala/chext/util/Counter.scala:16:33
    else if (~(io_incEn & io_decEn)) begin	// src/main/scala/chext/util/Counter.scala:18:17
      if (io_incEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter + 5'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :20:28
      else if (io_decEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter - 5'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :23:28
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/util/Counter.scala:6:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/util/Counter.scala:6:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/util/Counter.scala:6:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/util/Counter.scala:6:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/util/Counter.scala:6:7
        rCounter = _RANDOM[/*Zero width*/ 1'b0][4:0];	// src/main/scala/chext/util/Counter.scala:6:7, :16:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_empty = rCounter == 5'h0;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :26:24
  assign io_full = rCounter == 5'h10;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :27:23
endmodule

module BasicReadWriteArbiter(	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
  input  clock,	// <stdin>:4430:11, :4818:11, :7428:11, :11313:11, :15198:11, :19083:11
         reset,	// <stdin>:4431:11, :4819:11, :7429:11, :11314:11, :15199:11, :19084:11
         rdReq,	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:27:17
         wrReq,	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:28:17
  output chooseRd	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:29:20
);

  reg       state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30
  reg [2:0] count;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
  always @(posedge clock) begin	// <stdin>:4430:11, :4818:11, :7428:11, :11313:11, :15198:11, :19083:11
    if (reset) begin	// <stdin>:4430:11, :4818:11, :7428:11, :11313:11, :15198:11, :19083:11
      state <= 1'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30
      count <= 3'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
    end
    else if (state) begin	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30
      automatic logic _GEN;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
      _GEN = ~wrReq | (&count);	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :32:30, :38:11, :45:18, :52:{10,18}, :55:40
      state <= ~_GEN & state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
      if (_GEN)	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
        count <= 3'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
      else	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
        count <= count + 3'h1;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30, :48:24, :58:24
    end
    else begin	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30
      automatic logic _GEN_0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
      _GEN_0 = ~rdReq | (&count);	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :32:30, :38:11, :42:{10,18}, :45:{18,40}
      state <= _GEN_0 | state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
      if (_GEN_0)	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
        count <= 3'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
      else	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
        count <= count + 3'h1;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30, :48:24
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
        state = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30
        count = _RANDOM[/*Zero width*/ 1'b0][3:1];	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30, :32:30
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign chooseRd = ~state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30, :34:21
endmodule

// VCS coverage exclude_file
module ram_16x64(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [63:0] R0_data,
  input  [3:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [63:0] W0_data
);

  reg [63:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 64'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_UInt64(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:4472:11, :4860:11
                reset,	// <stdin>:4473:11, :4861:11
                io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [63:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [63:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire        io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:286:16, :306:{24,39}
  wire [63:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [3:0]  enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]  deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  wire        do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire        do_enq = ~(empty & io_deq_ready) & io_enq_ready & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :263:27, :286:16, :298:17, :301:{26,35}, :306:{24,39}
  assign io_enq_ready = io_deq_ready | ~(ptr_match & maybe_full);	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24, :286:{16,19}, :306:{24,39}
  always @(posedge clock) begin	// <stdin>:4472:11, :4860:11
    if (reset) begin	// <stdin>:4472:11, :4860:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4472:11, :4860:11
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:264:27, :298:17, :300:14
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :264:27, :276:{15,27}, :277:16, :298:17, :300:14, :301:{26,35}
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :298:17, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x64 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits = empty ? io_enq_bits : _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :261:25, :293:17, :298:17, :299:19
endmodule

module ReadWriteToRawBridge(	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  input         clock,	// <stdin>:4532:11, :4920:11
                reset,	// <stdin>:4533:11, :4921:11
  output        read_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input         read_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input  [12:0] read_req_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input         read_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output        read_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output [63:0] read_resp_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output        write_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input         write_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [12:0] write_req_bits_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [63:0] write_req_bits_data,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [7:0]  write_req_bits_strb,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input         write_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  output        write_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  output [12:0] raw_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  output [63:0] raw_dIn,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  input  [63:0] raw_dOut,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  output [7:0]  raw_wstrb	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
);

  wire        _read_dataQueue_io_deq_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire [63:0] _read_dataQueue_io_deq_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire        _arbiter_arbiter_chooseRd;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:151:25
  wire        _ctrWriteResp_io_empty;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36
  wire        _ctrWrite_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32
  wire        _ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
  wire        _wrResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _rdResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        read_req_ready_0 = _arbiter_arbiter_chooseRd & ~_ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31, :151:25, :156:37, src/main/scala/chext/util/Counter.scala:33:17
  wire        write_req_ready_0 = ~_arbiter_arbiter_chooseRd & ~_ctrWrite_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32, :151:25, :157:{20,38}, src/main/scala/chext/util/Counter.scala:33:17
  wire        _read_T_1 = read_req_ready_0 & read_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:156:37, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _write_T_1 = write_req_ready_0 & write_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:157:38, src/main/scala/chisel3/util/Decoupled.scala:51:35
  reg         read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  reg         read_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  wire        rdResp_valid =
    _rdResp_sinkBuffer_io_enq_ready & _read_dataQueue_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27, :194:23
  reg         write_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  wire        wrResp_valid = _wrResp_sinkBuffer_io_enq_ready & ~_ctrWriteResp_io_empty;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36, :208:23, src/main/scala/chext/util/Counter.scala:30:17
  always @(posedge clock) begin	// <stdin>:4532:11, :4920:11
    read_r <= _read_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
    read_r_1 <= read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    write_r <= _write_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        read_r = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        read_r_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        write_r = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23, :205:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_UInt64 rdResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_rdResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_enq_bits  (_read_dataQueue_io_deq_bits),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .io_deq_ready (read_resp_ready),
    .io_deq_valid (read_resp_valid),
    .io_deq_bits  (read_resp_bits)
  );
  Queue2_UInt0 wrResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_wrResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_deq_ready (write_resp_ready),
    .io_deq_valid (write_resp_valid)
  );
  Counter ctrRead (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_read_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_empty (/* unused */),
    .io_full  (_ctrRead_io_full)
  );
  Counter ctrWrite (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_write_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_empty (/* unused */),
    .io_full  (_ctrWrite_io_full)
  );
  Counter ctrWriteResp (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36
    .clock    (clock),
    .reset    (reset),
    .io_incEn (write_r),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
    .io_decEn (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_empty (_ctrWriteResp_io_empty),
    .io_full  (/* unused */)
  );
  BasicReadWriteArbiter arbiter_arbiter (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:151:25
    .clock    (clock),
    .reset    (reset),
    .rdReq    (read_req_valid),
    .wrReq    (write_req_valid),
    .chooseRd (_arbiter_arbiter_chooseRd)
  );
  Queue16_UInt64 read_dataQueue (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_valid (read_r_1),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    .io_enq_bits  (raw_dOut),
    .io_deq_ready (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_deq_valid (_read_dataQueue_io_deq_valid),
    .io_deq_bits  (_read_dataQueue_io_deq_bits)
  );
  assign read_req_ready = read_req_ready_0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :156:37
  assign write_req_ready = write_req_ready_0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :157:38
  assign raw_addr = _write_T_1 ? write_req_bits_addr : read_req_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :159:22, :163:22, :164:16, src/main/scala/chisel3/util/Decoupled.scala:51:35
  assign raw_dIn = write_req_bits_data;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  assign raw_wstrb = _write_T_1 ? write_req_bits_strb : 8'h0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :146:13, :163:22, :166:17, src/main/scala/chisel3/util/Decoupled.scala:51:35
endmodule

module ChiselTrueDualPortRAM(	// src/main/scala/chext/ip/memory/RAM.scala:70:7
  input         clock,	// <stdin>:5032:11
                reset,	// <stdin>:5033:11
  output        read1_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input         read1_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input  [12:0] read1_req_bits,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input         read1_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output        read1_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output [63:0] read1_resp_bits,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output        read2_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input         read2_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input  [12:0] read2_req_bits,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input         read2_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output        read2_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output [63:0] read2_resp_bits,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output        write1_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input         write1_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [12:0] write1_req_bits_addr,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [63:0] write1_req_bits_data,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [7:0]  write1_req_bits_strb,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input         write1_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  output        write1_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
                write2_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input         write2_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input  [12:0] write2_req_bits_addr,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input  [63:0] write2_req_bits_data,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input  [7:0]  write2_req_bits_strb,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input         write2_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  output        write2_resp_valid	// src/main/scala/chext/ip/memory/RAM.scala:82:18
);

  wire [12:0] _bridge2_raw_addr;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [63:0] _bridge2_raw_dIn;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [7:0]  _bridge2_raw_wstrb;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [12:0] _bridge1_raw_addr;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [63:0] _bridge1_raw_dIn;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [7:0]  _bridge1_raw_wstrb;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [63:0] _rawMem_raw1_dOut;	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  wire [63:0] _rawMem_raw2_dOut;	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  ChiselSimpleDualPortMem rawMem (	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .clock      (clock),
    .raw1_addr  (_bridge1_raw_addr),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw1_dIn   (_bridge1_raw_dIn),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw1_dOut  (_rawMem_raw1_dOut),
    .raw1_wstrb (_bridge1_raw_wstrb),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw2_addr  (_bridge2_raw_addr),	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .raw2_dIn   (_bridge2_raw_dIn),	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .raw2_dOut  (_rawMem_raw2_dOut),
    .raw2_wstrb (_bridge2_raw_wstrb)	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  );
  ReadWriteToRawBridge bridge1 (	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .clock               (clock),
    .reset               (reset),
    .read_req_ready      (read1_req_ready),
    .read_req_valid      (read1_req_valid),
    .read_req_bits       (read1_req_bits),
    .read_resp_ready     (read1_resp_ready),
    .read_resp_valid     (read1_resp_valid),
    .read_resp_bits      (read1_resp_bits),
    .write_req_ready     (write1_req_ready),
    .write_req_valid     (write1_req_valid),
    .write_req_bits_addr (write1_req_bits_addr),
    .write_req_bits_data (write1_req_bits_data),
    .write_req_bits_strb (write1_req_bits_strb),
    .write_resp_ready    (write1_resp_ready),
    .write_resp_valid    (write1_resp_valid),
    .raw_addr            (_bridge1_raw_addr),
    .raw_dIn             (_bridge1_raw_dIn),
    .raw_dOut            (_rawMem_raw1_dOut),	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .raw_wstrb           (_bridge1_raw_wstrb)
  );
  ReadWriteToRawBridge bridge2 (	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .clock               (clock),
    .reset               (reset),
    .read_req_ready      (read2_req_ready),
    .read_req_valid      (read2_req_valid),
    .read_req_bits       (read2_req_bits),
    .read_resp_ready     (read2_resp_ready),
    .read_resp_valid     (read2_resp_valid),
    .read_resp_bits      (read2_resp_bits),
    .write_req_ready     (write2_req_ready),
    .write_req_valid     (write2_req_valid),
    .write_req_bits_addr (write2_req_bits_addr),
    .write_req_bits_data (write2_req_bits_data),
    .write_req_bits_strb (write2_req_bits_strb),
    .write_resp_ready    (write2_resp_ready),
    .write_resp_valid    (write2_resp_valid),
    .raw_addr            (_bridge2_raw_addr),
    .raw_dIn             (_bridge2_raw_dIn),
    .raw_dOut            (_rawMem_raw2_dOut),	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .raw_wstrb           (_bridge2_raw_wstrb)
  );
endmodule

// VCS coverage exclude_file
module ram_2x29(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [28:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [28:0] W0_data
);

  reg [28:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[28:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 29'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrLenSizeBurstBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:5068:11, :5376:11, :6094:11, :6402:11, :27633:11, :28121:11, :30165:11, :30653:11, :32697:11, :33185:11, :35229:11, :35717:11
                reset,	// <stdin>:5069:11, :5377:11, :6095:11, :6403:11, :27634:11, :28122:11, :30166:11, :30654:11, :32698:11, :33186:11, :35230:11, :35718:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [28:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:5068:11, :5376:11, :6094:11, :6402:11, :27633:11, :28121:11, :30165:11, :30653:11, :32697:11, :33185:11, :35229:11, :35717:11
    if (reset) begin	// <stdin>:5068:11, :5376:11, :6094:11, :6402:11, :27633:11, :28121:11, :30165:11, :30653:11, :32697:11, :33185:11, :35229:11, :35717:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:5068:11, :5376:11, :6094:11, :6402:11, :27633:11, :28121:11, :30165:11, :30653:11, :32697:11, :33185:11, :35229:11, :35717:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x29 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_burst, io_enq_bits_size, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[15:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[23:16];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[26:24];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[28:27];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x19(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [18:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [18:0] W0_data
);

  reg [18:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[18:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 19'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrSizeLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:5119:11, :5427:11, :6145:11, :6453:11, :27684:11, :28172:11, :30216:11, :30704:11, :32748:11, :33236:11, :35280:11, :35768:11
                reset,	// <stdin>:5120:11, :5428:11, :6146:11, :6454:11, :27685:11, :28173:11, :30217:11, :30705:11, :32749:11, :33237:11, :35281:11, :35769:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [18:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:5119:11, :5427:11, :6145:11, :6453:11, :27684:11, :28172:11, :30216:11, :30704:11, :32748:11, :33236:11, :35280:11, :35768:11
    if (reset) begin	// <stdin>:5119:11, :5427:11, :6145:11, :6453:11, :27684:11, :28172:11, :30216:11, :30704:11, :32748:11, :33236:11, :35280:11, :35768:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:5119:11, :5427:11, :6145:11, :6453:11, :27684:11, :28172:11, :30216:11, :30704:11, :32748:11, :33236:11, :35280:11, :35768:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x19 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_size, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[15:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[18:16];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module AddressGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
  input         clock,	// <stdin>:5170:11, :5478:11, :6196:11, :6504:11, :27735:11, :28223:11, :30267:11, :30755:11, :32799:11, :33287:11, :35331:11, :35819:11
                reset,	// <stdin>:5171:11, :5479:11, :6197:11, :6505:11, :27736:11, :28224:11, :30268:11, :30756:11, :32800:11, :33288:11, :35332:11, :35820:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [15:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output [15:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output [2:0]  sink_bits_size	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
);

  wire        _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _source__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0] _source__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _source__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _source__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg  [15:0] addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25
  reg  [7:0]  ctr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24
  reg         generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
  wire        sink__valid =
    _source__sourceBuffer_io_deq_valid & _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22, src/main/scala/chext/elastic/Buffer.scala:93:32, :148:30
  wire        last = ctr == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :77:22
  wire [22:0] _result_addr_T = {7'h0, addr} << _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :106:31, src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        last_1 = _source__sourceBuffer_io_deq_bits_len == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:77:22, :114:30, src/main/scala/chext/elastic/Buffer.scala:93:32
  always @(posedge clock) begin	// <stdin>:5170:11, :5478:11, :6196:11, :6504:11, :27735:11, :28223:11, :30267:11, :30755:11, :32799:11, :33287:11, :35331:11, :35819:11
    if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        if (~last) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
          if (_source__sourceBuffer_io_deq_bits_burst == 2'h1)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:85:28, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <= addr + 16'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24
          else if (_source__sourceBuffer_io_deq_bits_burst == 2'h2)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:87:34, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <=
              addr & {8'hFF, ~_source__sourceBuffer_io_deq_bits_len} | addr + 16'h1
              & {8'h0, _source__sourceBuffer_io_deq_bits_len};	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :77:22, :83:20, :86:24, :88:35, :89:23, :90:{25,34,44,51}, src/main/scala/chext/elastic/Buffer.scala:93:32
          ctr <= ctr - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :83:20
        end
      end
      else if (~last_1) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
        addr <=
          (_source__sourceBuffer_io_deq_bits_addr
           >> _source__sourceBuffer_io_deq_bits_size) + 16'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :120:{32,49}, src/main/scala/chext/elastic/Buffer.scala:93:32
        ctr <= _source__sourceBuffer_io_deq_bits_len - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :121:28, src/main/scala/chext/elastic/Buffer.scala:93:32
      end
    end
    if (reset)	// <stdin>:5170:11, :5478:11, :6196:11, :6504:11, :27735:11, :28223:11, :30267:11, :30755:11, :32799:11, :33287:11, :35331:11, :35819:11
      generating <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :70:35
    else if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last & generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
      else	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last_1 | generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        addr = _RANDOM[/*Zero width*/ 1'b0][15:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25
        ctr = _RANDOM[/*Zero width*/ 1'b0][23:16];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :67:24
        generating = _RANDOM[/*Zero width*/ 1'b0][24];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :70:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddrLenSizeBurstBundle source__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (source_ready),
    .io_enq_valid      (source_valid),
    .io_enq_bits_addr  (source_bits_addr),
    .io_enq_bits_len   (source_bits_len),
    .io_enq_bits_size  (source_bits_size),
    .io_enq_bits_burst (source_bits_burst),
    .io_deq_ready      (sink__valid & (generating ? last : last_1)),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :75:{22,38}, :76:22, :77:22, :79:18, :114:30, :116:18, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid      (_source__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr  (_source__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_source__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size  (_source__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst (_source__sourceBuffer_io_deq_bits_burst)
  );
  Queue2_AddrSizeLastBundle sink__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sink__sinkBuffer_io_enq_ready),
    .io_enq_valid     (sink__valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
    .io_enq_bits_addr
      (~generating | _source__sourceBuffer_io_deq_bits_burst == 2'h0
         ? _source__sourceBuffer_io_deq_bits_addr
         : _result_addr_T[15:0]),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :94:{26,47}, :106:{23,31}, src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_enq_bits_size (_source__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_last (generating ? last : last_1),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :77:22, :94:47, :114:30, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_deq_ready     (sink_ready),
    .io_deq_valid     (sink_valid),
    .io_deq_bits_addr (sink_bits_addr),
    .io_deq_bits_size (sink_bits_size)
  );
endmodule

// VCS coverage exclude_file
module ram_4x3(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [1:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [2:0] R0_data,
  input  [1:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [2:0] W0_data
);

  reg [2:0] Memory[0:3];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[1:0]] = _RANDOM_MEM[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 3'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue4_IdLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:5274:11, :5671:11, :6300:11, :6697:11
               reset,	// <stdin>:5275:11, :5672:11, :6301:11, :6698:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [2:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [1:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [1:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:5274:11, :5671:11, :6300:11, :6697:11
    if (reset) begin	// <stdin>:5274:11, :5671:11, :6300:11, :6697:11
      enq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:5274:11, :5671:11, :6300:11, :6697:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][1:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_4x3 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x3(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input        R0_addr,
               R0_en,
               R0_clk,
  output [2:0] R0_data,
  input        W0_addr,
               W0_en,
               W0_clk,
  input  [2:0] W0_data
);

  reg [2:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 3'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_IdLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:5325:11, :5722:11, :6351:11, :6748:11
               reset,	// <stdin>:5326:11, :5723:11, :6352:11, :6749:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [2:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg        wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:5325:11, :5722:11, :6351:11, :6748:11
    if (reset) begin	// <stdin>:5325:11, :5722:11, :6351:11, :6748:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:5325:11, :5722:11, :6351:11, :6748:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x3 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module StrobeGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input  [15:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output [15:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output [7:0]  sink_bits_strb	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
);

  wire [9:0] _upperByteIndex_T_4 =
    ({7'h0, (source_bits_addr[2:0] >> source_bits_size) + 3'h1} << source_bits_size)
    - 10'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:148:25, :154:{34,42,55,67}, :167:47
  assign source_ready = sink_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_valid = source_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_bits_addr = source_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_bits_strb =
    {_upperByteIndex_T_4 > 10'h6,
     _upperByteIndex_T_4 > 10'h5 & source_bits_addr[2:0] != 3'h7,
     _upperByteIndex_T_4 > 10'h4 & source_bits_addr[2:1] != 2'h3,
     (|(_upperByteIndex_T_4[9:2])) & source_bits_addr[2:0] < 3'h5,
     _upperByteIndex_T_4 > 10'h2 & ~(source_bits_addr[2]),
     (|(_upperByteIndex_T_4[9:1])) & source_bits_addr[2:0] < 3'h3,
     (|_upperByteIndex_T_4) & source_bits_addr[2:0] < 3'h2,
     source_bits_addr[2:0] == 3'h0};	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7, :148:25, :154:67, :167:{18,37,47}, :169:10
endmodule

module AddressStrobeGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:7
  input         clock,	// <stdin>:5644:11, :6670:11
                reset,	// <stdin>:5645:11, :6671:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [15:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output [15:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output [7:0]  sink_bits_strb	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
);

  wire        _strobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
  wire        _addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  wire [15:0] _addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  wire [2:0]  _addressGenerator_sink_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  AddressGenerator addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (source_ready),
    .source_valid      (source_valid),
    .source_bits_addr  (source_bits_addr),
    .source_bits_len   (source_bits_len),
    .source_bits_size  (source_bits_size),
    .source_bits_burst (source_bits_burst),
    .sink_ready        (_strobeGenerator_source_ready),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
    .sink_valid        (_addressGenerator_sink_valid),
    .sink_bits_addr    (_addressGenerator_sink_bits_addr),
    .sink_bits_size    (_addressGenerator_sink_bits_size)
  );
  StrobeGenerator strobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
    .source_ready     (_strobeGenerator_source_ready),
    .source_valid     (_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .source_bits_addr (_addressGenerator_sink_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .source_bits_size (_addressGenerator_sink_bits_size),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .sink_ready       (sink_ready),
    .sink_valid       (sink_valid),
    .sink_bits_addr   (sink_bits_addr),
    .sink_bits_strb   (sink_bits_strb)
  );
endmodule

// VCS coverage exclude_file
module ram_2x4(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input        R0_addr,
               R0_en,
               R0_clk,
  output [3:0] R0_data,
  input        W0_addr,
               W0_en,
               W0_clk,
  input  [3:0] W0_data
);

  reg [3:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[3:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 4'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteResponseChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:5773:11, :6799:11, :38985:11
               reset,	// <stdin>:5774:11, :6800:11, :38986:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_bits_resp	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [3:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg        wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:5773:11, :6799:11, :38985:11
    if (reset) begin	// <stdin>:5773:11, :6799:11, :38985:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:5773:11, :6799:11, :38985:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x4 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_resp, io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = _ram_ext_R0_data[3:2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Axi4FullToReadWriteBridge(	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  input         clock,	// <stdin>:5824:11, :6850:11
                reset,	// <stdin>:5825:11, :6851:11
  output        s_axi_ar_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_ar_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]  s_axi_ar_bits_id,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [15:0] s_axi_ar_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_r_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_r_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [1:0]  s_axi_r_bits_id,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [63:0] s_axi_r_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
                s_axi_aw_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_aw_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]  s_axi_aw_bits_id,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [15:0] s_axi_aw_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_w_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_w_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [63:0] s_axi_w_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]  s_axi_w_bits_strb,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_b_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_b_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [1:0]  s_axi_b_bits_id,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
                s_axi_b_bits_resp,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         read_req_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output        read_req_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output [12:0] read_req_bits,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output        read_resp_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input         read_resp_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input  [63:0] read_resp_bits,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input         write_req_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output        write_req_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [12:0] write_req_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [63:0] write_req_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [7:0]  write_req_bits_strb,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output        write_resp_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  input         write_resp_valid	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
);

  wire        write_idLastJoined_ready;	// src/main/scala/chext/elastic/Arrival.scala:65:28
  wire        _write_fork1_eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] write_fork1_replicate1_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_fork1_replicate1_len_T;	// src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
  wire        _read_fork1_eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] read_fork1_replicate1_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_fork1_replicate1_len_T;	// src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
  wire        _write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [1:0]  _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_id;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _write_fork1_replicate1_sinkBuffer_io_deq_bits_id;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_fork1_replicate1_sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_addressStrobeGenerator_source_ready;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire [15:0] _write_addressStrobeGenerator_sink_bits_addr;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire [7:0]  _write_addressStrobeGenerator_sink_bits_strb;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [1:0]  _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_id;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_addressGenerator_source_ready;	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  wire [15:0] _read_addressGenerator_sink_bits_addr;	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  reg         read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_fork1_replicate1_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_fork1_replicate1_last =
    read_fork1_replicate1_idx == {7'h0, _read_fork1_replicate1_len_T} - 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9, src/main/scala/chext/ip/memory/AxiBridges.scala:43:{17,27}
  assign _read_fork1_replicate1_len_T = {1'h0, s_axi_ar_bits_len} + 9'h1;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :43:27
  wire        _read_fork1_replicate1_T =
    s_axi_ar_valid & _read_fork1_eagerFork_result_valid_T
    & _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_fork1_replicate1_T_2 = _read_fork1_replicate1_len_T == 9'h1;	// src/main/scala/chext/elastic/Replicate.scala:50:22, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
  assign read_fork1_replicate1_idx =
    read_fork1_replicate1_generating_ ? read_fork1_replicate1_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _read_fork1_eagerFork_result_valid_T = ~read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        read_fork1_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_fork1_replicate1_T
    & (read_fork1_replicate1_generating_
         ? read_fork1_replicate1_last
         : ~(|_read_fork1_replicate1_len_T) | _read_fork1_replicate1_T_2)
    | read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        read_fork1_eagerFork_s_axi_ar_ready_qual1_1 =
    _read_addressGenerator_source_ready | read_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  wire        s_axi_ar_ready_0 =
    read_fork1_eagerFork_s_axi_ar_ready_qual1_0
    & read_fork1_eagerFork_s_axi_ar_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        s_axi_r_valid_0 =
    read_resp_valid & _read_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        read_resp_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_fork1_replicate1_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_fork1_replicate1_last =
    write_fork1_replicate1_idx == {7'h0, _write_fork1_replicate1_len_T} - 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9, src/main/scala/chext/ip/memory/AxiBridges.scala:43:17, :89:27
  assign _write_fork1_replicate1_len_T = {1'h0, s_axi_aw_bits_len} + 9'h1;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :43:27, :89:27
  wire        _write_fork1_replicate1_T =
    s_axi_aw_valid & _write_fork1_eagerFork_result_valid_T
    & _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_fork1_replicate1_T_2 = _write_fork1_replicate1_len_T == 9'h1;	// src/main/scala/chext/elastic/Replicate.scala:50:22, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27, :89:27
  assign write_fork1_replicate1_idx =
    write_fork1_replicate1_generating_ ? write_fork1_replicate1_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _write_fork1_eagerFork_result_valid_T = ~write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        write_fork1_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_fork1_replicate1_T
    & (write_fork1_replicate1_generating_
         ? write_fork1_replicate1_last
         : ~(|_write_fork1_replicate1_len_T) | _write_fork1_replicate1_T_2)
    | write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        write_fork1_eagerFork_s_axi_aw_ready_qual1_1 =
    _write_addressStrobeGenerator_source_ready | write_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        s_axi_aw_ready_0 =
    write_fork1_eagerFork_s_axi_aw_ready_qual1_0
    & write_fork1_eagerFork_s_axi_aw_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        write_req_valid_0 =
    _write_addressStrobeGenerator_sink_valid & s_axi_w_valid;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        s_axi_w_ready_0 = write_req_ready & write_req_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  wire        write_idLastJoined_valid =
    _write_fork1_replicate1_sinkBuffer_io_deq_valid & write_resp_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_resp_ready_0 = write_idLastJoined_ready & write_idLastJoined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  assign write_idLastJoined_ready =
    _write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready & write_idLastJoined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  always @(posedge clock) begin	// <stdin>:5824:11, :6850:11
    if (reset) begin	// <stdin>:5824:11, :6850:11
      read_fork1_replicate1_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      read_fork1_replicate1_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      read_fork1_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      read_fork1_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_replicate1_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_replicate1_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_fork1_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    end
    else begin	// <stdin>:5824:11, :6850:11
      if (_read_fork1_replicate1_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_fork1_replicate1_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_fork1_replicate1_generating_ <=
            ~read_fork1_replicate1_last & read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_fork1_replicate1_idx_ <= read_fork1_replicate1_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN =
            ~(|_read_fork1_replicate1_len_T) | _read_fork1_replicate1_T_2;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
          read_fork1_replicate1_generating_ <= ~_GEN | read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_fork1_replicate1_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      read_fork1_eagerFork_regs_0 <=
        read_fork1_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_fork1_eagerFork_regs_1 <=
        read_fork1_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_write_fork1_replicate1_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_fork1_replicate1_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_fork1_replicate1_generating_ <=
            ~write_fork1_replicate1_last & write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_fork1_replicate1_idx_ <= write_fork1_replicate1_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_0 =
            ~(|_write_fork1_replicate1_len_T) | _write_fork1_replicate1_T_2;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
          write_fork1_replicate1_generating_ <=
            ~_GEN_0 | write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_0)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_fork1_replicate1_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      write_fork1_eagerFork_regs_0 <=
        write_fork1_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_fork1_eagerFork_regs_1 <=
        write_fork1_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        end	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_replicate1_generating_ = _RANDOM[1'h0][0];	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_replicate1_idx_ = _RANDOM[1'h0][16:1];	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_eagerFork_regs_0 = _RANDOM[1'h0][17];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_eagerFork_regs_1 = _RANDOM[1'h0][18];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_replicate1_generating_ = _RANDOM[1'h0][19];	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_replicate1_idx_ = {_RANDOM[1'h0][31:20], _RANDOM[1'h1][3:0]};	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_eagerFork_regs_0 = _RANDOM[1'h1][4];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_eagerFork_regs_1 = _RANDOM[1'h1][5];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressGenerator read_addressGenerator (	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_fork1_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr),
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (read_req_ready),
    .sink_valid        (read_req_valid),
    .sink_bits_addr    (_read_addressGenerator_sink_bits_addr),
    .sink_bits_size    (/* unused */)
  );
  Queue4_IdLastBundle read_fork1_replicate1_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_fork1_replicate1_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_id   (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_id),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_last (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready     (read_resp_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid     (_read_fork1_replicate1_sinkBuffer_io_deq_valid),
    .io_deq_bits_id   (s_axi_r_bits_id),
    .io_deq_bits_last (s_axi_r_bits_last)
  );
  Queue2_IdLastBundle read_fork1_replicate1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (_read_fork1_replicate1_T
       & (read_fork1_replicate1_generating_ | (|_read_fork1_replicate1_len_T))),	// src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
    .io_enq_bits_id   (s_axi_ar_bits_id),
    .io_enq_bits_last (read_fork1_replicate1_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready     (_read_fork1_replicate1_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_id   (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_id),
    .io_deq_bits_last (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last)
  );
  AddressStrobeGenerator write_addressStrobeGenerator (	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_fork1_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr),
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (s_axi_w_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_write_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (_write_addressStrobeGenerator_sink_bits_addr),
    .sink_bits_strb    (_write_addressStrobeGenerator_sink_bits_strb)
  );
  Queue4_IdLastBundle write_fork1_replicate1_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_fork1_replicate1_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_id   (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_id),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_last (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready     (write_resp_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid     (_write_fork1_replicate1_sinkBuffer_io_deq_valid),
    .io_deq_bits_id   (_write_fork1_replicate1_sinkBuffer_io_deq_bits_id),
    .io_deq_bits_last (_write_fork1_replicate1_sinkBuffer_io_deq_bits_last)
  );
  Queue2_IdLastBundle write_fork1_replicate1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (_write_fork1_replicate1_T
       & (write_fork1_replicate1_generating_ | (|_write_fork1_replicate1_len_T))),	// src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
    .io_enq_bits_id   (s_axi_aw_bits_id),
    .io_enq_bits_last (write_fork1_replicate1_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready     (_write_fork1_replicate1_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_id   (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_id),
    .io_deq_bits_last (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last)
  );
  Queue2_WriteResponseChannel write_arrival1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (write_idLastJoined_ready & _write_fork1_replicate1_sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/AxiBridges.scala:130:23
    .io_enq_bits_id   (_write_fork1_replicate1_sinkBuffer_io_deq_bits_id),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_enq_bits_resp (2'h0),	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_id   (s_axi_b_bits_id),
    .io_deq_bits_resp (s_axi_b_bits_resp)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:87:23, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_r_bits_data = read_resp_bits;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:87:23, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_w_ready = s_axi_w_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign read_req_bits = _read_addressGenerator_sink_bits_addr[15:3];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :33:34, :62:24
  assign read_resp_ready = read_resp_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_valid = write_req_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_bits_addr = _write_addressStrobeGenerator_sink_bits_addr[15:3];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :81:40, :111:37
  assign write_req_bits_data = s_axi_w_bits_data;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_bits_strb =
    _write_addressStrobeGenerator_sink_bits_strb & s_axi_w_bits_strb;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :81:40, :113:37
  assign write_resp_ready = write_resp_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
endmodule

// VCS coverage exclude_file
module mem_16384x64(	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  input  [13:0] R0_addr,
  input         R0_en,
                R0_clk,
  output [63:0] R0_data,
  input  [13:0] R1_addr,
  input         R1_en,
                R1_clk,
  output [63:0] R1_data,
  input  [13:0] W0_addr,
  input         W0_en,
                W0_clk,
  input  [63:0] W0_data,
  input  [7:0]  W0_mask
);

  reg [63:0] Memory[0:16383];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg        _R0_en_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg [13:0] _R0_addr_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  always @(posedge R0_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R0_en_d0 <= R0_en;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R0_addr_d0 <= R0_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  reg        _R1_en_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg [13:0] _R1_addr_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  always @(posedge R1_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R1_en_d0 <= R1_en;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R1_addr_d0 <= R1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  always @(posedge W0_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[0])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h0 +: 8] <= W0_data[7:0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[1])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h8 +: 8] <= W0_data[15:8];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[2])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h10 +: 8] <= W0_data[23:16];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[3])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h18 +: 8] <= W0_data[31:24];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[4])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h20 +: 8] <= W0_data[39:32];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[5])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h28 +: 8] <= W0_data[47:40];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[6])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h30 +: 8] <= W0_data[55:48];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[7])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h38 +: 8] <= W0_data[63:56];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      reg [31:0] _RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    `endif // RANDOMIZE_REG_INIT
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    initial begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        for (logic [14:0] i = 15'h0; i < 15'h4000; i += 15'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
          end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
          Memory[i[13:0]] = _RANDOM_MEM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _RANDOM = {`RANDOM};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R0_en_d0 = _RANDOM[0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R0_addr_d0 = _RANDOM[14:1];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R1_en_d0 = _RANDOM[15];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R1_addr_d0 = _RANDOM[29:16];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 64'bx;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  assign R1_data = _R1_en_d0 ? Memory[_R1_addr_d0] : 64'bx;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
endmodule

module ChiselSimpleDualPortMem_1(	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
  input         clock,	// <stdin>:7120:11, :11005:11, :14890:11, :18775:11
  input  [13:0] raw1_addr,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [63:0] raw1_dIn,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  output [63:0] raw1_dOut,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [7:0]  raw1_wstrb,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [13:0] raw2_addr,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  output [63:0] raw2_dOut	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
);

  wire [63:0] _mem_ext_R0_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  wire [63:0] _mem_ext_R1_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg  [63:0] raw1_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [63:0] raw2_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  always @(posedge clock) begin	// <stdin>:7120:11, :11005:11, :14890:11, :18775:11
    raw1_dOut_r <= _mem_ext_R1_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16, :184:45
    raw2_dOut_r <= _mem_ext_R0_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16, :184:45
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      automatic logic [31:0] _RANDOM[0:3];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        raw1_dOut_r = {_RANDOM[2'h0], _RANDOM[2'h1]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
        raw2_dOut_r = {_RANDOM[2'h2], _RANDOM[2'h3]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  mem_16384x64 mem_ext (	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    .R0_addr (raw2_addr),
    .R0_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .R1_addr (raw1_addr),
    .R1_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .R1_clk  (clock),
    .R1_data (_mem_ext_R1_data),
    .W0_addr (raw1_addr),
    .W0_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .W0_clk  (clock),
    .W0_data (raw1_dIn),
    .W0_mask (raw1_wstrb)
  );
  assign raw1_dOut = raw1_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
  assign raw2_dOut = raw2_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
endmodule

module Counter_6(	// src/main/scala/chext/util/Counter.scala:6:7
  input  clock,	// <stdin>:7356:11, :7744:11, :11241:11, :11629:11, :15126:11, :15514:11, :19011:11, :19399:11
         reset,	// <stdin>:7357:11, :7745:11, :11242:11, :11630:11, :15127:11, :15515:11, :19012:11, :19400:11
         io_incEn,	// src/main/scala/chext/util/Counter.scala:7:14
         io_decEn,	// src/main/scala/chext/util/Counter.scala:7:14
  output io_full	// src/main/scala/chext/util/Counter.scala:7:14
);

  reg [2:0] rCounter;	// src/main/scala/chext/util/Counter.scala:16:33
  always @(posedge clock) begin	// <stdin>:7356:11, :7744:11, :11241:11, :11629:11, :15126:11, :15514:11, :19011:11, :19399:11
    if (reset)	// <stdin>:7356:11, :7744:11, :11241:11, :11629:11, :15126:11, :15514:11, :19011:11, :19399:11
      rCounter <= 3'h0;	// src/main/scala/chext/util/Counter.scala:16:33
    else if (~(io_incEn & io_decEn)) begin	// src/main/scala/chext/util/Counter.scala:18:17
      if (io_incEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter + 3'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :20:28
      else if (io_decEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter - 3'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :23:28
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/util/Counter.scala:6:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/util/Counter.scala:6:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/util/Counter.scala:6:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/util/Counter.scala:6:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/util/Counter.scala:6:7
        rCounter = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chext/util/Counter.scala:6:7, :16:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_full = rCounter == 3'h4;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :27:23
endmodule

module Counter_7(	// src/main/scala/chext/util/Counter.scala:6:7
  input  clock,	// <stdin>:7380:11, :7404:11, :7768:11, :7792:11, :11265:11, :11289:11, :11653:11, :11677:11, :15150:11, :15174:11, :15538:11, :15562:11, :19035:11, :19059:11, :19423:11, :19447:11
         reset,	// <stdin>:7381:11, :7405:11, :7769:11, :7793:11, :11266:11, :11290:11, :11654:11, :11678:11, :15151:11, :15175:11, :15539:11, :15563:11, :19036:11, :19060:11, :19424:11, :19448:11
         io_incEn,	// src/main/scala/chext/util/Counter.scala:7:14
         io_decEn,	// src/main/scala/chext/util/Counter.scala:7:14
  output io_empty,	// src/main/scala/chext/util/Counter.scala:7:14
         io_full	// src/main/scala/chext/util/Counter.scala:7:14
);

  reg [1:0] rCounter;	// src/main/scala/chext/util/Counter.scala:16:33
  always @(posedge clock) begin	// <stdin>:7380:11, :7404:11, :7768:11, :7792:11, :11265:11, :11289:11, :11653:11, :11677:11, :15150:11, :15174:11, :15538:11, :15562:11, :19035:11, :19059:11, :19423:11, :19447:11
    if (reset)	// <stdin>:7380:11, :7404:11, :7768:11, :7792:11, :11265:11, :11289:11, :11653:11, :11677:11, :15150:11, :15174:11, :15538:11, :15562:11, :19035:11, :19059:11, :19423:11, :19447:11
      rCounter <= 2'h0;	// src/main/scala/chext/util/Counter.scala:16:33
    else if (~(io_incEn & io_decEn)) begin	// src/main/scala/chext/util/Counter.scala:18:17
      if (io_incEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter + 2'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :20:28
      else if (io_decEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter - 2'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :23:28
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/util/Counter.scala:6:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/util/Counter.scala:6:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/util/Counter.scala:6:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/util/Counter.scala:6:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/util/Counter.scala:6:7
        rCounter = _RANDOM[/*Zero width*/ 1'b0][1:0];	// src/main/scala/chext/util/Counter.scala:6:7, :16:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_empty = rCounter == 2'h0;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :26:24
  assign io_full = rCounter == 2'h2;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :27:23
endmodule

// VCS coverage exclude_file
module ram_4x64(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [1:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [63:0] R0_data,
  input  [1:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [63:0] W0_data
);

  reg [63:0] Memory[0:3];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[1:0]] = _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 64'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue4_UInt64(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:7470:11, :7825:11, :11355:11, :11710:11, :15240:11, :15595:11, :19125:11, :19480:11
                reset,	// <stdin>:7471:11, :7826:11, :11356:11, :11711:11, :15241:11, :15596:11, :19126:11, :19481:11
                io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [63:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [63:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire        io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:286:16, :306:{24,39}
  wire [63:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [1:0]  enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [1:0]  deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  wire        do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire        do_enq = ~(empty & io_deq_ready) & io_enq_ready & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :263:27, :286:16, :298:17, :301:{26,35}, :306:{24,39}
  assign io_enq_ready = io_deq_ready | ~(ptr_match & maybe_full);	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24, :286:{16,19}, :306:{24,39}
  always @(posedge clock) begin	// <stdin>:7470:11, :7825:11, :11355:11, :11710:11, :15240:11, :15595:11, :19125:11, :19480:11
    if (reset) begin	// <stdin>:7470:11, :7825:11, :11355:11, :11710:11, :15240:11, :15595:11, :19125:11, :19480:11
      enq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:7470:11, :7825:11, :11355:11, :11710:11, :15240:11, :15595:11, :19125:11, :19480:11
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
        enq_ptr_value <= enq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:264:27, :298:17, :300:14
        deq_ptr_value <= deq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :264:27, :276:{15,27}, :277:16, :298:17, :300:14, :301:{26,35}
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :298:17, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][1:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_4x64 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits = empty ? io_enq_bits : _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :261:25, :293:17, :298:17, :299:19
endmodule

module ReadWriteToRawBridge_2(	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  input         clock,	// <stdin>:7530:11, :11415:11, :15300:11, :19185:11
                reset,	// <stdin>:7531:11, :11416:11, :15301:11, :19186:11
  output        read_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input         read_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input  [13:0] read_req_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input         read_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output        read_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output [63:0] read_resp_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output        write_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input         write_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [13:0] write_req_bits_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [63:0] write_req_bits_data,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [7:0]  write_req_bits_strb,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input         write_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  output        write_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  output [13:0] raw_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  output [63:0] raw_dIn,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  input  [63:0] raw_dOut,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  output [7:0]  raw_wstrb	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
);

  wire        _read_dataQueue_io_deq_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire [63:0] _read_dataQueue_io_deq_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire        _arbiter_arbiter_chooseRd;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:151:25
  wire        _ctrWriteResp_io_empty;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36
  wire        _ctrWrite_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32
  wire        _ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
  wire        _wrResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _rdResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        read_req_ready_0 = _arbiter_arbiter_chooseRd & ~_ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31, :151:25, :156:37, src/main/scala/chext/util/Counter.scala:33:17
  wire        write_req_ready_0 = ~_arbiter_arbiter_chooseRd & ~_ctrWrite_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32, :151:25, :157:{20,38}, src/main/scala/chext/util/Counter.scala:33:17
  wire        _read_T_1 = read_req_ready_0 & read_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:156:37, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _write_T_1 = write_req_ready_0 & write_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:157:38, src/main/scala/chisel3/util/Decoupled.scala:51:35
  reg         read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  reg         read_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  wire        rdResp_valid =
    _rdResp_sinkBuffer_io_enq_ready & _read_dataQueue_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27, :194:23
  reg         write_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  wire        wrResp_valid = _wrResp_sinkBuffer_io_enq_ready & ~_ctrWriteResp_io_empty;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36, :208:23, src/main/scala/chext/util/Counter.scala:30:17
  always @(posedge clock) begin	// <stdin>:7530:11, :11415:11, :15300:11, :19185:11
    read_r <= _read_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
    read_r_1 <= read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    write_r <= _write_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        read_r = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        read_r_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        write_r = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23, :205:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_UInt64 rdResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_rdResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_enq_bits  (_read_dataQueue_io_deq_bits),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .io_deq_ready (read_resp_ready),
    .io_deq_valid (read_resp_valid),
    .io_deq_bits  (read_resp_bits)
  );
  Queue2_UInt0 wrResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_wrResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_deq_ready (write_resp_ready),
    .io_deq_valid (write_resp_valid)
  );
  Counter_6 ctrRead (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_read_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_full  (_ctrRead_io_full)
  );
  Counter_7 ctrWrite (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_write_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_empty (/* unused */),
    .io_full  (_ctrWrite_io_full)
  );
  Counter_7 ctrWriteResp (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36
    .clock    (clock),
    .reset    (reset),
    .io_incEn (write_r),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
    .io_decEn (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_empty (_ctrWriteResp_io_empty),
    .io_full  (/* unused */)
  );
  BasicReadWriteArbiter arbiter_arbiter (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:151:25
    .clock    (clock),
    .reset    (reset),
    .rdReq    (read_req_valid),
    .wrReq    (write_req_valid),
    .chooseRd (_arbiter_arbiter_chooseRd)
  );
  Queue4_UInt64 read_dataQueue (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_valid (read_r_1),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    .io_enq_bits  (raw_dOut),
    .io_deq_ready (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_deq_valid (_read_dataQueue_io_deq_valid),
    .io_deq_bits  (_read_dataQueue_io_deq_bits)
  );
  assign read_req_ready = read_req_ready_0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :156:37
  assign write_req_ready = write_req_ready_0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :157:38
  assign raw_addr = _write_T_1 ? write_req_bits_addr : read_req_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :159:22, :163:22, :164:16, src/main/scala/chisel3/util/Decoupled.scala:51:35
  assign raw_dIn = write_req_bits_data;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  assign raw_wstrb = _write_T_1 ? write_req_bits_strb : 8'h0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :146:13, :163:22, :166:17, src/main/scala/chisel3/util/Decoupled.scala:51:35
endmodule

module ReadWriteToRawBridge_3(	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  input         clock,	// <stdin>:7885:11, :11770:11, :15655:11, :19540:11
                reset,	// <stdin>:7886:11, :11771:11, :15656:11, :19541:11
  output        read_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input         read_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input  [13:0] read_req_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input         read_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output        read_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output [63:0] read_resp_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output [13:0] raw_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  input  [63:0] raw_dOut	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
);

  wire        _read_dataQueue_io_deq_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire [63:0] _read_dataQueue_io_deq_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire        _ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
  wire        _rdResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_T_1 = ~_ctrRead_io_full & read_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31, src/main/scala/chext/util/Counter.scala:33:17, src/main/scala/chisel3/util/Decoupled.scala:51:35
  reg         read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  reg         read_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  wire        rdResp_valid =
    _rdResp_sinkBuffer_io_enq_ready & _read_dataQueue_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27, :194:23
  always @(posedge clock) begin	// <stdin>:7885:11, :11770:11, :15655:11, :19540:11
    read_r <= _read_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
    read_r_1 <= read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        read_r = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        read_r_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_UInt64 rdResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_rdResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_enq_bits  (_read_dataQueue_io_deq_bits),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .io_deq_ready (read_resp_ready),
    .io_deq_valid (read_resp_valid),
    .io_deq_bits  (read_resp_bits)
  );
  Counter_6 ctrRead (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_read_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_full  (_ctrRead_io_full)
  );
  Queue4_UInt64 read_dataQueue (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_valid (read_r_1),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    .io_enq_bits  (raw_dOut),
    .io_deq_ready (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_deq_valid (_read_dataQueue_io_deq_valid),
    .io_deq_bits  (_read_dataQueue_io_deq_bits)
  );
  assign read_req_ready = ~_ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :128:31, src/main/scala/chext/util/Counter.scala:33:17
  assign raw_addr = read_req_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
endmodule

module ChiselTrueDualPortRAM_1(	// src/main/scala/chext/ip/memory/RAM.scala:70:7
  input         clock,	// <stdin>:7997:11, :11882:11, :15767:11, :19652:11
                reset,	// <stdin>:7998:11, :11883:11, :15768:11, :19653:11
  output        read1_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input         read1_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input  [13:0] read1_req_bits,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input         read1_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output        read1_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output [63:0] read1_resp_bits,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output        read2_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input         read2_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input  [13:0] read2_req_bits,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input         read2_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output        read2_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output [63:0] read2_resp_bits,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output        write1_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input         write1_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [13:0] write1_req_bits_addr,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [63:0] write1_req_bits_data,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [7:0]  write1_req_bits_strb,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input         write1_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  output        write1_resp_valid	// src/main/scala/chext/ip/memory/RAM.scala:81:18
);

  wire [13:0] _bridge2_raw_addr;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [13:0] _bridge1_raw_addr;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [63:0] _bridge1_raw_dIn;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [7:0]  _bridge1_raw_wstrb;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [63:0] _rawMem_raw1_dOut;	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  wire [63:0] _rawMem_raw2_dOut;	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  ChiselSimpleDualPortMem_1 rawMem (	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .clock      (clock),
    .raw1_addr  (_bridge1_raw_addr),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw1_dIn   (_bridge1_raw_dIn),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw1_dOut  (_rawMem_raw1_dOut),
    .raw1_wstrb (_bridge1_raw_wstrb),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw2_addr  (_bridge2_raw_addr),	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .raw2_dOut  (_rawMem_raw2_dOut)
  );
  ReadWriteToRawBridge_2 bridge1 (	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .clock               (clock),
    .reset               (reset),
    .read_req_ready      (read1_req_ready),
    .read_req_valid      (read1_req_valid),
    .read_req_bits       (read1_req_bits),
    .read_resp_ready     (read1_resp_ready),
    .read_resp_valid     (read1_resp_valid),
    .read_resp_bits      (read1_resp_bits),
    .write_req_ready     (write1_req_ready),
    .write_req_valid     (write1_req_valid),
    .write_req_bits_addr (write1_req_bits_addr),
    .write_req_bits_data (write1_req_bits_data),
    .write_req_bits_strb (write1_req_bits_strb),
    .write_resp_ready    (write1_resp_ready),
    .write_resp_valid    (write1_resp_valid),
    .raw_addr            (_bridge1_raw_addr),
    .raw_dIn             (_bridge1_raw_dIn),
    .raw_dOut            (_rawMem_raw1_dOut),	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .raw_wstrb           (_bridge1_raw_wstrb)
  );
  ReadWriteToRawBridge_3 bridge2 (	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .clock           (clock),
    .reset           (reset),
    .read_req_ready  (read2_req_ready),
    .read_req_valid  (read2_req_valid),
    .read_req_bits   (read2_req_bits),
    .read_resp_ready (read2_resp_ready),
    .read_resp_valid (read2_resp_valid),
    .read_resp_bits  (read2_resp_bits),
    .raw_addr        (_bridge2_raw_addr),
    .raw_dOut        (_rawMem_raw2_dOut)	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  );
endmodule

// VCS coverage exclude_file
module ram_2x30(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [29:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [29:0] W0_data
);

  reg [29:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[29:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 30'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrLenSizeBurstBundle_4(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:8033:11, :8341:11, :11918:11, :12226:11, :15803:11, :16111:11, :19688:11, :19996:11
                reset,	// <stdin>:8034:11, :8342:11, :11919:11, :12227:11, :15804:11, :16112:11, :19689:11, :19997:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [16:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [16:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [29:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:8033:11, :8341:11, :11918:11, :12226:11, :15803:11, :16111:11, :19688:11, :19996:11
    if (reset) begin	// <stdin>:8033:11, :8341:11, :11918:11, :12226:11, :15803:11, :16111:11, :19688:11, :19996:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:8033:11, :8341:11, :11918:11, :12226:11, :15803:11, :16111:11, :19688:11, :19996:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x30 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_burst, io_enq_bits_size, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[16:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[24:17];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[27:25];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[29:28];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x20(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [19:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [19:0] W0_data
);

  reg [19:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[19:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 20'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrSizeLastBundle_4(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:8084:11, :8392:11, :11969:11, :12277:11, :15854:11, :16162:11, :19739:11, :20047:11
                reset,	// <stdin>:8085:11, :8393:11, :11970:11, :12278:11, :15855:11, :16163:11, :19740:11, :20048:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [16:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [16:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [19:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:8084:11, :8392:11, :11969:11, :12277:11, :15854:11, :16162:11, :19739:11, :20047:11
    if (reset) begin	// <stdin>:8084:11, :8392:11, :11969:11, :12277:11, :15854:11, :16162:11, :19739:11, :20047:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:8084:11, :8392:11, :11969:11, :12277:11, :15854:11, :16162:11, :19739:11, :20047:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x20 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_size, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[16:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[19:17];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module AddressGenerator_4(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
  input         clock,	// <stdin>:8135:11, :8443:11, :12020:11, :12328:11, :15905:11, :16213:11, :19790:11, :20098:11
                reset,	// <stdin>:8136:11, :8444:11, :12021:11, :12329:11, :15906:11, :16214:11, :19791:11, :20099:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [16:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output [16:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output [2:0]  sink_bits_size	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
);

  wire        _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _source__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [16:0] _source__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _source__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _source__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg  [16:0] addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25
  reg  [7:0]  ctr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24
  reg         generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
  wire        sink__valid =
    _source__sourceBuffer_io_deq_valid & _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22, src/main/scala/chext/elastic/Buffer.scala:93:32, :148:30
  wire        last = ctr == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :77:22
  wire [23:0] _result_addr_T = {7'h0, addr} << _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :106:31, src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        last_1 = _source__sourceBuffer_io_deq_bits_len == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:77:22, :114:30, src/main/scala/chext/elastic/Buffer.scala:93:32
  always @(posedge clock) begin	// <stdin>:8135:11, :8443:11, :12020:11, :12328:11, :15905:11, :16213:11, :19790:11, :20098:11
    if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        if (~last) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
          if (_source__sourceBuffer_io_deq_bits_burst == 2'h1)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:85:28, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <= addr + 17'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24
          else if (_source__sourceBuffer_io_deq_bits_burst == 2'h2)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:87:34, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <=
              addr & {9'h1FF, ~_source__sourceBuffer_io_deq_bits_len} | addr + 17'h1
              & {9'h0, _source__sourceBuffer_io_deq_bits_len};	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :88:35, :89:23, :90:{25,34,44,51}, src/main/scala/chext/elastic/Buffer.scala:93:32
          ctr <= ctr - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :83:20
        end
      end
      else if (~last_1) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
        addr <=
          (_source__sourceBuffer_io_deq_bits_addr
           >> _source__sourceBuffer_io_deq_bits_size) + 17'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :120:{32,49}, src/main/scala/chext/elastic/Buffer.scala:93:32
        ctr <= _source__sourceBuffer_io_deq_bits_len - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :121:28, src/main/scala/chext/elastic/Buffer.scala:93:32
      end
    end
    if (reset)	// <stdin>:8135:11, :8443:11, :12020:11, :12328:11, :15905:11, :16213:11, :19790:11, :20098:11
      generating <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :70:35
    else if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last & generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
      else	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last_1 | generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        addr = _RANDOM[/*Zero width*/ 1'b0][16:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25
        ctr = _RANDOM[/*Zero width*/ 1'b0][24:17];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :67:24
        generating = _RANDOM[/*Zero width*/ 1'b0][25];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :70:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddrLenSizeBurstBundle_4 source__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (source_ready),
    .io_enq_valid      (source_valid),
    .io_enq_bits_addr  (source_bits_addr),
    .io_enq_bits_len   (source_bits_len),
    .io_enq_bits_size  (source_bits_size),
    .io_enq_bits_burst (source_bits_burst),
    .io_deq_ready      (sink__valid & (generating ? last : last_1)),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :75:{22,38}, :76:22, :77:22, :79:18, :114:30, :116:18, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid      (_source__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr  (_source__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_source__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size  (_source__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst (_source__sourceBuffer_io_deq_bits_burst)
  );
  Queue2_AddrSizeLastBundle_4 sink__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sink__sinkBuffer_io_enq_ready),
    .io_enq_valid     (sink__valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
    .io_enq_bits_addr
      (~generating | _source__sourceBuffer_io_deq_bits_burst == 2'h0
         ? _source__sourceBuffer_io_deq_bits_addr
         : _result_addr_T[16:0]),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :94:{26,47}, :106:{23,31}, src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_enq_bits_size (_source__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_last (generating ? last : last_1),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :77:22, :94:47, :114:30, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_deq_ready     (sink_ready),
    .io_deq_valid     (sink_valid),
    .io_deq_bits_addr (sink_bits_addr),
    .io_deq_bits_size (sink_bits_size)
  );
endmodule

// VCS coverage exclude_file
module ram_4x1(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [1:0] R0_addr,
  input        R0_en,
               R0_clk,
  output       R0_data,
  input  [1:0] W0_addr,
  input        W0_en,
               W0_clk,
               W0_data
);

  reg Memory[0:3];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[1:0]] = _RANDOM_MEM[0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue4_IdLastBundle_4(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:8239:11, :8636:11, :12124:11, :12521:11, :16009:11, :16406:11, :19894:11, :20291:11
         reset,	// <stdin>:8240:11, :8637:11, :12125:11, :12522:11, :16010:11, :16407:11, :19895:11, :20292:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [1:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [1:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:8239:11, :8636:11, :12124:11, :12521:11, :16009:11, :16406:11, :19894:11, :20291:11
    if (reset) begin	// <stdin>:8239:11, :8636:11, :12124:11, :12521:11, :16009:11, :16406:11, :19894:11, :20291:11
      enq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:8239:11, :8636:11, :12124:11, :12521:11, :16009:11, :16406:11, :19894:11, :20291:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][1:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_4x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_last),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_last)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

// VCS coverage exclude_file
module ram_2x1(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  R0_addr,
         R0_en,
         R0_clk,
  output R0_data,
  input  W0_addr,
         W0_en,
         W0_clk,
         W0_data
);

  reg Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_IdLastBundle_4(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:8290:11, :8687:11, :12175:11, :12572:11, :16060:11, :16457:11, :19945:11, :20342:11
         reset,	// <stdin>:8291:11, :8688:11, :12176:11, :12573:11, :16061:11, :16458:11, :19946:11, :20343:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:8290:11, :8687:11, :12175:11, :12572:11, :16060:11, :16457:11, :19945:11, :20342:11
    if (reset) begin	// <stdin>:8290:11, :8687:11, :12175:11, :12572:11, :16060:11, :16457:11, :19945:11, :20342:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:8290:11, :8687:11, :12175:11, :12572:11, :16060:11, :16457:11, :19945:11, :20342:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_last),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_last)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module StrobeGenerator_2(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input  [16:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output [16:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output [7:0]  sink_bits_strb	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
);

  wire [9:0] _upperByteIndex_T_4 =
    ({7'h0, (source_bits_addr[2:0] >> source_bits_size) + 3'h1} << source_bits_size)
    - 10'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:148:25, :154:{34,42,55,67}, :167:47
  assign source_ready = sink_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_valid = source_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_bits_addr = source_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_bits_strb =
    {_upperByteIndex_T_4 > 10'h6,
     _upperByteIndex_T_4 > 10'h5 & source_bits_addr[2:0] != 3'h7,
     _upperByteIndex_T_4 > 10'h4 & source_bits_addr[2:1] != 2'h3,
     (|(_upperByteIndex_T_4[9:2])) & source_bits_addr[2:0] < 3'h5,
     _upperByteIndex_T_4 > 10'h2 & ~(source_bits_addr[2]),
     (|(_upperByteIndex_T_4[9:1])) & source_bits_addr[2:0] < 3'h3,
     (|_upperByteIndex_T_4) & source_bits_addr[2:0] < 3'h2,
     source_bits_addr[2:0] == 3'h0};	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7, :148:25, :154:67, :167:{18,37,47}, :169:10
endmodule

module AddressStrobeGenerator_2(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:7
  input         clock,	// <stdin>:8609:11, :12494:11, :16379:11, :20264:11
                reset,	// <stdin>:8610:11, :12495:11, :16380:11, :20265:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [16:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output [16:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output [7:0]  sink_bits_strb	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
);

  wire        _strobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
  wire        _addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  wire [16:0] _addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  wire [2:0]  _addressGenerator_sink_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  AddressGenerator_4 addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (source_ready),
    .source_valid      (source_valid),
    .source_bits_addr  (source_bits_addr),
    .source_bits_len   (source_bits_len),
    .source_bits_size  (source_bits_size),
    .source_bits_burst (source_bits_burst),
    .sink_ready        (_strobeGenerator_source_ready),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
    .sink_valid        (_addressGenerator_sink_valid),
    .sink_bits_addr    (_addressGenerator_sink_bits_addr),
    .sink_bits_size    (_addressGenerator_sink_bits_size)
  );
  StrobeGenerator_2 strobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
    .source_ready     (_strobeGenerator_source_ready),
    .source_valid     (_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .source_bits_addr (_addressGenerator_sink_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .source_bits_size (_addressGenerator_sink_bits_size),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .sink_ready       (sink_ready),
    .sink_valid       (sink_valid),
    .sink_bits_addr   (sink_bits_addr),
    .sink_bits_strb   (sink_bits_strb)
  );
endmodule

// VCS coverage exclude_file
module ram_2x2(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input        R0_addr,
               R0_en,
               R0_clk,
  output [1:0] R0_data,
  input        W0_addr,
               W0_en,
               W0_clk,
  input  [1:0] W0_data
);

  reg [1:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 2'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteResponseChannel_2(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:8738:11, :12623:11, :16508:11, :20393:11, :24484:11, :28609:11, :31141:11, :33673:11, :36205:11
               reset,	// <stdin>:8739:11, :12624:11, :16509:11, :20394:11, :24485:11, :28610:11, :31142:11, :33674:11, :36206:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_resp	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:8738:11, :12623:11, :16508:11, :20393:11, :24484:11, :28609:11, :31141:11, :33673:11, :36205:11
    if (reset) begin	// <stdin>:8738:11, :12623:11, :16508:11, :20393:11, :24484:11, :28609:11, :31141:11, :33673:11, :36205:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:8738:11, :12623:11, :16508:11, :20393:11, :24484:11, :28609:11, :31141:11, :33673:11, :36205:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x2 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_resp),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_resp)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Axi4FullToReadWriteBridge_2(	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  input         clock,	// <stdin>:8789:11, :12674:11, :16559:11, :20444:11
                reset,	// <stdin>:8790:11, :12675:11, :16560:11, :20445:11
  output        s_axi_ar_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_ar_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [16:0] s_axi_ar_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_r_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_r_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [63:0] s_axi_r_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
                s_axi_aw_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_aw_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [16:0] s_axi_aw_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_w_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_w_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [63:0] s_axi_w_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]  s_axi_w_bits_strb,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         s_axi_b_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output        s_axi_b_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [1:0]  s_axi_b_bits_resp,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input         read_req_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output        read_req_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output [13:0] read_req_bits,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output        read_resp_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input         read_resp_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input  [63:0] read_resp_bits,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input         write_req_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output        write_req_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [13:0] write_req_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [63:0] write_req_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [7:0]  write_req_bits_strb,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output        write_resp_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  input         write_resp_valid	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
);

  wire        write_idLastJoined_ready;	// src/main/scala/chext/elastic/Arrival.scala:65:28
  wire        _write_fork1_eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] write_fork1_replicate1_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_fork1_replicate1_len_T;	// src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
  wire        _read_fork1_eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] read_fork1_replicate1_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_fork1_replicate1_len_T;	// src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
  wire        _write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_fork1_replicate1_sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_addressStrobeGenerator_source_ready;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire [16:0] _write_addressStrobeGenerator_sink_bits_addr;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire [7:0]  _write_addressStrobeGenerator_sink_bits_strb;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_addressGenerator_source_ready;	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  wire [16:0] _read_addressGenerator_sink_bits_addr;	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  reg         read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_fork1_replicate1_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_fork1_replicate1_last =
    read_fork1_replicate1_idx == {7'h0, _read_fork1_replicate1_len_T} - 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9, src/main/scala/chext/ip/memory/AxiBridges.scala:43:{17,27}
  assign _read_fork1_replicate1_len_T = {1'h0, s_axi_ar_bits_len} + 9'h1;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :43:27
  wire        _read_fork1_replicate1_T =
    s_axi_ar_valid & _read_fork1_eagerFork_result_valid_T
    & _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_fork1_replicate1_T_2 = _read_fork1_replicate1_len_T == 9'h1;	// src/main/scala/chext/elastic/Replicate.scala:50:22, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
  assign read_fork1_replicate1_idx =
    read_fork1_replicate1_generating_ ? read_fork1_replicate1_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _read_fork1_eagerFork_result_valid_T = ~read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        read_fork1_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_fork1_replicate1_T
    & (read_fork1_replicate1_generating_
         ? read_fork1_replicate1_last
         : ~(|_read_fork1_replicate1_len_T) | _read_fork1_replicate1_T_2)
    | read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        read_fork1_eagerFork_s_axi_ar_ready_qual1_1 =
    _read_addressGenerator_source_ready | read_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  wire        s_axi_ar_ready_0 =
    read_fork1_eagerFork_s_axi_ar_ready_qual1_0
    & read_fork1_eagerFork_s_axi_ar_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        s_axi_r_valid_0 =
    read_resp_valid & _read_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        read_resp_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_fork1_replicate1_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_fork1_replicate1_last =
    write_fork1_replicate1_idx == {7'h0, _write_fork1_replicate1_len_T} - 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9, src/main/scala/chext/ip/memory/AxiBridges.scala:43:17, :89:27
  assign _write_fork1_replicate1_len_T = {1'h0, s_axi_aw_bits_len} + 9'h1;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :43:27, :89:27
  wire        _write_fork1_replicate1_T =
    s_axi_aw_valid & _write_fork1_eagerFork_result_valid_T
    & _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_fork1_replicate1_T_2 = _write_fork1_replicate1_len_T == 9'h1;	// src/main/scala/chext/elastic/Replicate.scala:50:22, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27, :89:27
  assign write_fork1_replicate1_idx =
    write_fork1_replicate1_generating_ ? write_fork1_replicate1_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _write_fork1_eagerFork_result_valid_T = ~write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        write_fork1_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_fork1_replicate1_T
    & (write_fork1_replicate1_generating_
         ? write_fork1_replicate1_last
         : ~(|_write_fork1_replicate1_len_T) | _write_fork1_replicate1_T_2)
    | write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        write_fork1_eagerFork_s_axi_aw_ready_qual1_1 =
    _write_addressStrobeGenerator_source_ready | write_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        s_axi_aw_ready_0 =
    write_fork1_eagerFork_s_axi_aw_ready_qual1_0
    & write_fork1_eagerFork_s_axi_aw_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        write_req_valid_0 =
    _write_addressStrobeGenerator_sink_valid & s_axi_w_valid;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        s_axi_w_ready_0 = write_req_ready & write_req_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  wire        write_idLastJoined_valid =
    _write_fork1_replicate1_sinkBuffer_io_deq_valid & write_resp_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_resp_ready_0 = write_idLastJoined_ready & write_idLastJoined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  assign write_idLastJoined_ready =
    _write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready & write_idLastJoined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  always @(posedge clock) begin	// <stdin>:8789:11, :12674:11, :16559:11, :20444:11
    if (reset) begin	// <stdin>:8789:11, :12674:11, :16559:11, :20444:11
      read_fork1_replicate1_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      read_fork1_replicate1_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      read_fork1_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      read_fork1_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_replicate1_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_replicate1_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_fork1_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    end
    else begin	// <stdin>:8789:11, :12674:11, :16559:11, :20444:11
      if (_read_fork1_replicate1_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_fork1_replicate1_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_fork1_replicate1_generating_ <=
            ~read_fork1_replicate1_last & read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_fork1_replicate1_idx_ <= read_fork1_replicate1_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN =
            ~(|_read_fork1_replicate1_len_T) | _read_fork1_replicate1_T_2;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
          read_fork1_replicate1_generating_ <= ~_GEN | read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_fork1_replicate1_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      read_fork1_eagerFork_regs_0 <=
        read_fork1_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_fork1_eagerFork_regs_1 <=
        read_fork1_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_write_fork1_replicate1_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_fork1_replicate1_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_fork1_replicate1_generating_ <=
            ~write_fork1_replicate1_last & write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_fork1_replicate1_idx_ <= write_fork1_replicate1_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_0 =
            ~(|_write_fork1_replicate1_len_T) | _write_fork1_replicate1_T_2;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
          write_fork1_replicate1_generating_ <=
            ~_GEN_0 | write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_0)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_fork1_replicate1_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      write_fork1_eagerFork_regs_0 <=
        write_fork1_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_fork1_eagerFork_regs_1 <=
        write_fork1_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        end	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_replicate1_generating_ = _RANDOM[1'h0][0];	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_replicate1_idx_ = _RANDOM[1'h0][16:1];	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_eagerFork_regs_0 = _RANDOM[1'h0][17];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_eagerFork_regs_1 = _RANDOM[1'h0][18];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_replicate1_generating_ = _RANDOM[1'h0][19];	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_replicate1_idx_ = {_RANDOM[1'h0][31:20], _RANDOM[1'h1][3:0]};	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_eagerFork_regs_0 = _RANDOM[1'h1][4];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_eagerFork_regs_1 = _RANDOM[1'h1][5];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressGenerator_4 read_addressGenerator (	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_fork1_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr),
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (read_req_ready),
    .sink_valid        (read_req_valid),
    .sink_bits_addr    (_read_addressGenerator_sink_bits_addr),
    .sink_bits_size    (/* unused */)
  );
  Queue4_IdLastBundle_4 read_fork1_replicate1_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_fork1_replicate1_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_last (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready     (read_resp_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid     (_read_fork1_replicate1_sinkBuffer_io_deq_valid),
    .io_deq_bits_last (s_axi_r_bits_last)
  );
  Queue2_IdLastBundle_4 read_fork1_replicate1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (_read_fork1_replicate1_T
       & (read_fork1_replicate1_generating_ | (|_read_fork1_replicate1_len_T))),	// src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
    .io_enq_bits_last (read_fork1_replicate1_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready     (_read_fork1_replicate1_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_last (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last)
  );
  AddressStrobeGenerator_2 write_addressStrobeGenerator (	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_fork1_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr),
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (s_axi_w_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_write_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (_write_addressStrobeGenerator_sink_bits_addr),
    .sink_bits_strb    (_write_addressStrobeGenerator_sink_bits_strb)
  );
  Queue4_IdLastBundle_4 write_fork1_replicate1_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_fork1_replicate1_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_last (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready     (write_resp_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid     (_write_fork1_replicate1_sinkBuffer_io_deq_valid),
    .io_deq_bits_last (_write_fork1_replicate1_sinkBuffer_io_deq_bits_last)
  );
  Queue2_IdLastBundle_4 write_fork1_replicate1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (_write_fork1_replicate1_T
       & (write_fork1_replicate1_generating_ | (|_write_fork1_replicate1_len_T))),	// src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
    .io_enq_bits_last (write_fork1_replicate1_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready     (_write_fork1_replicate1_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_last (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last)
  );
  Queue2_WriteResponseChannel_2 write_arrival1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (write_idLastJoined_ready & _write_fork1_replicate1_sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/AxiBridges.scala:130:23
    .io_enq_bits_resp (2'h0),	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_resp (s_axi_b_bits_resp)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:87:23, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_r_bits_data = read_resp_bits;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:87:23, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_w_ready = s_axi_w_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign read_req_bits = _read_addressGenerator_sink_bits_addr[16:3];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :33:34, :62:24
  assign read_resp_ready = read_resp_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_valid = write_req_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_bits_addr = _write_addressStrobeGenerator_sink_bits_addr[16:3];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :81:40, :111:37
  assign write_req_bits_data = s_axi_w_bits_data;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_bits_strb =
    _write_addressStrobeGenerator_sink_bits_strb & s_axi_w_bits_strb;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :81:40, :113:37
  assign write_resp_ready = write_resp_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
endmodule

// VCS coverage exclude_file
module ram_2x11(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [10:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [10:0] W0_data
);

  reg [10:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[10:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 11'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:9059:11, :9161:11, :12944:11, :13046:11, :16829:11, :16931:11, :20714:11, :20816:11, :22660:11, :22762:11
               reset,	// <stdin>:9060:11, :9162:11, :12945:11, :13047:11, :16830:11, :16932:11, :20715:11, :20817:11, :22661:11, :22763:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits_prot	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [10:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9059:11, :9161:11, :12944:11, :13046:11, :16829:11, :16931:11, :20714:11, :20816:11, :22660:11, :22762:11
    if (reset) begin	// <stdin>:9059:11, :9161:11, :12944:11, :13046:11, :16829:11, :16931:11, :20714:11, :20816:11, :22660:11, :22762:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9059:11, :9161:11, :12944:11, :13046:11, :16829:11, :16931:11, :20714:11, :20816:11, :22660:11, :22762:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x11 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_prot, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[10:8];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x34(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [33:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [33:0] W0_data
);

  reg [33:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[33:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 34'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:9110:11, :12995:11, :16880:11, :20765:11, :22711:11, :23196:11, :25774:11
                reset,	// <stdin>:9111:11, :12996:11, :16881:11, :20766:11, :22712:11, :23197:11, :25775:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_resp	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [33:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9110:11, :12995:11, :16880:11, :20765:11, :22711:11, :23196:11, :25774:11
    if (reset) begin	// <stdin>:9110:11, :12995:11, :16880:11, :20765:11, :22711:11, :23196:11, :25774:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9110:11, :12995:11, :16880:11, :20765:11, :22711:11, :23196:11, :25774:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x34 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_resp, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = _ram_ext_R0_data[33:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x36(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [35:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [35:0] W0_data
);

  reg [35:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[35:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 36'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:9212:11, :13097:11, :16982:11, :20867:11, :22813:11, :23298:11, :25876:11
                reset,	// <stdin>:9213:11, :13098:11, :16983:11, :20868:11, :22814:11, :23299:11, :25877:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_strb	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [35:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9212:11, :13097:11, :16982:11, :20867:11, :22813:11, :23298:11, :25876:11
    if (reset) begin	// <stdin>:9212:11, :13097:11, :16982:11, :20867:11, :22813:11, :23298:11, :25876:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9212:11, :13097:11, :16982:11, :20867:11, :22813:11, :23298:11, :25876:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x36 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_strb, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_strb = _ram_ext_R0_data[35:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_WriteResponseChannel_3(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:9263:11, :13148:11, :17033:11, :20918:11, :22864:11, :23349:11, :25927:11
               reset,	// <stdin>:9264:11, :13149:11, :17034:11, :20919:11, :22865:11, :23350:11, :25928:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_resp	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9263:11, :13148:11, :17033:11, :20918:11, :22864:11, :23349:11, :25927:11
    if (reset) begin	// <stdin>:9263:11, :13148:11, :17033:11, :20918:11, :22864:11, :23349:11, :25927:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9263:11, :13148:11, :17033:11, :20918:11, :22864:11, :23349:11, :25927:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x2 ram_resp_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_resp),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_resp)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Queue1_AddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:9314:11, :9406:11, :13199:11, :13291:11, :17084:11, :17176:11, :20969:11, :21061:11, :22915:11, :23007:11
               reset,	// <stdin>:9315:11, :9407:11, :13200:11, :13292:11, :17085:11, :17177:11, :20970:11, :21062:11, :22916:11, :23008:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits_addr	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg [10:0] ram;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg        full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  always @(posedge clock) begin	// <stdin>:9314:11, :9406:11, :13199:11, :13291:11, :17084:11, :17176:11, :20969:11, :21061:11, :22915:11, :23007:11
    automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :286:19
    if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      ram <= {io_enq_bits_prot, io_enq_bits_addr};	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (reset)	// <stdin>:9314:11, :9406:11, :13199:11, :13291:11, :17084:11, :17176:11, :20969:11, :21061:11, :22915:11, :23007:11
      full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    else if (~(do_enq == (io_deq_ready & full)))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
      full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        ram = _RANDOM[/*Zero width*/ 1'b0][11:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
        full = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27, :286:19
  assign io_deq_valid = full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
  assign io_deq_bits_addr = ram[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue1_ReadDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:9360:11, :13245:11, :17130:11, :21015:11, :22961:11
                reset,	// <stdin>:9361:11, :13246:11, :17131:11, :21016:11, :22962:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_resp	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg [33:0] ram;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg        full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  always @(posedge clock) begin	// <stdin>:9360:11, :13245:11, :17130:11, :21015:11, :22961:11
    automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :286:19
    if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      ram <= {2'h0, io_enq_bits_data};	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
    if (reset)	// <stdin>:9360:11, :13245:11, :17130:11, :21015:11, :22961:11
      full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    else if (~(do_enq == (io_deq_ready & full)))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
      full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        end	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        ram = {_RANDOM[1'h0][31:1], _RANDOM[1'h1][2:0]};	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
        full = _RANDOM[1'h0][0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27, :286:19
  assign io_deq_valid = full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
  assign io_deq_bits_data = ram[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = ram[33:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue1_WriteDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:9452:11, :13337:11, :17222:11, :21107:11, :23053:11
                reset,	// <stdin>:9453:11, :13338:11, :17223:11, :21108:11, :23054:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_strb	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg [35:0] ram;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg        full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  always @(posedge clock) begin	// <stdin>:9452:11, :13337:11, :17222:11, :21107:11, :23053:11
    automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :286:19
    if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      ram <= {io_enq_bits_strb, io_enq_bits_data};	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (reset)	// <stdin>:9452:11, :13337:11, :17222:11, :21107:11, :23053:11
      full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    else if (~(do_enq == (io_deq_ready & full)))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
      full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        end	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        ram = {_RANDOM[1'h0][31:1], _RANDOM[1'h1][4:0]};	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
        full = _RANDOM[1'h0][0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27, :286:19
  assign io_deq_valid = full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
  assign io_deq_bits_data = ram[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_strb = ram[35:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue1_WriteResponseChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:9498:11, :13383:11, :17268:11, :21153:11, :23099:11
         reset,	// <stdin>:9499:11, :13384:11, :17269:11, :21154:11, :23100:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  always @(posedge clock) begin	// <stdin>:9498:11, :13383:11, :17268:11, :21153:11, :23099:11
    if (reset)	// <stdin>:9498:11, :13383:11, :17268:11, :21153:11, :23099:11
      full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    else begin	// <stdin>:9498:11, :13383:11, :17268:11, :21153:11, :23099:11
      automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :286:19
      if (~(do_enq == (io_deq_ready & full)))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        full = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27, :286:19
  assign io_deq_valid = full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
endmodule

// VCS coverage exclude_file
module ram_16x45(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [44:0] R0_data,
  input  [3:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [44:0] W0_data
);

  reg [44:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[44:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 45'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_WriteAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:9544:11, :13429:11, :17314:11, :21199:11, :37863:11, :38118:11, :38373:11, :38628:11
                reset,	// <stdin>:9545:11, :13430:11, :17315:11, :21200:11, :37864:11, :38119:11, :38374:11, :38629:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [44:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [3:0]  enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]  deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9544:11, :13429:11, :17314:11, :21199:11, :37863:11, :38118:11, :38373:11, :38628:11
    if (reset) begin	// <stdin>:9544:11, :13429:11, :17314:11, :21199:11, :37863:11, :38118:11, :38373:11, :38628:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:255:14
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:255:14
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9544:11, :13429:11, :17314:11, :21199:11, :37863:11, :38118:11, :38373:11, :38628:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x45 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({21'hC, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[15:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[23:16];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[26:24];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[28:27];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[29];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[33:30];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[36:34];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[40:37];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[44:41];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_SgdmaDesc(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:9595:11, :13480:11, :17365:11, :21250:11
                reset,	// <stdin>:9596:11, :13481:11, :17366:11, :21251:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [47:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [9:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [5:0]  io_enq_bits_flags,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [47:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [9:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [5:0]  io_deq_bits_flags	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [63:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9595:11, :13480:11, :17365:11, :21250:11
    if (reset) begin	// <stdin>:9595:11, :13480:11, :17365:11, :21250:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9595:11, :13480:11, :17365:11, :21250:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x64 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_flags, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[47:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[57:48];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_flags = _ram_ext_R0_data[63:58];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x145(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input          R0_addr,
                 R0_en,
                 R0_clk,
  output [144:0] R0_data,
  input          W0_addr,
                 W0_en,
                 W0_clk,
  input  [144:0] W0_data
);

  reg [144:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [159:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'hA0; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[144:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 145'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteDataChannel_1(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input          clock,	// <stdin>:9646:11, :13531:11, :17416:11, :21301:11
                 reset,	// <stdin>:9647:11, :13532:11, :17417:11, :21302:11
  output         io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [127:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                 io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [127:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0]  io_deq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [144:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg          wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire         ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire         empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire         full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire         do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:9646:11, :13531:11, :17416:11, :21301:11
    if (reset) begin	// <stdin>:9646:11, :13531:11, :17416:11, :21301:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:9646:11, :13531:11, :17416:11, :21301:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x145 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, 16'hFFFF, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:255:14, :256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[127:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_strb = _ram_ext_R0_data[143:128];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[144];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Sgdma(	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
  input          clock,	// <stdin>:9697:11, :13582:11, :17467:11, :21352:11
                 reset,	// <stdin>:9698:11, :13583:11, :17468:11, :21353:11
  output         s_axi_desc_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input          s_axi_desc_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [16:0]  s_axi_desc_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [7:0]   s_axi_desc_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [2:0]   s_axi_desc_ar_bits_size,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [1:0]   s_axi_desc_ar_bits_burst,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input          s_axi_desc_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output         s_axi_desc_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output [63:0]  s_axi_desc_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output         s_axi_desc_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
                 s_axi_desc_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input          s_axi_desc_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [16:0]  s_axi_desc_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [7:0]   s_axi_desc_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [2:0]   s_axi_desc_aw_bits_size,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [1:0]   s_axi_desc_aw_bits_burst,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output         s_axi_desc_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input          s_axi_desc_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [63:0]  s_axi_desc_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input  [7:0]   s_axi_desc_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  input          s_axi_desc_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output         s_axi_desc_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output [1:0]   s_axi_desc_b_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:72:22
  output         s_axil_ctrl_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input          s_axil_ctrl_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input  [7:0]   s_axil_ctrl_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input  [2:0]   s_axil_ctrl_ar_bits_prot,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input          s_axil_ctrl_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output         s_axil_ctrl_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output [31:0]  s_axil_ctrl_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output [1:0]   s_axil_ctrl_r_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output         s_axil_ctrl_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input          s_axil_ctrl_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input  [7:0]   s_axil_ctrl_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input  [2:0]   s_axil_ctrl_aw_bits_prot,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output         s_axil_ctrl_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input          s_axil_ctrl_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input  [31:0]  s_axil_ctrl_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input  [3:0]   s_axil_ctrl_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input          s_axil_ctrl_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output         s_axil_ctrl_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  output [1:0]   s_axil_ctrl_b_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:73:23
  input          m_axi_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output         m_axi_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output [15:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output         m_axi_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  input          m_axi_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  input  [127:0] m_axi_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
                 m_axi_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output         m_axi_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output [15:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  input          m_axi_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output         m_axi_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output [127:0] m_axi_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output [15:0]  m_axi_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
                 m_axi_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
  input          m_axi_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:74:17
                 start,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:82:17
  output         busy	// src/main/scala/chext/ip/sgdma/Sgdma.scala:83:16
);

  wire        sgdma_rvAW_ready;	// src/main/scala/chext/elastic/Fork.scala:83:20, src/main/scala/chext/ip/sgdma/Sgdma.scala:485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:83:20
  wire        _eagerFork_result_valid_T_2;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire        _eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire        _sinkBuffered__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _sinkBuffered__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [47:0] _sinkBuffered__sinkBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [9:0]  _sinkBuffered__sinkBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [5:0]  _sinkBuffered__sinkBuffer_io_deq_bits_flags;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _sgdma_queueAW_io_enq_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25
  wire        _sgdma_queueAW_io_deq_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25
  wire [7:0]  _sgdma_queueAW_io_deq_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25
  wire        _wrRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
  wire        _wrRespQueue__io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
  wire        _wrReqData__deq_q_io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _wrReqData__deq_q_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire [31:0] _wrReqData__deq_q_io_deq_bits_data;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire [3:0]  _wrReqData__deq_q_io_deq_bits_strb;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _wrReq__deq_q_io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _wrReq__deq_q_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire [7:0]  _wrReq__deq_q_io_deq_bits_addr;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _rdRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire        _rdRespQueue__io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire [31:0] _rdRespQueue__io_deq_bits_data;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire [1:0]  _rdRespQueue__io_deq_bits_resp;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire        _rdReq__deq_q_io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _rdReq__deq_q_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire [7:0]  _rdReq__deq_q_io_deq_bits_addr;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _s_axil__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sourceBuffer_2_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [31:0] _s_axil__sourceBuffer_2_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axil__sourceBuffer_2_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sourceBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axil__sourceBuffer_1_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axil__sourceBuffer_1_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axil__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axil__sourceBuffer_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _initSgdma_bridge_read_req_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire [13:0] _initSgdma_bridge_read_req_bits;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire        _initSgdma_bridge_read_resp_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire        _initSgdma_bridge_write_req_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire [13:0] _initSgdma_bridge_write_req_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire [63:0] _initSgdma_bridge_write_req_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire [7:0]  _initSgdma_bridge_write_req_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire        _initSgdma_bridge_write_resp_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
  wire        _initSgdma_mem_read1_req_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
  wire        _initSgdma_mem_read1_resp_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
  wire [63:0] _initSgdma_mem_read1_resp_bits;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
  wire        _initSgdma_mem_write1_req_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
  wire        _initSgdma_mem_write1_resp_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
  reg         working;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32
  reg  [63:0] regCounter;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35
  reg  [7:0]  regMode;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32
  reg  [31:0] regSgdmaIndexLO;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40
  reg  [31:0] regSgdmaIndexHI;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:97:40
  reg  [31:0] regSgdmaLengthLO;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:99:41
  reg  [31:0] regSgdmaLengthHI;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:100:41
  reg         regSgdmaDiscardReadData;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:102:48
  reg  [31:0] regInitAddrLO;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:105:38
  reg  [31:0] regInitAddrHI;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:106:38
  reg  [31:0] regInitSizeLO;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:108:38
  reg  [31:0] regInitSizeHI;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:109:38
  reg  [31:0] regInitMaxBurstLen;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:111:43
  reg  [31:0] regInitInitial_0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39
  reg  [31:0] regInitInitial_1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39
  reg  [31:0] regInitInitial_2;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39
  reg  [31:0] regInitInitial_3;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39
  reg  [31:0] regInitDelta_0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37
  reg  [31:0] regInitDelta_1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37
  reg  [31:0] regInitDelta_2;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37
  reg  [31:0] regInitDelta_3;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37
  wire        rdReq = _rdReq__deq_q_io_deq_valid & _rdRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36, :226:35, src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        wrReq =
    _wrReq__deq_q_io_deq_valid & _wrReqData__deq_q_io_deq_valid
    & _wrRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36, :265:54, src/main/scala/chisel3/util/Decoupled.scala:362:21
  reg  [63:0] sgdma_count;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24
  reg         sgdma_discardReadData;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34
  reg  [63:0] sgdma_stg1_count;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:231:29
  reg  [63:0] sgdma_stg1_idx;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:232:27
  reg  [63:0] sgdma_stg2_count;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:235:29
  reg  [47:0] sgdma_stg2_waitCycles;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34
  reg  [31:0] sgdma_stg3_expected;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:241:32
  reg  [15:0] sgdma_stg3_wBeatCount;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:242:34
  reg  [31:0] sgdma_stg3_received;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:244:32
  wire        sgdma_stg3_wBeatLast =
    sgdma_stg3_wBeatCount == {8'h0, _sgdma_queueAW_io_deq_bits_len};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32, :242:34, :256:25, :261:39
  reg         modeSgdma;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:458:34
  wire        _GEN = sgdma_stg1_count < sgdma_count;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :231:29, :285:23
  wire        _GEN_0 = working & modeSgdma;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :285:32, :458:34, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  wire        read_desc_req_valid = _GEN_0 & _GEN;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31, :285:{23,32}, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  wire [13:0] read_desc_req_bits = sgdma_stg1_idx[13:0];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31, :232:27, src/main/scala/chisel3/util/Decoupled.scala:59:19
  wire        sgdma_rvDesc_valid = _GEN_0 & _sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Connect.scala:11:16, src/main/scala/chext/ip/sgdma/Sgdma.scala:285:32, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  wire        read_desc_resp_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
  wire        _GEN_1 = _sinkBuffered__sinkBuffer_io_enq_ready & read_desc_resp_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
  wire [63:0] read_desc_resp_bits;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
  wire [47:0] desc_addr = read_desc_resp_bits[47:0];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31, :301:26, :303:26
  wire [9:0]  desc_len = read_desc_resp_bits[57:48];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31, :301:26, :304:25
  wire [5:0]  desc_flags = read_desc_resp_bits[63:58];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31, :301:26, :305:27
  wire        _GEN_2 = sgdma_stg2_waitCycles == 48'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34, :311:32
  wire        _GEN_3 = desc_flags == 6'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :301:26, :312:29
  wire        _GEN_4 = desc_flags == 6'h3;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:301:26, :312:67
  wire        _GEN_5 = _GEN_3 | _GEN_4;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:312:{29,53,67}
  wire        _GEN_6 = _GEN_1 & _GEN_2 & _GEN_5;	// src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}, src/main/scala/chext/ip/sgdma/Sgdma.scala:311:{32,41}, :312:{53,92}, :313:37
  wire        read_desc_resp_ready = working & modeSgdma & _GEN_1 & _GEN_2;	// src/main/scala/chext/elastic/Arrival.scala:35:18, :65:{28,45}, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :117:31, :311:{32,41}, :458:34, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:83:20
  wire        _GEN_7 = _sinkBuffered__sinkBuffer_io_deq_bits_flags == 6'h1;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :340:25
  wire        _GEN_8 = working & modeSgdma & sgdma_rvDesc_valid;	// src/main/scala/chext/elastic/Connect.scala:11:16, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :337:26, :340:50, :458:34, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  wire        m_axi__ar_valid = _GEN_8 & _GEN_7;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:337:26, :340:{25,50}, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  wire        _GEN_9 = _sinkBuffered__sinkBuffer_io_deq_bits_flags == 6'h3;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:312:67, :361:31
  wire        sgdma_rvAW_valid =
    _GEN_8 & ~_GEN_7 & _GEN_9 & ~sgdma_discardReadData & sgdma_rvDesc_valid;	// src/main/scala/chext/elastic/Arrival.scala:29:25, src/main/scala/chext/elastic/Connect.scala:11:16, src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34, :313:37, :314:58, :337:26, :340:{25,50}, :361:{31,56}, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  reg         eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _eagerFork_result_valid_T = ~eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  assign _eagerFork_result_valid_T_2 = ~eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        eagerFork_rvAW_ready_qual1_0 = m_axi_aw_ready | eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        eagerFork_rvAW_ready_qual1_1 =
    _sgdma_queueAW_io_enq_ready | eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25
  assign sgdma_rvAW_ready =
    _GEN_0 & eagerFork_rvAW_ready_qual1_0 & eagerFork_rvAW_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:83:20, :85:22, src/main/scala/chext/ip/sgdma/Sgdma.scala:285:32, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :83:20
  wire        _GEN_10 = _sinkBuffered__sinkBuffer_1_io_enq_ready & m_axi_r_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _GEN_11 = _GEN_10 & _sgdma_queueAW_io_deq_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:{28,45}, src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25, :414:40, :415:36, src/main/scala/chisel3/util/Decoupled.scala:83:20
  wire        _GEN_12 = _GEN_10 & _sgdma_queueAW_io_deq_valid;	// src/main/scala/chext/elastic/Arrival.scala:35:18, :65:{28,45}, src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25, :414:40
  wire        m_axi__r_ready = _GEN_0 & (sgdma_discardReadData | _GEN_12);	// src/main/scala/chext/elastic/Arrival.scala:35:18, :65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34, :285:32, :399:29, :414:40, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :76:20, :83:20
  wire        m_axi__b_ready = _GEN_0 & ~sgdma_discardReadData;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :215:30, :228:34, :285:32, :399:29, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :76:20, :83:20
  wire        read_desc_req_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
  always @(posedge clock) begin	// <stdin>:9697:11, :13582:11, :17467:11, :21352:11
    if (reset) begin	// <stdin>:9697:11, :13582:11, :17467:11, :21352:11
      working <= 1'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32
      regCounter <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35
      regMode <= 8'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32
      regSgdmaIndexLO <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40
      regSgdmaIndexHI <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :97:40
      regSgdmaLengthLO <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :99:41
      regSgdmaLengthHI <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :100:41
      regSgdmaDiscardReadData <= 1'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :102:48
      regInitAddrLO <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :105:38
      regInitAddrHI <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :106:38
      regInitSizeLO <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :108:38
      regInitSizeHI <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :109:38
      regInitMaxBurstLen <= 32'h20;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:111:43
      regInitInitial_0 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :114:39
      regInitInitial_1 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :114:39
      regInitInitial_2 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :114:39
      regInitInitial_3 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :114:39
      regInitDelta_0 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :115:37
      regInitDelta_1 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :115:37
      regInitDelta_2 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :115:37
      regInitDelta_3 <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :115:37
      sgdma_count <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :227:24
      sgdma_discardReadData <= 1'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :228:34
      sgdma_stg1_count <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :231:29
      sgdma_stg1_idx <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :232:27
      sgdma_stg2_count <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :235:29
      sgdma_stg2_waitCycles <= 48'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34
      sgdma_stg3_expected <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :241:32
      sgdma_stg3_wBeatCount <= 16'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:242:34
      sgdma_stg3_received <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :244:32
      modeSgdma <= 1'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:215:30, :458:34
      eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32
      eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32
    end
    else begin	// <stdin>:9697:11, :13582:11, :17467:11, :21352:11
      automatic logic        _GEN_13;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:460:17
      automatic logic        _GEN_14;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:461:18
      automatic logic [63:0] countNext;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:264:26
      automatic logic        _GEN_15;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
      automatic logic        _GEN_16;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:468:45
      automatic logic        _GEN_17;	// src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:295:35, :311:41, :312:92
      _GEN_13 = ~working & (start | wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h16);	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54, :268:39, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :211:{41,60}, :460:{8,17,27}, src/main/scala/chisel3/util/Decoupled.scala:362:21
      _GEN_14 = regMode == 8'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32, :461:18
      countNext = {regSgdmaLengthHI, regSgdmaLengthLO};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:99:41, :100:41, :264:26
      _GEN_15 = _GEN_13 & _GEN_14;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:{17,41}, :461:{18,41}
      _GEN_16 = regMode == 8'h1 | regMode == 8'h5 | regMode == 8'hD;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32, :467:15, :468:{17,45}, :469:17
      _GEN_17 = _GEN_1 & _GEN_2;	// src/main/scala/chext/elastic/Arrival.scala:65:{28,45}, src/main/scala/chext/ip/sgdma/Sgdma.scala:295:35, :311:{32,41}, :312:92
      working <=
        (~working | modeSgdma
         & ~(sgdma_stg2_count == 64'h0 & sgdma_stg3_expected == sgdma_stg3_received))
        & (_GEN_13 ? (_GEN_14 ? (|countNext) : _GEN_16 | working) : working);	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :90:35, :235:29, :237:36, :241:32, :244:32, :245:39, :264:26, :278:{22,31}, :436:{26,44}, :437:17, :452:15, :458:34, :460:{17,41}, :461:{18,41}, :468:45, :470:7, :471:15, :485:17, :486:21
      if (_GEN_13 & (_GEN_14 | _GEN_16))	// src/main/scala/chext/ip/sgdma/Sgdma.scala:214:17, :460:{17,41}, :461:{18,41}, :464:18, :468:45, :470:7, :473:18
        regCounter <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35
      else if (working)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32
        regCounter <= regCounter + 64'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :215:30
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h3
          & _wrReqData__deq_q_io_deq_bits_strb[0])	// src/main/scala/chext/amba/axi4/Util.scala:25:13, src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32, :218:24, :312:67, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regMode <= _wrReqData__deq_q_io_deq_bits_data[7:0];	// src/main/scala/chext/amba/axi4/Util.scala:27:33, src/main/scala/chext/ip/sgdma/Sgdma.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h5)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regSgdmaIndexLO <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regSgdmaIndexLO[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regSgdmaIndexLO[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regSgdmaIndexLO[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regSgdmaIndexLO[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h6)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:97:40, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regSgdmaIndexHI <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regSgdmaIndexHI[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regSgdmaIndexHI[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regSgdmaIndexHI[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regSgdmaIndexHI[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:97:40, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h7)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:99:41, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regSgdmaLengthLO <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regSgdmaLengthLO[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regSgdmaLengthLO[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regSgdmaLengthLO[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regSgdmaLengthLO[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:99:41, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h8)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:100:41, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regSgdmaLengthHI <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regSgdmaLengthHI[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regSgdmaLengthHI[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regSgdmaLengthHI[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regSgdmaLengthHI[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:100:41, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h4
          & _wrReqData__deq_q_io_deq_bits_strb[0])	// src/main/scala/chext/amba/axi4/Util.scala:25:13, src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:102:48, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regSgdmaDiscardReadData <= _wrReqData__deq_q_io_deq_bits_data[0];	// src/main/scala/chext/amba/axi4/Util.scala:27:33, src/main/scala/chext/ip/sgdma/Sgdma.scala:102:48, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h9)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:105:38, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitAddrLO <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitAddrLO[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitAddrLO[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitAddrLO[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitAddrLO[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:105:38, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'hA)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:106:38, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitAddrHI <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitAddrHI[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitAddrHI[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitAddrHI[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitAddrHI[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:106:38, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'hB)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:108:38, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitSizeLO <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitSizeLO[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitSizeLO[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitSizeLO[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitSizeLO[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:108:38, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'hC)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:109:38, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitSizeHI <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitSizeHI[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitSizeHI[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitSizeHI[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitSizeHI[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:109:38, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'hD)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:111:43, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitMaxBurstLen <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitMaxBurstLen[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitMaxBurstLen[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitMaxBurstLen[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitMaxBurstLen[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:111:43, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'hE)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitInitial_0 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitInitial_0[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitInitial_0[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitInitial_0[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitInitial_0[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'hF)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitInitial_1 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitInitial_1[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitInitial_1[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitInitial_1[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitInitial_1[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h10)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitInitial_2 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitInitial_2[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitInitial_2[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitInitial_2[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitInitial_2[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h11)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitInitial_3 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitInitial_3[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitInitial_3[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitInitial_3[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitInitial_3[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:114:39, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h12)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitDelta_0 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitDelta_0[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitDelta_0[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitDelta_0[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitDelta_0[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h13)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitDelta_1 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitDelta_1[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitDelta_1[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitDelta_1[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitDelta_1[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h14)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitDelta_2 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitDelta_2[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitDelta_2[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitDelta_2[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitDelta_2[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h15)	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:123:11, :265:54, :268:39, :281:{26,38}, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, :218:24, src/main/scala/chisel3/util/Decoupled.scala:362:21
        regInitDelta_3 <=
          {_wrReqData__deq_q_io_deq_bits_strb[3]
             ? _wrReqData__deq_q_io_deq_bits_data[31:24]
             : regInitDelta_3[31:24],
           _wrReqData__deq_q_io_deq_bits_strb[2]
             ? _wrReqData__deq_q_io_deq_bits_data[23:16]
             : regInitDelta_3[23:16],
           _wrReqData__deq_q_io_deq_bits_strb[1]
             ? _wrReqData__deq_q_io_deq_bits_data[15:8]
             : regInitDelta_3[15:8],
           _wrReqData__deq_q_io_deq_bits_strb[0]
             ? _wrReqData__deq_q_io_deq_bits_data[7:0]
             : regInitDelta_3[7:0]};	// src/main/scala/chext/amba/axi4/Util.scala:25:13, :27:33, :28:39, :29:14, :32:7, src/main/scala/chext/ip/sgdma/Sgdma.scala:115:37, src/main/scala/chisel3/util/Decoupled.scala:362:21
      if (_GEN_15) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
        sgdma_count <= countNext;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :264:26
        sgdma_discardReadData <= regSgdmaDiscardReadData;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:102:48, :228:34
      end
      if (working & modeSgdma & _GEN & read_desc_req_ready & read_desc_req_valid) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :117:31, :285:{23,32}, :288:34, :289:20, :458:34, :460:41, :485:17, :486:21
        sgdma_stg1_count <= sgdma_stg1_count + 64'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:215:30, :231:29, :290:36
        sgdma_stg1_idx <= sgdma_stg1_idx + 64'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:215:30, :232:27, :289:32
      end
      else if (_GEN_15) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
        sgdma_stg1_count <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :231:29
        sgdma_stg1_idx <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:90:35, :232:27
      end
      if (working & modeSgdma & _GEN_17)	// src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :295:35, :311:41, :312:92, :332:24, :458:34, :460:41, :485:17, :486:21
        sgdma_stg2_count <= sgdma_stg2_count - 64'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:235:29, :332:38
      else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
        sgdma_stg2_count <= countNext;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:235:29, :264:26
      if (_GEN_0) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:285:32, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
        if (~_GEN_17 | _GEN_5) begin	// src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:295:35, :311:41, :312:{53,92}
          if (|sgdma_stg2_waitCycles)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34, :295:28
            sgdma_stg2_waitCycles <= sgdma_stg2_waitCycles - 48'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34, :296:44
          else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
            sgdma_stg2_waitCycles <= 48'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34
        end
        else	// src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:295:35, :311:41, :312:92
          sgdma_stg2_waitCycles <= desc_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34, :301:26
        if (sgdma_discardReadData) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34
          if (m_axi__r_ready & m_axi_r_valid & m_axi_r_bits_last)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:399:29, :402:28, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:83:20
            sgdma_stg3_received <= sgdma_stg3_received + 32'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:244:32, :316:50, :403:42
          else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
            sgdma_stg3_received <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :244:32
        end
        else if (m_axi__b_ready & m_axi_b_valid)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:399:29, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:51:35, :83:20
          sgdma_stg3_received <= sgdma_stg3_received + 32'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:244:32, :316:50, :432:42
        else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
          sgdma_stg3_received <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :244:32
      end
      else if (_GEN_15) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
        sgdma_stg2_waitCycles <= 48'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:238:34
        sgdma_stg3_received <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :244:32
      end
      if (working & modeSgdma & _GEN_6) begin	// src/main/scala/chext/elastic/Arrival.scala:36:25, :65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:86:32, :311:41, :312:92, :313:37, :458:34, :460:41, :485:17, :486:21
        if (sgdma_discardReadData) begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34
          if (_GEN_3)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:312:29
            sgdma_stg3_expected <= sgdma_stg3_expected + 32'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:241:32, :316:50
          else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
            sgdma_stg3_expected <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :241:32
        end
        else if (_GEN_4)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:312:67
          sgdma_stg3_expected <= sgdma_stg3_expected + 32'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:241:32, :316:50, :324:50
        else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
          sgdma_stg3_expected <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :241:32
      end
      else if (_GEN_15)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:227:24, :266:13, :460:41, :461:41
        sgdma_stg3_expected <= 32'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:96:40, :241:32
      if (~_GEN_0 | sgdma_discardReadData | ~_GEN_11) begin	// src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34, :242:34, :285:32, :399:29, :414:40, :415:36, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :83:20
      end
      else if (sgdma_stg3_wBeatLast)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:261:39
        sgdma_stg3_wBeatCount <= 16'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:242:34
      else	// src/main/scala/chext/ip/sgdma/Sgdma.scala:261:39
        sgdma_stg3_wBeatCount <= sgdma_stg3_wBeatCount + 16'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:242:34, :419:52
      if (_GEN_13)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:460:17
        modeSgdma <= _GEN_14 | ~_GEN_16 & modeSgdma;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:458:34, :461:{18,41}, :463:17, :468:45, :470:7, :472:17
      eagerFork_regs_0 <=
        eagerFork_rvAW_ready_qual1_0 & sgdma_rvAW_valid & ~sgdma_rvAW_ready;	// src/main/scala/chext/elastic/Fork.scala:75:25, :83:20, :85:22, :92:{54,57}, src/main/scala/chext/ip/sgdma/Sgdma.scala:337:26, :340:50, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :83:20
      eagerFork_regs_1 <=
        eagerFork_rvAW_ready_qual1_1 & sgdma_rvAW_valid & ~sgdma_rvAW_ready;	// src/main/scala/chext/elastic/Fork.scala:75:25, :83:20, :85:22, :92:{54,57}, src/main/scala/chext/ip/sgdma/Sgdma.scala:337:26, :340:50, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :83:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
      automatic logic [31:0] _RANDOM[0:31];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
        end	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
        working = _RANDOM[5'h0][0];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :86:32
        regCounter = {_RANDOM[5'h0][31:1], _RANDOM[5'h1], _RANDOM[5'h2][0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :86:32, :90:35
        regMode = _RANDOM[5'h2][8:1];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :90:35, :93:32
        regSgdmaIndexLO = {_RANDOM[5'h2][31:9], _RANDOM[5'h3][8:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :90:35, :96:40
        regSgdmaIndexHI = {_RANDOM[5'h3][31:9], _RANDOM[5'h4][8:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :96:40, :97:40
        regSgdmaLengthLO = {_RANDOM[5'h4][31:9], _RANDOM[5'h5][8:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :97:40, :99:41
        regSgdmaLengthHI = {_RANDOM[5'h5][31:9], _RANDOM[5'h6][8:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :99:41, :100:41
        regSgdmaDiscardReadData = _RANDOM[5'h6][9];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :100:41, :102:48
        regInitAddrLO = {_RANDOM[5'h6][31:10], _RANDOM[5'h7][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :100:41, :105:38
        regInitAddrHI = {_RANDOM[5'h7][31:10], _RANDOM[5'h8][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :105:38, :106:38
        regInitSizeLO = {_RANDOM[5'h8][31:10], _RANDOM[5'h9][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :106:38, :108:38
        regInitSizeHI = {_RANDOM[5'h9][31:10], _RANDOM[5'hA][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :108:38, :109:38
        regInitMaxBurstLen = {_RANDOM[5'hA][31:10], _RANDOM[5'hB][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :109:38, :111:43
        regInitInitial_0 = {_RANDOM[5'hB][31:10], _RANDOM[5'hC][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :111:43, :114:39
        regInitInitial_1 = {_RANDOM[5'hC][31:10], _RANDOM[5'hD][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :114:39
        regInitInitial_2 = {_RANDOM[5'hD][31:10], _RANDOM[5'hE][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :114:39
        regInitInitial_3 = {_RANDOM[5'hE][31:10], _RANDOM[5'hF][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :114:39
        regInitDelta_0 = {_RANDOM[5'hF][31:10], _RANDOM[5'h10][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :114:39, :115:37
        regInitDelta_1 = {_RANDOM[5'h10][31:10], _RANDOM[5'h11][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :115:37
        regInitDelta_2 = {_RANDOM[5'h11][31:10], _RANDOM[5'h12][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :115:37
        regInitDelta_3 = {_RANDOM[5'h12][31:10], _RANDOM[5'h13][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :115:37
        sgdma_count = {_RANDOM[5'h13][31:10], _RANDOM[5'h14], _RANDOM[5'h15][9:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :115:37, :227:24
        sgdma_discardReadData = _RANDOM[5'h15][10];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :227:24, :228:34
        sgdma_stg1_count = {_RANDOM[5'h15][31:11], _RANDOM[5'h16], _RANDOM[5'h17][10:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :227:24, :231:29
        sgdma_stg1_idx = {_RANDOM[5'h17][31:11], _RANDOM[5'h18], _RANDOM[5'h19][10:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :231:29, :232:27
        sgdma_stg2_count = {_RANDOM[5'h19][31:11], _RANDOM[5'h1A], _RANDOM[5'h1B][10:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :232:27, :235:29
        sgdma_stg2_waitCycles = {_RANDOM[5'h1B][31:11], _RANDOM[5'h1C][26:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :235:29, :238:34
        sgdma_stg3_expected = {_RANDOM[5'h1C][31:27], _RANDOM[5'h1D][26:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :238:34, :241:32
        sgdma_stg3_wBeatCount = {_RANDOM[5'h1D][31:27], _RANDOM[5'h1E][10:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :241:32, :242:34
        sgdma_stg3_received = {_RANDOM[5'h1E][31:11], _RANDOM[5'h1F][10:0]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :242:34, :244:32
        modeSgdma = _RANDOM[5'h1F][11];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :244:32, :458:34
        eagerFork_regs_0 = _RANDOM[5'h1F][12];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :244:32
        eagerFork_regs_1 = _RANDOM[5'h1F][13];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :244:32
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ChiselTrueDualPortRAM_1 initSgdma_mem (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
    .clock                (clock),
    .reset                (reset),
    .read1_req_ready      (_initSgdma_mem_read1_req_ready),
    .read1_req_valid      (_initSgdma_bridge_read_req_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .read1_req_bits       (_initSgdma_bridge_read_req_bits),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .read1_resp_ready     (_initSgdma_bridge_read_resp_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .read1_resp_valid     (_initSgdma_mem_read1_resp_valid),
    .read1_resp_bits      (_initSgdma_mem_read1_resp_bits),
    .read2_req_ready      (read_desc_req_ready),
    .read2_req_valid      (read_desc_req_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
    .read2_req_bits       (read_desc_req_bits),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
    .read2_resp_ready     (read_desc_resp_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:117:31
    .read2_resp_valid     (read_desc_resp_valid),
    .read2_resp_bits      (read_desc_resp_bits),
    .write1_req_ready     (_initSgdma_mem_write1_req_ready),
    .write1_req_valid     (_initSgdma_bridge_write_req_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .write1_req_bits_addr (_initSgdma_bridge_write_req_bits_addr),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .write1_req_bits_data (_initSgdma_bridge_write_req_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .write1_req_bits_strb (_initSgdma_bridge_write_req_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .write1_resp_ready    (_initSgdma_bridge_write_resp_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .write1_resp_valid    (_initSgdma_mem_write1_resp_valid)
  );
  Axi4FullToReadWriteBridge_2 initSgdma_bridge (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:138:24
    .clock               (clock),
    .reset               (reset),
    .s_axi_ar_ready      (s_axi_desc_ar_ready),
    .s_axi_ar_valid      (s_axi_desc_ar_valid),
    .s_axi_ar_bits_addr  (s_axi_desc_ar_bits_addr),
    .s_axi_ar_bits_len   (s_axi_desc_ar_bits_len),
    .s_axi_ar_bits_size  (s_axi_desc_ar_bits_size),
    .s_axi_ar_bits_burst (s_axi_desc_ar_bits_burst),
    .s_axi_r_ready       (s_axi_desc_r_ready),
    .s_axi_r_valid       (s_axi_desc_r_valid),
    .s_axi_r_bits_data   (s_axi_desc_r_bits_data),
    .s_axi_r_bits_last   (s_axi_desc_r_bits_last),
    .s_axi_aw_ready      (s_axi_desc_aw_ready),
    .s_axi_aw_valid      (s_axi_desc_aw_valid),
    .s_axi_aw_bits_addr  (s_axi_desc_aw_bits_addr),
    .s_axi_aw_bits_len   (s_axi_desc_aw_bits_len),
    .s_axi_aw_bits_size  (s_axi_desc_aw_bits_size),
    .s_axi_aw_bits_burst (s_axi_desc_aw_bits_burst),
    .s_axi_w_ready       (s_axi_desc_w_ready),
    .s_axi_w_valid       (s_axi_desc_w_valid),
    .s_axi_w_bits_data   (s_axi_desc_w_bits_data),
    .s_axi_w_bits_strb   (s_axi_desc_w_bits_strb),
    .s_axi_b_ready       (s_axi_desc_b_ready),
    .s_axi_b_valid       (s_axi_desc_b_valid),
    .s_axi_b_bits_resp   (s_axi_desc_b_bits_resp),
    .read_req_ready      (_initSgdma_mem_read1_req_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
    .read_req_valid      (_initSgdma_bridge_read_req_valid),
    .read_req_bits       (_initSgdma_bridge_read_req_bits),
    .read_resp_ready     (_initSgdma_bridge_read_resp_ready),
    .read_resp_valid     (_initSgdma_mem_read1_resp_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
    .read_resp_bits      (_initSgdma_mem_read1_resp_bits),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
    .write_req_ready     (_initSgdma_mem_write1_req_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
    .write_req_valid     (_initSgdma_bridge_write_req_valid),
    .write_req_bits_addr (_initSgdma_bridge_write_req_bits_addr),
    .write_req_bits_data (_initSgdma_bridge_write_req_bits_data),
    .write_req_bits_strb (_initSgdma_bridge_write_req_bits_strb),
    .write_resp_ready    (_initSgdma_bridge_write_resp_ready),
    .write_resp_valid    (_initSgdma_mem_write1_resp_valid)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:131:21
  );
  Queue2_AddressChannel s_axil__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axil_ctrl_ar_ready),
    .io_enq_valid     (s_axil_ctrl_ar_valid),
    .io_enq_bits_addr (s_axil_ctrl_ar_bits_addr),
    .io_enq_bits_prot (s_axil_ctrl_ar_bits_prot),
    .io_deq_ready     (_rdReq__deq_q_io_enq_ready),	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_valid     (_s_axil__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr (_s_axil__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_prot (_s_axil__sourceBuffer_io_deq_bits_prot)
  );
  Queue2_ReadDataChannel s_axil__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sinkBuffer_io_enq_ready),
    .io_enq_valid     (_rdRespQueue__io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .io_enq_bits_data (_rdRespQueue__io_deq_bits_data),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .io_enq_bits_resp (_rdRespQueue__io_deq_bits_resp),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .io_deq_ready     (s_axil_ctrl_r_ready),
    .io_deq_valid     (s_axil_ctrl_r_valid),
    .io_deq_bits_data (s_axil_ctrl_r_bits_data),
    .io_deq_bits_resp (s_axil_ctrl_r_bits_resp)
  );
  Queue2_AddressChannel s_axil__sourceBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axil_ctrl_aw_ready),
    .io_enq_valid     (s_axil_ctrl_aw_valid),
    .io_enq_bits_addr (s_axil_ctrl_aw_bits_addr),
    .io_enq_bits_prot (s_axil_ctrl_aw_bits_prot),
    .io_deq_ready     (_wrReq__deq_q_io_enq_ready),	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_valid     (_s_axil__sourceBuffer_1_io_deq_valid),
    .io_deq_bits_addr (_s_axil__sourceBuffer_1_io_deq_bits_addr),
    .io_deq_bits_prot (_s_axil__sourceBuffer_1_io_deq_bits_prot)
  );
  Queue2_WriteDataChannel s_axil__sourceBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axil_ctrl_w_ready),
    .io_enq_valid     (s_axil_ctrl_w_valid),
    .io_enq_bits_data (s_axil_ctrl_w_bits_data),
    .io_enq_bits_strb (s_axil_ctrl_w_bits_strb),
    .io_deq_ready     (_wrReqData__deq_q_io_enq_ready),	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_valid     (_s_axil__sourceBuffer_2_io_deq_valid),
    .io_deq_bits_data (_s_axil__sourceBuffer_2_io_deq_bits_data),
    .io_deq_bits_strb (_s_axil__sourceBuffer_2_io_deq_bits_strb)
  );
  Queue2_WriteResponseChannel_3 s_axil__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sinkBuffer_1_io_enq_ready),
    .io_enq_valid     (_wrRespQueue__io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
    .io_enq_bits_resp (2'h0),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36, src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_ready     (s_axil_ctrl_b_ready),
    .io_deq_valid     (s_axil_ctrl_b_valid),
    .io_deq_bits_resp (s_axil_ctrl_b_bits_resp)
  );
  Queue1_AddressChannel rdReq__deq_q (	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_rdReq__deq_q_io_enq_ready),
    .io_enq_valid     (_s_axil__sourceBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_addr (_s_axil__sourceBuffer_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_prot (_s_axil__sourceBuffer_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_deq_ready     (rdReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:226:35
    .io_deq_valid     (_rdReq__deq_q_io_deq_valid),
    .io_deq_bits_addr (_rdReq__deq_q_io_deq_bits_addr)
  );
  Queue1_ReadDataChannel rdRespQueue_ (	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_rdRespQueue__io_enq_ready),
    .io_enq_valid     (rdReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:226:35
    .io_enq_bits_data
      (_rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h16
         ? 32'h0
         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h15
             ? regInitDelta_3
             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h14
                 ? regInitDelta_2
                 : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h13
                     ? regInitDelta_1
                     : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h12
                         ? regInitDelta_0
                         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h11
                             ? regInitInitial_3
                             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h10
                                 ? regInitInitial_2
                                 : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'hF
                                     ? regInitInitial_1
                                     : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'hE
                                         ? regInitInitial_0
                                         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'hD
                                             ? regInitMaxBurstLen
                                             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'hC
                                                 ? regInitSizeHI
                                                 : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'hB
                                                     ? regInitSizeLO
                                                     : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'hA
                                                         ? regInitAddrHI
                                                         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h9
                                                             ? regInitAddrLO
                                                             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h8
                                                                 ? regSgdmaLengthHI
                                                                 : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h7
                                                                     ? regSgdmaLengthLO
                                                                     : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h6
                                                                         ? regSgdmaIndexHI
                                                                         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h5
                                                                             ? regSgdmaIndexLO
                                                                             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h4
                                                                                 ? {31'h0,
                                                                                    regSgdmaDiscardReadData}
                                                                                 : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h3
                                                                                     ? {24'h0,
                                                                                        regMode}
                                                                                     : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h2
                                                                                         ? regCounter[63:32]
                                                                                         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h1
                                                                                             ? regCounter[31:0]
                                                                                             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h0
                                                                                                 ? {31'h0,
                                                                                                    working}
                                                                                                 : 32'hFFFFFFFF),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:124:39, :229:39, :237:{10,29}, :241:{26,38}, :242:16, :281:26, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :86:32, :90:35, :93:32, :96:40, :97:40, :99:41, :100:41, :102:48, :105:38, :106:38, :108:38, :109:38, :111:43, :114:39, :115:37, :165:51, :166:51, :211:60, :312:67, src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_ready     (_s_axil__sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_rdRespQueue__io_deq_valid),
    .io_deq_bits_data (_rdRespQueue__io_deq_bits_data),
    .io_deq_bits_resp (_rdRespQueue__io_deq_bits_resp)
  );
  Queue1_AddressChannel wrReq__deq_q (	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_wrReq__deq_q_io_enq_ready),
    .io_enq_valid     (_s_axil__sourceBuffer_1_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_addr (_s_axil__sourceBuffer_1_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_prot (_s_axil__sourceBuffer_1_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_deq_ready     (wrReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54
    .io_deq_valid     (_wrReq__deq_q_io_deq_valid),
    .io_deq_bits_addr (_wrReq__deq_q_io_deq_bits_addr)
  );
  Queue1_WriteDataChannel wrReqData__deq_q (	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_wrReqData__deq_q_io_enq_ready),
    .io_enq_valid     (_s_axil__sourceBuffer_2_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_data (_s_axil__sourceBuffer_2_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_strb (_s_axil__sourceBuffer_2_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_deq_ready     (wrReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54
    .io_deq_valid     (_wrReqData__deq_q_io_deq_valid),
    .io_deq_bits_data (_wrReqData__deq_q_io_deq_bits_data),
    .io_deq_bits_strb (_wrReqData__deq_q_io_deq_bits_strb)
  );
  Queue1_WriteResponseChannel wrRespQueue_ (	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_wrRespQueue__io_enq_ready),
    .io_enq_valid (wrReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54
    .io_deq_ready (_s_axil__sinkBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid (_wrRespQueue__io_deq_valid)
  );
  Queue16_WriteAddressChannel sgdma_queueAW (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:256:25
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sgdma_queueAW_io_enq_ready),
    .io_enq_valid       (_GEN_0 & sgdma_rvAW_valid & _eagerFork_result_valid_T_2),	// src/main/scala/chext/elastic/Connect.scala:11:16, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/ip/sgdma/Sgdma.scala:285:32, :337:26, :340:50, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
    .io_enq_bits_addr   (_sinkBuffered__sinkBuffer_io_deq_bits_addr[15:0]),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:343:23
    .io_enq_bits_len    (_sinkBuffered__sinkBuffer_io_deq_bits_len[7:0]),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:344:22
    .io_deq_ready
      (_GEN_0 & ~sgdma_discardReadData & _GEN_11 & sgdma_stg3_wBeatLast),	// src/main/scala/chext/elastic/Arrival.scala:29:25, :65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34, :261:39, :285:32, :313:37, :314:58, :399:29, :414:40, :415:36, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20, :83:20
    .io_deq_valid       (_sgdma_queueAW_io_deq_valid),
    .io_deq_bits_addr   (/* unused */),
    .io_deq_bits_len    (_sgdma_queueAW_io_deq_bits_len),
    .io_deq_bits_size   (/* unused */),
    .io_deq_bits_burst  (/* unused */),
    .io_deq_bits_lock   (/* unused */),
    .io_deq_bits_cache  (/* unused */),
    .io_deq_bits_prot   (/* unused */),
    .io_deq_bits_qos    (/* unused */),
    .io_deq_bits_region (/* unused */)
  );
  Queue2_SgdmaDesc sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid      (_GEN_6 & (~sgdma_discardReadData | _GEN_3)),	// src/main/scala/chext/elastic/Arrival.scala:29:25, :36:25, :65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34, :311:41, :312:{29,92}, :313:37, :314:58
    .io_enq_bits_addr  (desc_addr),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:301:26
    .io_enq_bits_len   (desc_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:301:26
    .io_enq_bits_flags (desc_flags),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:301:26
    .io_deq_ready
      (_GEN_8
       & (_GEN_7
            ? m_axi_ar_ready & m_axi__ar_valid
            : _GEN_9 & (sgdma_discardReadData | sgdma_rvAW_ready & sgdma_rvAW_valid))),	// src/main/scala/chext/elastic/Fork.scala:83:20, src/main/scala/chext/ip/sgdma/Sgdma.scala:228:34, :337:26, :340:{25,50}, :358:32, :361:{31,56}, :362:33, :384:29, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:51:35, :67:20, :76:20, :83:20
    .io_deq_valid      (_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_addr  (_sinkBuffered__sinkBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_sinkBuffered__sinkBuffer_io_deq_bits_len),
    .io_deq_bits_flags (_sinkBuffered__sinkBuffer_io_deq_bits_flags)
  );
  Queue2_WriteDataChannel_1 sinkBuffered__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sinkBuffered__sinkBuffer_1_io_enq_ready),
    .io_enq_valid     (_GEN_12),	// src/main/scala/chext/elastic/Arrival.scala:35:18, :65:45, src/main/scala/chext/ip/sgdma/Sgdma.scala:414:40
    .io_enq_bits_data (m_axi_r_bits_data),
    .io_enq_bits_last (sgdma_stg3_wBeatLast),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:261:39
    .io_deq_ready     (m_axi_w_ready),
    .io_deq_valid     (_sinkBuffered__sinkBuffer_1_io_deq_valid),
    .io_deq_bits_data (m_axi_w_bits_data),
    .io_deq_bits_strb (m_axi_w_bits_strb),
    .io_deq_bits_last (m_axi_w_bits_last)
  );
  assign m_axi_ar_valid = m_axi__ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :337:26, :340:50, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  assign m_axi_ar_bits_addr = _sinkBuffered__sinkBuffer_io_deq_bits_addr[15:0];	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :343:23
  assign m_axi_ar_bits_len = _sinkBuffered__sinkBuffer_io_deq_bits_len[7:0];	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :344:22
  assign m_axi_r_ready = m_axi__r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :399:29, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:83:20
  assign m_axi_aw_valid = _GEN_0 & sgdma_rvAW_valid & _eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Connect.scala:11:16, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :285:32, :337:26, :340:50, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  assign m_axi_aw_bits_addr = _sinkBuffered__sinkBuffer_io_deq_bits_addr[15:0];	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :343:23
  assign m_axi_aw_bits_len = _sinkBuffered__sinkBuffer_io_deq_bits_len[7:0];	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :344:22
  assign m_axi_w_valid =
    _GEN_0 & ~sgdma_discardReadData & _sinkBuffered__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Arrival.scala:29:25, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :228:34, :285:32, :313:37, :314:58, :399:29, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:67:20
  assign m_axi_b_ready = m_axi__b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :399:29, :485:17, :486:21, src/main/scala/chisel3/util/Decoupled.scala:83:20
  assign busy = working;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:66:7, :86:32
endmodule

// VCS coverage exclude_file
module ram_2x14(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [13:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [13:0] W0_data
);

  reg [13:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[13:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 14'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddressChannel_10(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:23145:11, :23247:11, :25723:11, :25825:11
                reset,	// <stdin>:23146:11, :23248:11, :25724:11, :25826:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [10:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [10:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [13:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:23145:11, :23247:11, :25723:11, :25825:11
    if (reset) begin	// <stdin>:23145:11, :23247:11, :25723:11, :25825:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:23145:11, :23247:11, :25723:11, :25825:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x14 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_prot, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[10:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[13:11];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_8x3(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [2:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [2:0] R0_data,
  input  [2:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [2:0] W0_data
);

  reg [2:0] Memory[0:7];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[2:0]] = _RANDOM_MEM[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 3'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue8_UInt3(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:23400:11, :23518:11, :23578:11, :25978:11, :26096:11, :26156:11
               reset,	// <stdin>:23401:11, :23519:11, :23579:11, :25979:11, :26097:11, :26157:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire       io_enq_ready_0;	// src/main/scala/chisel3/util/Decoupled.scala:286:16, :306:{24,39}
  wire [2:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [2:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [2:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  wire       do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire       do_enq = ~(empty & io_deq_ready) & io_enq_ready_0 & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :263:27, :286:16, :298:17, :301:{26,35}, :306:{24,39}
  assign io_enq_ready_0 = io_deq_ready | ~(ptr_match & maybe_full);	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24, :286:{16,19}, :306:{24,39}
  always @(posedge clock) begin	// <stdin>:23400:11, :23518:11, :23578:11, :25978:11, :26096:11, :26156:11
    if (reset) begin	// <stdin>:23400:11, :23518:11, :23578:11, :25978:11, :26096:11, :26156:11
      enq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:23400:11, :23518:11, :23578:11, :25978:11, :26096:11, :26156:11
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
        enq_ptr_value <= enq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:264:27, :298:17, :300:14
        deq_ptr_value <= deq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :264:27, :276:{15,27}, :277:16, :298:17, :300:14, :301:{26,35}
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :298:17, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][5:3];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_8x3 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = io_enq_ready_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :286:16, :306:{24,39}
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits = empty ? io_enq_bits : _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :261:25, :293:17, :298:17, :299:19
endmodule

module elasticDemux(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [10:0] io_source_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [2:0]  io_source_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [10:0] io_sinks_0_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_0_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [10:0] io_sinks_1_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_1_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [10:0] io_sinks_2_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_2_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [10:0] io_sinks_3_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_3_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_4_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_4_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [10:0] io_sinks_4_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_4_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [2:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [7:0] _GEN =
    {{io_sinks_0_ready},
     {io_sinks_0_ready},
     {io_sinks_0_ready},
     {io_sinks_4_ready},
     {io_sinks_3_ready},
     {io_sinks_2_ready},
     {io_sinks_1_ready},
     {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 3'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :27:28, :34:{22,30}
  assign io_sinks_0_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 3'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 3'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & io_select_bits == 3'h3;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_4_valid = valid & io_select_bits == 3'h4;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_4_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_4_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

module elasticMux(	// src/main/scala/chext/elastic/Mux.scala:10:7
  output        io_sources_0_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_0_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_0_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_sources_0_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_1_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_1_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_1_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_sources_1_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_2_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_2_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_2_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_sources_2_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_3_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_3_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_3_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_sources_3_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_4_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_4_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_4_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_sources_4_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sink_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sink_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [31:0] io_sink_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [1:0]  io_sink_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [2:0]  io_select_bits	// src/main/scala/chext/elastic/Mux.scala:20:14
);

  wire [7:0]       _GEN =
    {{io_sources_0_valid},
     {io_sources_0_valid},
     {io_sources_0_valid},
     {io_sources_4_valid},
     {io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [7:0][31:0] _GEN_0 =
    {{io_sources_0_bits_data},
     {io_sources_0_bits_data},
     {io_sources_0_bits_data},
     {io_sources_4_bits_data},
     {io_sources_3_bits_data},
     {io_sources_2_bits_data},
     {io_sources_1_bits_data},
     {io_sources_0_bits_data}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [7:0][1:0]  _GEN_1 =
    {{io_sources_0_bits_resp},
     {io_sources_0_bits_resp},
     {io_sources_0_bits_resp},
     {io_sources_4_bits_resp},
     {io_sources_3_bits_resp},
     {io_sources_2_bits_resp},
     {io_sources_1_bits_resp},
     {io_sources_0_bits_resp}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire             valid = io_select_valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire             fire = valid & io_sink_ready;	// src/main/scala/chext/elastic/Mux.scala:26:39, :27:28
  assign io_sources_0_ready = fire & io_select_bits == 3'h0;	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39, :27:28, :31:{21,28}
  assign io_sources_1_ready = fire & io_select_bits == 3'h1;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_2_ready = fire & io_select_bits == 3'h2;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_3_ready = fire & io_select_bits == 3'h3;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_4_ready = fire & io_select_bits == 3'h4;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sink_valid = valid;	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_data = _GEN_0[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_resp = _GEN_1[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28
endmodule

module elasticDemux_2(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [31:0] io_source_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [3:0]  io_source_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_0_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_0_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_1_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_1_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_2_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_2_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_3_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_3_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_4_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_4_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_4_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_4_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [2:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [7:0] _GEN =
    {{io_sinks_0_ready},
     {io_sinks_0_ready},
     {io_sinks_0_ready},
     {io_sinks_4_ready},
     {io_sinks_3_ready},
     {io_sinks_2_ready},
     {io_sinks_1_ready},
     {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 3'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :27:28, :34:{22,30}
  assign io_sinks_0_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 3'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 3'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & io_select_bits == 3'h3;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_4_valid = valid & io_select_bits == 3'h4;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_4_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_4_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

module elasticMux_1(	// src/main/scala/chext/elastic/Mux.scala:10:7
  output       io_sources_0_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_sources_0_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0] io_sources_0_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output       io_sources_1_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_sources_1_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0] io_sources_1_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output       io_sources_2_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_sources_2_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0] io_sources_2_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output       io_sources_3_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_sources_3_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0] io_sources_3_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output       io_sources_4_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_sources_4_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0] io_sources_4_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_sink_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output       io_sink_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [1:0] io_sink_bits_resp,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output       io_select_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input        io_select_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [2:0] io_select_bits	// src/main/scala/chext/elastic/Mux.scala:20:14
);

  wire [7:0]      _GEN =
    {{io_sources_0_valid},
     {io_sources_0_valid},
     {io_sources_0_valid},
     {io_sources_4_valid},
     {io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [7:0][1:0] _GEN_0 =
    {{io_sources_0_bits_resp},
     {io_sources_0_bits_resp},
     {io_sources_0_bits_resp},
     {io_sources_4_bits_resp},
     {io_sources_3_bits_resp},
     {io_sources_2_bits_resp},
     {io_sources_1_bits_resp},
     {io_sources_0_bits_resp}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire            valid = io_select_valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire            fire = valid & io_sink_ready;	// src/main/scala/chext/elastic/Mux.scala:26:39, :27:28
  assign io_sources_0_ready = fire & io_select_bits == 3'h0;	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39, :27:28, :31:{21,28}
  assign io_sources_1_ready = fire & io_select_bits == 3'h1;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_2_ready = fire & io_select_bits == 3'h2;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_3_ready = fire & io_select_bits == 3'h3;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_4_ready = fire & io_select_bits == 3'h4;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sink_valid = valid;	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_resp = _GEN_0[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28
endmodule

module axi4LiteDemux(	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
  input         clock,	// <stdin>:23727:11, :26305:11
                reset,	// <stdin>:23728:11, :26306:11
  output        s_axil_ar_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input         s_axil_ar_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input  [10:0] s_axil_ar_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input  [2:0]  s_axil_ar_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input         s_axil_r_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output        s_axil_r_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output [31:0] s_axil_r_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output [1:0]  s_axil_r_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output        s_axil_aw_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input         s_axil_aw_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input  [10:0] s_axil_aw_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input  [2:0]  s_axil_aw_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output        s_axil_w_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input         s_axil_w_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input  [31:0] s_axil_w_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input  [3:0]  s_axil_w_bits_strb,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input         s_axil_b_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output        s_axil_b_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  output [1:0]  s_axil_b_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:48:18
  input         m_axil_0_ar_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_0_ar_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_0_ar_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_0_ar_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_0_r_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_0_r_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [31:0] m_axil_0_r_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_0_r_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_0_aw_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_0_aw_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_0_aw_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_0_aw_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_0_w_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_0_w_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [31:0] m_axil_0_w_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [3:0]  m_axil_0_w_bits_strb,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_0_b_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_0_b_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_0_b_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_1_ar_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_1_ar_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_1_ar_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_1_ar_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_1_r_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_1_r_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [31:0] m_axil_1_r_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_1_r_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_1_aw_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_1_aw_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_1_aw_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_1_aw_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_1_w_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_1_w_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [31:0] m_axil_1_w_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [3:0]  m_axil_1_w_bits_strb,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_1_b_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_1_b_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_1_b_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_2_ar_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_2_ar_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_2_ar_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_2_ar_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_2_r_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_2_r_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [31:0] m_axil_2_r_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_2_r_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_2_aw_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_2_aw_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_2_aw_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_2_aw_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_2_w_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_2_w_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [31:0] m_axil_2_w_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [3:0]  m_axil_2_w_bits_strb,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_2_b_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_2_b_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_2_b_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_3_ar_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_3_ar_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_3_ar_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_3_ar_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_3_r_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_3_r_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [31:0] m_axil_3_r_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_3_r_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_3_aw_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_3_aw_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_3_aw_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_3_aw_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_3_w_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_3_w_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [31:0] m_axil_3_w_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [3:0]  m_axil_3_w_bits_strb,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_3_b_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_3_b_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_3_b_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_4_ar_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_4_ar_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_4_ar_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_4_ar_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_4_r_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_4_r_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [31:0] m_axil_4_r_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_4_r_bits_resp,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_4_aw_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_4_aw_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [10:0] m_axil_4_aw_bits_addr,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [2:0]  m_axil_4_aw_bits_prot,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_4_w_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_4_w_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [31:0] m_axil_4_w_bits_data,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output [3:0]  m_axil_4_w_bits_strb,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  output        m_axil_4_b_ready,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input         m_axil_4_b_valid,	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
  input  [1:0]  m_axil_4_b_bits_resp	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:49:18
);

  wire        _write_mux_io_sink_valid;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire [1:0]  _write_mux_io_sink_bits_resp;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _write_mux_io_select_ready;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _write_demux_1_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_1_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_portQueueB_io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28
  wire        _write_portQueueB_io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28
  wire [2:0]  _write_portQueueB_io_deq_bits;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28
  wire        _write_portQueueW_io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28
  wire        _write_portQueueW_io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28
  wire [2:0]  _write_portQueueW_io_deq_bits;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28
  wire        _read_mux_io_sink_valid;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire [31:0] _read_mux_io_sink_bits_data;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire [1:0]  _read_mux_io_sink_bits_resp;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _read_mux_io_select_ready;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _read_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _read_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _read_portQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27
  wire        _read_portQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27
  wire [2:0]  _read_portQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27
  wire        _s_axil__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sourceBuffer_2_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [31:0] _s_axil__sourceBuffer_2_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axil__sourceBuffer_2_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sourceBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [10:0] _s_axil__sourceBuffer_1_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axil__sourceBuffer_1_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [10:0] _s_axil__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axil__sourceBuffer_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg         read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire        read_eagerFork_arPort_ready_qual1_0 =
    _read_demux_io_source_ready | read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_eagerFork_arPort_ready_qual1_1 =
    _read_demux_io_select_ready | read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_eagerFork_arPort_ready_qual1_2 =
    _read_portQueue_io_enq_ready | read_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_result_ready =
    read_eagerFork_arPort_ready_qual1_0 & read_eagerFork_arPort_ready_qual1_1
    & read_eagerFork_arPort_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  reg         write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_3;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire        write_eagerFork_awPort_ready_qual1_0 =
    _write_demux_io_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_awPort_ready_qual1_1 =
    _write_demux_io_select_ready | write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_awPort_ready_qual1_2 =
    _write_portQueueW_io_enq_ready | write_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_awPort_ready_qual1_3 =
    _write_portQueueB_io_enq_ready | write_eagerFork_regs_3;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_result_ready =
    write_eagerFork_awPort_ready_qual1_0 & write_eagerFork_awPort_ready_qual1_1
    & write_eagerFork_awPort_ready_qual1_2 & write_eagerFork_awPort_ready_qual1_3;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  always @(posedge clock) begin	// <stdin>:23727:11, :26305:11
    if (reset) begin	// <stdin>:23727:11, :26305:11
      read_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_3 <= 1'h0;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:23727:11, :26305:11
      read_eagerFork_regs_0 <=
        read_eagerFork_arPort_ready_qual1_0 & _s_axil__sourceBuffer_io_deq_valid
        & ~read_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_eagerFork_regs_1 <=
        read_eagerFork_arPort_ready_qual1_1 & _s_axil__sourceBuffer_io_deq_valid
        & ~read_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_eagerFork_regs_2 <=
        read_eagerFork_arPort_ready_qual1_2 & _s_axil__sourceBuffer_io_deq_valid
        & ~read_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_0 <=
        write_eagerFork_awPort_ready_qual1_0 & _s_axil__sourceBuffer_1_io_deq_valid
        & ~write_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_awPort_ready_qual1_1 & _s_axil__sourceBuffer_1_io_deq_valid
        & ~write_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_2 <=
        write_eagerFork_awPort_ready_qual1_2 & _s_axil__sourceBuffer_1_io_deq_valid
        & ~write_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_3 <=
        write_eagerFork_awPort_ready_qual1_3 & _s_axil__sourceBuffer_1_io_deq_valid
        & ~write_result_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
        read_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_eagerFork_regs_2 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_2 = _RANDOM[/*Zero width*/ 1'b0][5];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_3 = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:43:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddressChannel_10 s_axil__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axil_ar_ready),
    .io_enq_valid     (s_axil_ar_valid),
    .io_enq_bits_addr (s_axil_ar_bits_addr),
    .io_enq_bits_prot (s_axil_ar_bits_prot),
    .io_deq_ready     (read_result_ready),	// src/main/scala/chext/elastic/Fork.scala:87:23
    .io_deq_valid     (_s_axil__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr (_s_axil__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_prot (_s_axil__sourceBuffer_io_deq_bits_prot)
  );
  Queue2_ReadDataChannel s_axil__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sinkBuffer_io_enq_ready),
    .io_enq_valid     (_read_mux_io_sink_valid),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_enq_bits_data (_read_mux_io_sink_bits_data),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_enq_bits_resp (_read_mux_io_sink_bits_resp),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_ready     (s_axil_r_ready),
    .io_deq_valid     (s_axil_r_valid),
    .io_deq_bits_data (s_axil_r_bits_data),
    .io_deq_bits_resp (s_axil_r_bits_resp)
  );
  Queue2_AddressChannel_10 s_axil__sourceBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axil_aw_ready),
    .io_enq_valid     (s_axil_aw_valid),
    .io_enq_bits_addr (s_axil_aw_bits_addr),
    .io_enq_bits_prot (s_axil_aw_bits_prot),
    .io_deq_ready     (write_result_ready),	// src/main/scala/chext/elastic/Fork.scala:87:23
    .io_deq_valid     (_s_axil__sourceBuffer_1_io_deq_valid),
    .io_deq_bits_addr (_s_axil__sourceBuffer_1_io_deq_bits_addr),
    .io_deq_bits_prot (_s_axil__sourceBuffer_1_io_deq_bits_prot)
  );
  Queue2_WriteDataChannel s_axil__sourceBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axil_w_ready),
    .io_enq_valid     (s_axil_w_valid),
    .io_enq_bits_data (s_axil_w_bits_data),
    .io_enq_bits_strb (s_axil_w_bits_strb),
    .io_deq_ready     (_write_demux_1_io_source_ready),	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_deq_valid     (_s_axil__sourceBuffer_2_io_deq_valid),
    .io_deq_bits_data (_s_axil__sourceBuffer_2_io_deq_bits_data),
    .io_deq_bits_strb (_s_axil__sourceBuffer_2_io_deq_bits_strb)
  );
  Queue2_WriteResponseChannel_3 s_axil__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sinkBuffer_1_io_enq_ready),
    .io_enq_valid     (_write_mux_io_sink_valid),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_enq_bits_resp (_write_mux_io_sink_bits_resp),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_ready     (s_axil_b_ready),
    .io_deq_valid     (s_axil_b_valid),
    .io_deq_bits_resp (s_axil_b_bits_resp)
  );
  Queue8_UInt3 read_portQueue (	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_portQueue_io_enq_ready),
    .io_enq_valid (_s_axil__sourceBuffer_io_deq_valid & ~read_eagerFork_regs_2),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (_s_axil__sourceBuffer_io_deq_bits_addr[10:8]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:541:67, :597:67
    .io_deq_ready (_read_mux_io_select_ready),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_valid (_read_portQueue_io_deq_valid),
    .io_deq_bits  (_read_portQueue_io_deq_bits)
  );
  elasticDemux read_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_read_demux_io_source_ready),
    .io_source_valid      (_s_axil__sourceBuffer_io_deq_valid & ~read_eagerFork_regs_0),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_addr  (_s_axil__sourceBuffer_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_prot  (_s_axil__sourceBuffer_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sinks_0_ready     (m_axil_0_ar_ready),
    .io_sinks_0_valid     (m_axil_0_ar_valid),
    .io_sinks_0_bits_addr (m_axil_0_ar_bits_addr),
    .io_sinks_0_bits_prot (m_axil_0_ar_bits_prot),
    .io_sinks_1_ready     (m_axil_1_ar_ready),
    .io_sinks_1_valid     (m_axil_1_ar_valid),
    .io_sinks_1_bits_addr (m_axil_1_ar_bits_addr),
    .io_sinks_1_bits_prot (m_axil_1_ar_bits_prot),
    .io_sinks_2_ready     (m_axil_2_ar_ready),
    .io_sinks_2_valid     (m_axil_2_ar_valid),
    .io_sinks_2_bits_addr (m_axil_2_ar_bits_addr),
    .io_sinks_2_bits_prot (m_axil_2_ar_bits_prot),
    .io_sinks_3_ready     (m_axil_3_ar_ready),
    .io_sinks_3_valid     (m_axil_3_ar_valid),
    .io_sinks_3_bits_addr (m_axil_3_ar_bits_addr),
    .io_sinks_3_bits_prot (m_axil_3_ar_bits_prot),
    .io_sinks_4_ready     (m_axil_4_ar_ready),
    .io_sinks_4_valid     (m_axil_4_ar_valid),
    .io_sinks_4_bits_addr (m_axil_4_ar_bits_addr),
    .io_sinks_4_bits_prot (m_axil_4_ar_bits_prot),
    .io_select_ready      (_read_demux_io_select_ready),
    .io_select_valid      (_s_axil__sourceBuffer_io_deq_valid & ~read_eagerFork_regs_1),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits       (_s_axil__sourceBuffer_io_deq_bits_addr[10:8])	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:541:67, :597:67
  );
  elasticMux read_mux (	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_sources_0_ready     (m_axil_0_r_ready),
    .io_sources_0_valid     (m_axil_0_r_valid),
    .io_sources_0_bits_data (m_axil_0_r_bits_data),
    .io_sources_0_bits_resp (m_axil_0_r_bits_resp),
    .io_sources_1_ready     (m_axil_1_r_ready),
    .io_sources_1_valid     (m_axil_1_r_valid),
    .io_sources_1_bits_data (m_axil_1_r_bits_data),
    .io_sources_1_bits_resp (m_axil_1_r_bits_resp),
    .io_sources_2_ready     (m_axil_2_r_ready),
    .io_sources_2_valid     (m_axil_2_r_valid),
    .io_sources_2_bits_data (m_axil_2_r_bits_data),
    .io_sources_2_bits_resp (m_axil_2_r_bits_resp),
    .io_sources_3_ready     (m_axil_3_r_ready),
    .io_sources_3_valid     (m_axil_3_r_valid),
    .io_sources_3_bits_data (m_axil_3_r_bits_data),
    .io_sources_3_bits_resp (m_axil_3_r_bits_resp),
    .io_sources_4_ready     (m_axil_4_r_ready),
    .io_sources_4_valid     (m_axil_4_r_valid),
    .io_sources_4_bits_data (m_axil_4_r_bits_data),
    .io_sources_4_bits_resp (m_axil_4_r_bits_resp),
    .io_sink_ready          (_s_axil__sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_sink_valid          (_read_mux_io_sink_valid),
    .io_sink_bits_data      (_read_mux_io_sink_bits_data),
    .io_sink_bits_resp      (_read_mux_io_sink_bits_resp),
    .io_select_ready        (_read_mux_io_select_ready),
    .io_select_valid        (_read_portQueue_io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27
    .io_select_bits         (_read_portQueue_io_deq_bits)	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:59:27
  );
  Queue8_UInt3 write_portQueueW (	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_portQueueW_io_enq_ready),
    .io_enq_valid (_s_axil__sourceBuffer_1_io_deq_valid & ~write_eagerFork_regs_2),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (_s_axil__sourceBuffer_1_io_deq_bits_addr[10:8]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:541:67, :597:67
    .io_deq_ready (_write_demux_1_io_select_ready),	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_deq_valid (_write_portQueueW_io_deq_valid),
    .io_deq_bits  (_write_portQueueW_io_deq_bits)
  );
  Queue8_UInt3 write_portQueueB (	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_portQueueB_io_enq_ready),
    .io_enq_valid (_s_axil__sourceBuffer_1_io_deq_valid & ~write_eagerFork_regs_3),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (_s_axil__sourceBuffer_1_io_deq_bits_addr[10:8]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:541:67, :597:67
    .io_deq_ready (_write_mux_io_select_ready),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_valid (_write_portQueueB_io_deq_valid),
    .io_deq_bits  (_write_portQueueB_io_deq_bits)
  );
  elasticDemux write_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_write_demux_io_source_ready),
    .io_source_valid
      (_s_axil__sourceBuffer_1_io_deq_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_addr  (_s_axil__sourceBuffer_1_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_prot  (_s_axil__sourceBuffer_1_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sinks_0_ready     (m_axil_0_aw_ready),
    .io_sinks_0_valid     (m_axil_0_aw_valid),
    .io_sinks_0_bits_addr (m_axil_0_aw_bits_addr),
    .io_sinks_0_bits_prot (m_axil_0_aw_bits_prot),
    .io_sinks_1_ready     (m_axil_1_aw_ready),
    .io_sinks_1_valid     (m_axil_1_aw_valid),
    .io_sinks_1_bits_addr (m_axil_1_aw_bits_addr),
    .io_sinks_1_bits_prot (m_axil_1_aw_bits_prot),
    .io_sinks_2_ready     (m_axil_2_aw_ready),
    .io_sinks_2_valid     (m_axil_2_aw_valid),
    .io_sinks_2_bits_addr (m_axil_2_aw_bits_addr),
    .io_sinks_2_bits_prot (m_axil_2_aw_bits_prot),
    .io_sinks_3_ready     (m_axil_3_aw_ready),
    .io_sinks_3_valid     (m_axil_3_aw_valid),
    .io_sinks_3_bits_addr (m_axil_3_aw_bits_addr),
    .io_sinks_3_bits_prot (m_axil_3_aw_bits_prot),
    .io_sinks_4_ready     (m_axil_4_aw_ready),
    .io_sinks_4_valid     (m_axil_4_aw_valid),
    .io_sinks_4_bits_addr (m_axil_4_aw_bits_addr),
    .io_sinks_4_bits_prot (m_axil_4_aw_bits_prot),
    .io_select_ready      (_write_demux_io_select_ready),
    .io_select_valid
      (_s_axil__sourceBuffer_1_io_deq_valid & ~write_eagerFork_regs_1),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits       (_s_axil__sourceBuffer_1_io_deq_bits_addr[10:8])	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:541:67, :597:67
  );
  elasticDemux_2 write_demux_1 (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_write_demux_1_io_source_ready),
    .io_source_valid      (_s_axil__sourceBuffer_2_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_data  (_s_axil__sourceBuffer_2_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_strb  (_s_axil__sourceBuffer_2_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sinks_0_ready     (m_axil_0_w_ready),
    .io_sinks_0_valid     (m_axil_0_w_valid),
    .io_sinks_0_bits_data (m_axil_0_w_bits_data),
    .io_sinks_0_bits_strb (m_axil_0_w_bits_strb),
    .io_sinks_1_ready     (m_axil_1_w_ready),
    .io_sinks_1_valid     (m_axil_1_w_valid),
    .io_sinks_1_bits_data (m_axil_1_w_bits_data),
    .io_sinks_1_bits_strb (m_axil_1_w_bits_strb),
    .io_sinks_2_ready     (m_axil_2_w_ready),
    .io_sinks_2_valid     (m_axil_2_w_valid),
    .io_sinks_2_bits_data (m_axil_2_w_bits_data),
    .io_sinks_2_bits_strb (m_axil_2_w_bits_strb),
    .io_sinks_3_ready     (m_axil_3_w_ready),
    .io_sinks_3_valid     (m_axil_3_w_valid),
    .io_sinks_3_bits_data (m_axil_3_w_bits_data),
    .io_sinks_3_bits_strb (m_axil_3_w_bits_strb),
    .io_sinks_4_ready     (m_axil_4_w_ready),
    .io_sinks_4_valid     (m_axil_4_w_valid),
    .io_sinks_4_bits_data (m_axil_4_w_bits_data),
    .io_sinks_4_bits_strb (m_axil_4_w_bits_strb),
    .io_select_ready      (_write_demux_1_io_select_ready),
    .io_select_valid      (_write_portQueueW_io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28
    .io_select_bits       (_write_portQueueW_io_deq_bits)	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:103:28
  );
  elasticMux_1 write_mux (	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_sources_0_ready     (m_axil_0_b_ready),
    .io_sources_0_valid     (m_axil_0_b_valid),
    .io_sources_0_bits_resp (m_axil_0_b_bits_resp),
    .io_sources_1_ready     (m_axil_1_b_ready),
    .io_sources_1_valid     (m_axil_1_b_valid),
    .io_sources_1_bits_resp (m_axil_1_b_bits_resp),
    .io_sources_2_ready     (m_axil_2_b_ready),
    .io_sources_2_valid     (m_axil_2_b_valid),
    .io_sources_2_bits_resp (m_axil_2_b_bits_resp),
    .io_sources_3_ready     (m_axil_3_b_ready),
    .io_sources_3_valid     (m_axil_3_b_valid),
    .io_sources_3_bits_resp (m_axil_3_b_bits_resp),
    .io_sources_4_ready     (m_axil_4_b_ready),
    .io_sources_4_valid     (m_axil_4_b_valid),
    .io_sources_4_bits_resp (m_axil_4_b_bits_resp),
    .io_sink_ready          (_s_axil__sinkBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_sink_valid          (_write_mux_io_sink_valid),
    .io_sink_bits_resp      (_write_mux_io_sink_bits_resp),
    .io_select_ready        (_write_mux_io_select_ready),
    .io_select_valid        (_write_portQueueB_io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28
    .io_select_bits         (_write_portQueueB_io_deq_bits)	// src/main/scala/chext/amba/axi4/lite/components/Demux.scala:112:28
  );
endmodule

// VCS coverage exclude_file
module ram_2x48(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [47:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [47:0] W0_data
);

  reg [47:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[47:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 48'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:24280:11
                reset,	// <stdin>:24281:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [18:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [18:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [47:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:24280:11
    if (reset) begin	// <stdin>:24280:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:24280:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x48 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock,
        io_enq_bits_burst,
        io_enq_bits_size,
        io_enq_bits_len,
        io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[18:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[26:19];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[29:27];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[31:30];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[36:33];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[39:37];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[43:40];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[47:44];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x67(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [66:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [66:0] W0_data
);

  reg [66:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [95:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h60; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[66:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 67'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadDataChannel_6(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:24331:11
                reset,	// <stdin>:24332:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [63:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [63:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [66:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:24331:11
    if (reset) begin	// <stdin>:24331:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:24331:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x67 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, 2'h0, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:255:14, :256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[63:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = _ram_ext_R0_data[65:64];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[66];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_WriteAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:24382:11
                reset,	// <stdin>:24383:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [18:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [18:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [47:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:24382:11
    if (reset) begin	// <stdin>:24382:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:24382:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x48 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock,
        io_enq_bits_burst,
        io_enq_bits_size,
        io_enq_bits_len,
        io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[18:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[26:19];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[29:27];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[31:30];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[36:33];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[39:37];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[43:40];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[47:44];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x73(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [72:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [72:0] W0_data
);

  reg [72:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [95:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h60; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[72:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 73'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteDataChannel_10(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:24433:11
                reset,	// <stdin>:24434:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [63:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [63:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [72:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:24433:11
    if (reset) begin	// <stdin>:24433:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:24433:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x73 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_strb, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[63:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_strb = _ram_ext_R0_data[71:64];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[72];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module TransactionTracker(	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
  input        clock,	// <stdin>:24535:11, :24753:11
               reset,	// <stdin>:24536:11, :24754:11
               io_initiate_en,	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:37:14
  input  [1:0] io_initiate_port,	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:37:14
  input        io_complete_en,	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:37:14
  output [4:0] io_query_count,	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:37:14
  output [1:0] io_query_port	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:37:14
);

  reg [4:0] tableNumOutstanding_0;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:81:44
  reg [1:0] tablePort_0;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:88:34
  always @(posedge clock) begin	// <stdin>:24535:11, :24753:11
    if (reset) begin	// <stdin>:24535:11, :24753:11
      tableNumOutstanding_0 <= 5'h0;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:81:44, :82:12
      tablePort_0 <= 2'h0;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7, :88:34
    end
    else begin	// <stdin>:24535:11, :24753:11
      if (io_initiate_en & ~io_complete_en)	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:107:{25,28}
        tableNumOutstanding_0 <= tableNumOutstanding_0 + 5'h1;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:81:44, :109:45
      else if (~io_initiate_en & io_complete_en)	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:110:{16,32}
        tableNumOutstanding_0 <= tableNumOutstanding_0 - 5'h1;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:81:44, :112:45
      if (io_initiate_en)	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:37:14
        tablePort_0 <= io_initiate_port;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:88:34
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
        end	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
        tableNumOutstanding_0 = _RANDOM[1'h0][4:0];	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7, :81:44
        tablePort_0 = _RANDOM[1'h1][9:8];	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7, :88:34
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_query_count = tableNumOutstanding_0;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7, :81:44
  assign io_query_port = tablePort_0;	// src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:11:7, :88:34
endmodule

module Queue2_Bundle2(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:24590:11, :24868:11
                reset,	// <stdin>:24591:11, :24869:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [18:0] io_enq_bits__1_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits__1_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits__1_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits__1_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits__1_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits__1_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits__1_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits__1_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits__1_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits__2,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [18:0] io_deq_bits__1_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits__1_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits__1_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits__1_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits__2	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [33:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:24590:11, :24868:11
    if (reset) begin	// <stdin>:24590:11, :24868:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:24590:11, :24868:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x34 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits__2,
        io_enq_bits__1_burst,
        io_enq_bits__1_size,
        io_enq_bits__1_len,
        io_enq_bits__1_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits__1_addr = _ram_ext_R0_data[18:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits__1_len = _ram_ext_R0_data[26:19];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits__1_size = _ram_ext_R0_data[29:27];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits__1_burst = _ram_ext_R0_data[31:30];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits__2 = _ram_ext_R0_data[33:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module elasticDemux_3(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [18:0] io_source_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [7:0]  io_source_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [2:0]  io_source_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_source_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [18:0] io_sinks_0_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_0_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_0_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_0_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [18:0] io_sinks_1_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_1_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_1_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_1_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [18:0] io_sinks_2_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_2_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_2_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_2_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [18:0] io_sinks_3_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_3_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_3_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_3_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

module elasticArbiter(	// src/main/scala/chext/elastic/Arbiter.scala:11:7
  input         clock,	// <stdin>:24668:11
                reset,	// <stdin>:24669:11
  output        io_sources_0_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_0_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [63:0] io_sources_0_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_0_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_1_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_1_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [63:0] io_sources_1_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_1_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_2_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_2_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [63:0] io_sources_2_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_2_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_3_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_3_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [63:0] io_sources_3_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_3_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sink_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sink_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [63:0] io_sink_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sink_bits_last	// src/main/scala/chext/elastic/Arbiter.scala:21:14
);

  wire             sourceReady;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  reg  [1:0]       chooser_lastChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35
  wire             _chooser_rrChoice_T_4 =
    chooser_lastChoice == 2'h0 & io_sources_1_valid;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}
  wire [1:0]       _chooser_rrChoice_T_9 =
    {1'h1, ~(~(chooser_lastChoice[1]) & io_sources_2_valid)};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]       chooser_rrChoice =
    (&chooser_lastChoice) ? 2'h0 : _chooser_rrChoice_T_4 ? 2'h1 : _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35, :33:8, :34:18, :37:26, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]       chooser_priorityChoice =
    io_sources_0_valid ? 2'h0 : io_sources_1_valid ? 2'h1 : {1'h1, ~io_sources_2_valid};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0]       _GEN =
    {{io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Chooser.scala:28:8
  wire [1:0]       _lastChoice_T =
    _GEN[chooser_rrChoice] ? chooser_rrChoice : chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0][63:0] _GEN_0 =
    {{io_sources_3_bits_data},
     {io_sources_2_bits_data},
     {io_sources_1_bits_data},
     {io_sources_0_bits_data}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0]       _GEN_1 =
    {{io_sources_3_bits_last},
     {io_sources_2_bits_last},
     {io_sources_1_bits_last},
     {io_sources_0_bits_last}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  reg              sinkSent;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
  assign sourceReady = sinkSent | io_sink_ready;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :49:30
  always @(posedge clock) begin	// <stdin>:24668:11
    if (reset) begin	// <stdin>:24668:11
      chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
      sinkSent <= 1'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
    end
    else begin	// <stdin>:24668:11
      if (_GEN[_lastChoice_T] & sourceReady) begin	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30, :52:22
        if (_GEN[chooser_rrChoice]) begin	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8
          if (&chooser_lastChoice)	// src/main/scala/chext/elastic/Chooser.scala:24:35, :34:18
            chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
          else if (_chooser_rrChoice_T_4)	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= 2'h1;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
          else	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
        end
        else	// src/main/scala/chext/elastic/Chooser.scala:28:8
          chooser_lastChoice <= chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
      end
      sinkSent <= (io_sink_ready | sinkSent) & _GEN[_lastChoice_T] & ~sourceReady;	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :40:{30,58,61}, :49:30
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        chooser_lastChoice = _RANDOM[/*Zero width*/ 1'b0][2:1];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35
        sinkSent = _RANDOM[/*Zero width*/ 1'b0][5];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_sources_0_ready = sourceReady & _lastChoice_T == 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sources_1_ready = sourceReady & _lastChoice_T == 2'h1;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30, src/main/scala/chisel3/util/Mux.scala:50:70
  assign io_sources_2_ready = sourceReady & _lastChoice_T == 2'h2;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, :37:13, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sources_3_ready = sourceReady & (&_lastChoice_T);	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sink_valid = _GEN[_lastChoice_T] & ~sinkSent;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :47:{30,33}
  assign io_sink_bits_data = _GEN_0[_lastChoice_T];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_last = _GEN_1[_lastChoice_T];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
endmodule

// VCS coverage exclude_file
module ram_8x2(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [2:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [1:0] R0_data,
  input  [2:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [1:0] W0_data
);

  reg [1:0] Memory[0:7];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[2:0]] = _RANDOM_MEM[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 2'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue8_UInt2(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:24808:11, :40185:11
               reset,	// <stdin>:24809:11, :40186:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire       io_enq_ready_0;	// src/main/scala/chisel3/util/Decoupled.scala:286:16, :306:{24,39}
  wire [1:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [2:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [2:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  wire       do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire       do_enq = ~(empty & io_deq_ready) & io_enq_ready_0 & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :263:27, :286:16, :298:17, :301:{26,35}, :306:{24,39}
  assign io_enq_ready_0 = io_deq_ready | ~(ptr_match & maybe_full);	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24, :286:{16,19}, :306:{24,39}
  always @(posedge clock) begin	// <stdin>:24808:11, :40185:11
    if (reset) begin	// <stdin>:24808:11, :40185:11
      enq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:24808:11, :40185:11
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
        enq_ptr_value <= enq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:264:27, :298:17, :300:14
        deq_ptr_value <= deq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :264:27, :276:{15,27}, :277:16, :298:17, :300:14, :301:{26,35}
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :298:17, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][5:3];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_8x2 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = io_enq_ready_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :286:16, :306:{24,39}
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits = empty ? io_enq_bits : _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :261:25, :293:17, :298:17, :299:19
endmodule

module elasticDemux_5(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [63:0] io_source_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [7:0]  io_source_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_0_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_0_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_1_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_1_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_2_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_2_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_3_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_3_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire & io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28, :36:27
endmodule

module elasticArbiter_1(	// src/main/scala/chext/elastic/Arbiter.scala:11:7
  input        clock,	// <stdin>:24973:11, :40299:11
               reset,	// <stdin>:24974:11, :40300:11
  output       io_sources_0_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input        io_sources_0_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0] io_sources_0_bits_resp,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output       io_sources_1_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input        io_sources_1_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0] io_sources_1_bits_resp,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output       io_sources_2_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input        io_sources_2_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0] io_sources_2_bits_resp,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output       io_sources_3_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input        io_sources_3_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0] io_sources_3_bits_resp,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input        io_sink_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output       io_sink_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [1:0] io_sink_bits_resp	// src/main/scala/chext/elastic/Arbiter.scala:21:14
);

  wire            sourceReady;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  reg  [1:0]      chooser_lastChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35
  wire            _chooser_rrChoice_T_4 = chooser_lastChoice == 2'h0 & io_sources_1_valid;	// src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}
  wire [1:0]      _chooser_rrChoice_T_9 =
    {1'h1, ~(~(chooser_lastChoice[1]) & io_sources_2_valid)};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]      chooser_rrChoice =
    (&chooser_lastChoice) ? 2'h0 : _chooser_rrChoice_T_4 ? 2'h1 : _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Chooser.scala:24:35, :33:8, :34:18, :37:26, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]      chooser_priorityChoice =
    io_sources_0_valid ? 2'h0 : io_sources_1_valid ? 2'h1 : {1'h1, ~io_sources_2_valid};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0]      _GEN =
    {{io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Chooser.scala:28:8
  wire [1:0]      _lastChoice_T =
    _GEN[chooser_rrChoice] ? chooser_rrChoice : chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0][1:0] _GEN_0 =
    {{io_sources_3_bits_resp},
     {io_sources_2_bits_resp},
     {io_sources_1_bits_resp},
     {io_sources_0_bits_resp}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  reg             sinkSent;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
  assign sourceReady = sinkSent | io_sink_ready;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :49:30
  always @(posedge clock) begin	// <stdin>:24973:11, :40299:11
    if (reset) begin	// <stdin>:24973:11, :40299:11
      chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Chooser.scala:24:35
      sinkSent <= 1'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
    end
    else begin	// <stdin>:24973:11, :40299:11
      if (_GEN[_lastChoice_T] & sourceReady) begin	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30, :52:22
        if (_GEN[chooser_rrChoice]) begin	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8
          if (&chooser_lastChoice)	// src/main/scala/chext/elastic/Chooser.scala:24:35, :34:18
            chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Chooser.scala:24:35
          else if (_chooser_rrChoice_T_4)	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= 2'h1;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
          else	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
        end
        else	// src/main/scala/chext/elastic/Chooser.scala:28:8
          chooser_lastChoice <= chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
      end
      sinkSent <= (io_sink_ready | sinkSent) & _GEN[_lastChoice_T] & ~sourceReady;	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :40:{30,58,61}, :49:30
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        chooser_lastChoice = _RANDOM[/*Zero width*/ 1'b0][2:1];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35
        sinkSent = _RANDOM[/*Zero width*/ 1'b0][5];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_sources_0_ready = sourceReady & _lastChoice_T == 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:24:35, :28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sources_1_ready = sourceReady & _lastChoice_T == 2'h1;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30, src/main/scala/chisel3/util/Mux.scala:50:70
  assign io_sources_2_ready = sourceReady & _lastChoice_T == 2'h2;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, :37:13, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sources_3_ready = sourceReady & (&_lastChoice_T);	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sink_valid = _GEN[_lastChoice_T] & ~sinkSent;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :47:{30,33}
  assign io_sink_bits_resp = _GEN_0[_lastChoice_T];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
endmodule

module axi4FullDemux(	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
  input         clock,	// <stdin>:25058:11
                reset,	// <stdin>:25059:11
  output        s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [18:0] s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [3:0]  s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [2:0]  s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [3:0]  s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
                s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output        s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output [63:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output [1:0]  s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
                s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [18:0] s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [3:0]  s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [2:0]  s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [3:0]  s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
                s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output        s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [63:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input  [7:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
                s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output        s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  output [1:0]  s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:60:17
  input         m_axi_0_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_0_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_0_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_0_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_0_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_0_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_0_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_0_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [63:0] m_axi_0_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_0_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
                m_axi_0_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_0_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_0_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_0_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_0_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_0_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_0_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_0_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [63:0] m_axi_0_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_0_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_0_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_0_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [1:0]  m_axi_0_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_1_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_1_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_1_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_1_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_1_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_1_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_1_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_1_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [63:0] m_axi_1_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_1_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
                m_axi_1_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_1_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_1_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_1_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_1_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_1_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_1_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_1_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [63:0] m_axi_1_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_1_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_1_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_1_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [1:0]  m_axi_1_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_2_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_2_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_2_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_2_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_2_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_2_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_2_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_2_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [63:0] m_axi_2_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_2_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
                m_axi_2_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_2_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_2_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_2_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_2_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_2_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_2_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_2_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [63:0] m_axi_2_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_2_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_2_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_2_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [1:0]  m_axi_2_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_3_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_3_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_3_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_3_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_3_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_3_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_3_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_3_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [63:0] m_axi_3_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_3_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
                m_axi_3_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_3_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [18:0] m_axi_3_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_3_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [2:0]  m_axi_3_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [1:0]  m_axi_3_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_3_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_3_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [63:0] m_axi_3_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output [7:0]  m_axi_3_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  output        m_axi_3_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input         m_axi_3_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
  input  [1:0]  m_axi_3_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:61:17
);

  wire        _write_arbiter_io_sink_valid;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0]  _write_arbiter_io_sink_bits_resp;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _write_demux_1_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_1_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [18:0] _write_sinkBuffered__sinkBuffer_io_deq_bits__1_addr;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [7:0]  _write_sinkBuffered__sinkBuffer_io_deq_bits__1_len;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [2:0]  _write_sinkBuffered__sinkBuffer_io_deq_bits__1_size;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [1:0]  _write_sinkBuffered__sinkBuffer_io_deq_bits__1_burst;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [1:0]  _write_sinkBuffered__sinkBuffer_io_deq_bits__2;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_portQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27
  wire        _write_portQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27
  wire [1:0]  _write_portQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27
  wire [4:0]  _write_transactionTracker_io_query_count;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:140:36
  wire [1:0]  _write_transactionTracker_io_query_port;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:140:36
  wire        _read_arbiter_io_sink_valid;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [63:0] _read_arbiter_io_sink_bits_data;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _read_arbiter_io_sink_bits_last;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _read_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _read_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _read_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [18:0] _read_sinkBuffered__sinkBuffer_io_deq_bits__1_addr;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [7:0]  _read_sinkBuffered__sinkBuffer_io_deq_bits__1_len;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [2:0]  _read_sinkBuffered__sinkBuffer_io_deq_bits__1_size;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [1:0]  _read_sinkBuffered__sinkBuffer_io_deq_bits__1_burst;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [1:0]  _read_sinkBuffered__sinkBuffer_io_deq_bits__2;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [4:0]  _read_transactionTracker_io_query_count;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:71:36
  wire [1:0]  _read_transactionTracker_io_query_port;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:71:36
  wire        _s_axi__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axi__sourceBuffer_2_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [63:0] _s_axi__sourceBuffer_2_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axi__sourceBuffer_2_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axi__sourceBuffer_2_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axi__sourceBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [18:0] _s_axi__sourceBuffer_1_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axi__sourceBuffer_1_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axi__sourceBuffer_1_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _s_axi__sourceBuffer_1_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axi__sourceBuffer_1_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axi__sourceBuffer_1_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axi__sourceBuffer_1_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axi__sourceBuffer_1_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axi__sourceBuffer_1_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axi__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axi__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [18:0] _s_axi__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axi__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axi__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _s_axi__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axi__sourceBuffer_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axi__sourceBuffer_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axi__sourceBuffer_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axi__sourceBuffer_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axi__sourceBuffer_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        s_axi__ar_ready =
    _read_sinkBuffered__sinkBuffer_io_enq_ready & _s_axi__sourceBuffer_io_deq_valid
    & (_read_transactionTracker_io_query_count == 5'h0
       | _read_transactionTracker_io_query_port == _s_axi__sourceBuffer_io_deq_bits_addr[18:17]);	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:71:36, :96:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, :76:{12,20,29}, src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/elastic/Buffer.scala:93:32, :131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:561:63
  reg         read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire        read_eagerFork_arPort_ready_qual1_0 =
    _read_demux_io_source_ready | read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_eagerFork_arPort_ready_qual1_1 =
    _read_demux_io_select_ready | read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_arPort_ready =
    read_eagerFork_arPort_ready_qual1_0 & read_eagerFork_arPort_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        s_axi__aw_ready =
    _write_sinkBuffered__sinkBuffer_io_enq_ready & _s_axi__sourceBuffer_1_io_deq_valid
    & (_write_transactionTracker_io_query_count == 5'h0
       | _write_transactionTracker_io_query_port == _s_axi__sourceBuffer_1_io_deq_bits_addr[18:17]);	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:140:36, :174:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, :76:{12,20,29}, src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chext/elastic/Buffer.scala:93:32, :131:30, src/main/scala/chext/ip/sgdma/Sgdma.scala:561:63
  reg         write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire        write_eagerFork_awPort_ready_qual1_0 =
    _write_demux_io_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_awPort_ready_qual1_1 =
    _write_demux_io_select_ready | write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_awPort_ready_qual1_2 =
    _write_portQueue_io_enq_ready | write_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_awPort_ready =
    write_eagerFork_awPort_ready_qual1_0 & write_eagerFork_awPort_ready_qual1_1
    & write_eagerFork_awPort_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  always @(posedge clock) begin	// <stdin>:25058:11
    if (reset) begin	// <stdin>:25058:11
      read_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:25058:11
      read_eagerFork_regs_0 <=
        read_eagerFork_arPort_ready_qual1_0 & _read_sinkBuffered__sinkBuffer_io_deq_valid
        & ~read_arPort_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_eagerFork_regs_1 <=
        read_eagerFork_arPort_ready_qual1_1 & _read_sinkBuffered__sinkBuffer_io_deq_valid
        & ~read_arPort_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_0 <=
        write_eagerFork_awPort_ready_qual1_0
        & _write_sinkBuffered__sinkBuffer_io_deq_valid & ~write_awPort_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_awPort_ready_qual1_1
        & _write_sinkBuffered__sinkBuffer_io_deq_valid & ~write_awPort_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_2 <=
        write_eagerFork_awPort_ready_qual1_2
        & _write_sinkBuffered__sinkBuffer_io_deq_valid & ~write_awPort_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
        read_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_2 = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:55:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_ReadAddressChannel s_axi__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (s_axi_ar_ready),
    .io_enq_valid       (s_axi_ar_valid),
    .io_enq_bits_addr   (s_axi_ar_bits_addr),
    .io_enq_bits_len    (s_axi_ar_bits_len),
    .io_enq_bits_size   (s_axi_ar_bits_size),
    .io_enq_bits_burst  (s_axi_ar_bits_burst),
    .io_enq_bits_lock   (s_axi_ar_bits_lock),
    .io_enq_bits_cache  (s_axi_ar_bits_cache),
    .io_enq_bits_prot   (s_axi_ar_bits_prot),
    .io_enq_bits_qos    (s_axi_ar_bits_qos),
    .io_enq_bits_region (s_axi_ar_bits_region),
    .io_deq_ready       (s_axi__ar_ready),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:96:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, src/main/scala/chext/elastic/Arrival.scala:65:45
    .io_deq_valid       (_s_axi__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr   (_s_axi__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len    (_s_axi__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size   (_s_axi__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst  (_s_axi__sourceBuffer_io_deq_bits_burst),
    .io_deq_bits_lock   (_s_axi__sourceBuffer_io_deq_bits_lock),
    .io_deq_bits_cache  (_s_axi__sourceBuffer_io_deq_bits_cache),
    .io_deq_bits_prot   (_s_axi__sourceBuffer_io_deq_bits_prot),
    .io_deq_bits_qos    (_s_axi__sourceBuffer_io_deq_bits_qos),
    .io_deq_bits_region (_s_axi__sourceBuffer_io_deq_bits_region)
  );
  Queue2_ReadDataChannel_6 s_axi__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axi__sinkBuffer_io_enq_ready),
    .io_enq_valid     (_read_arbiter_io_sink_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_data (_read_arbiter_io_sink_bits_data),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_last (_read_arbiter_io_sink_bits_last),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_deq_ready     (s_axi_r_ready),
    .io_deq_valid     (s_axi_r_valid),
    .io_deq_bits_data (s_axi_r_bits_data),
    .io_deq_bits_resp (s_axi_r_bits_resp),
    .io_deq_bits_last (s_axi_r_bits_last)
  );
  Queue2_WriteAddressChannel s_axi__sourceBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (s_axi_aw_ready),
    .io_enq_valid       (s_axi_aw_valid),
    .io_enq_bits_addr   (s_axi_aw_bits_addr),
    .io_enq_bits_len    (s_axi_aw_bits_len),
    .io_enq_bits_size   (s_axi_aw_bits_size),
    .io_enq_bits_burst  (s_axi_aw_bits_burst),
    .io_enq_bits_lock   (s_axi_aw_bits_lock),
    .io_enq_bits_cache  (s_axi_aw_bits_cache),
    .io_enq_bits_prot   (s_axi_aw_bits_prot),
    .io_enq_bits_qos    (s_axi_aw_bits_qos),
    .io_enq_bits_region (s_axi_aw_bits_region),
    .io_deq_ready       (s_axi__aw_ready),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:174:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, src/main/scala/chext/elastic/Arrival.scala:65:45
    .io_deq_valid       (_s_axi__sourceBuffer_1_io_deq_valid),
    .io_deq_bits_addr   (_s_axi__sourceBuffer_1_io_deq_bits_addr),
    .io_deq_bits_len    (_s_axi__sourceBuffer_1_io_deq_bits_len),
    .io_deq_bits_size   (_s_axi__sourceBuffer_1_io_deq_bits_size),
    .io_deq_bits_burst  (_s_axi__sourceBuffer_1_io_deq_bits_burst),
    .io_deq_bits_lock   (_s_axi__sourceBuffer_1_io_deq_bits_lock),
    .io_deq_bits_cache  (_s_axi__sourceBuffer_1_io_deq_bits_cache),
    .io_deq_bits_prot   (_s_axi__sourceBuffer_1_io_deq_bits_prot),
    .io_deq_bits_qos    (_s_axi__sourceBuffer_1_io_deq_bits_qos),
    .io_deq_bits_region (_s_axi__sourceBuffer_1_io_deq_bits_region)
  );
  Queue2_WriteDataChannel_10 s_axi__sourceBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (s_axi_w_ready),
    .io_enq_valid     (s_axi_w_valid),
    .io_enq_bits_data (s_axi_w_bits_data),
    .io_enq_bits_strb (s_axi_w_bits_strb),
    .io_enq_bits_last (s_axi_w_bits_last),
    .io_deq_ready     (_write_demux_1_io_source_ready),	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_deq_valid     (_s_axi__sourceBuffer_2_io_deq_valid),
    .io_deq_bits_data (_s_axi__sourceBuffer_2_io_deq_bits_data),
    .io_deq_bits_strb (_s_axi__sourceBuffer_2_io_deq_bits_strb),
    .io_deq_bits_last (_s_axi__sourceBuffer_2_io_deq_bits_last)
  );
  Queue2_WriteResponseChannel_2 s_axi__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axi__sinkBuffer_1_io_enq_ready),
    .io_enq_valid     (_write_arbiter_io_sink_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_resp (_write_arbiter_io_sink_bits_resp),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_resp (s_axi_b_bits_resp)
  );
  TransactionTracker read_transactionTracker (	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:71:36
    .clock            (clock),
    .reset            (reset),
    .io_initiate_en   (s_axi__ar_ready),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:96:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, src/main/scala/chext/elastic/Arrival.scala:65:45
    .io_initiate_port (_s_axi__sourceBuffer_io_deq_bits_addr[18:17]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:561:63
    .io_complete_en
      (_s_axi__sinkBuffer_io_enq_ready & _read_arbiter_io_sink_valid
       & _read_arbiter_io_sink_bits_last),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:130:26, src/main/scala/chext/elastic/Arbiter.scala:65:25, src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_query_count   (_read_transactionTracker_io_query_count),
    .io_query_port    (_read_transactionTracker_io_query_port)
  );
  Queue2_Bundle2 read_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock                 (clock),
    .reset                 (reset),
    .io_enq_ready          (_read_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid          (s_axi__ar_ready),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:96:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, src/main/scala/chext/elastic/Arrival.scala:65:45
    .io_enq_bits__1_addr   (_s_axi__sourceBuffer_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_len    (_s_axi__sourceBuffer_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_size   (_s_axi__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_burst  (_s_axi__sourceBuffer_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_lock   (_s_axi__sourceBuffer_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_cache  (_s_axi__sourceBuffer_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_prot   (_s_axi__sourceBuffer_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_qos    (_s_axi__sourceBuffer_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_region (_s_axi__sourceBuffer_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__2        (_s_axi__sourceBuffer_io_deq_bits_addr[18:17]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:561:63
    .io_deq_ready          (read_arPort_ready),	// src/main/scala/chext/elastic/Fork.scala:87:23
    .io_deq_valid          (_read_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits__1_addr   (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_addr),
    .io_deq_bits__1_len    (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_len),
    .io_deq_bits__1_size   (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_size),
    .io_deq_bits__1_burst  (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_burst),
    .io_deq_bits__2        (_read_sinkBuffered__sinkBuffer_io_deq_bits__2)
  );
  elasticDemux_3 read_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready       (_read_demux_io_source_ready),
    .io_source_valid
      (_read_sinkBuffered__sinkBuffer_io_deq_valid & ~read_eagerFork_regs_0),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_addr   (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_addr),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_source_bits_len    (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_len),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_source_bits_size   (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_size),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_source_bits_burst  (_read_sinkBuffered__sinkBuffer_io_deq_bits__1_burst),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_sinks_0_ready      (m_axi_0_ar_ready),
    .io_sinks_0_valid      (m_axi_0_ar_valid),
    .io_sinks_0_bits_addr  (m_axi_0_ar_bits_addr),
    .io_sinks_0_bits_len   (m_axi_0_ar_bits_len),
    .io_sinks_0_bits_size  (m_axi_0_ar_bits_size),
    .io_sinks_0_bits_burst (m_axi_0_ar_bits_burst),
    .io_sinks_1_ready      (m_axi_1_ar_ready),
    .io_sinks_1_valid      (m_axi_1_ar_valid),
    .io_sinks_1_bits_addr  (m_axi_1_ar_bits_addr),
    .io_sinks_1_bits_len   (m_axi_1_ar_bits_len),
    .io_sinks_1_bits_size  (m_axi_1_ar_bits_size),
    .io_sinks_1_bits_burst (m_axi_1_ar_bits_burst),
    .io_sinks_2_ready      (m_axi_2_ar_ready),
    .io_sinks_2_valid      (m_axi_2_ar_valid),
    .io_sinks_2_bits_addr  (m_axi_2_ar_bits_addr),
    .io_sinks_2_bits_len   (m_axi_2_ar_bits_len),
    .io_sinks_2_bits_size  (m_axi_2_ar_bits_size),
    .io_sinks_2_bits_burst (m_axi_2_ar_bits_burst),
    .io_sinks_3_ready      (m_axi_3_ar_ready),
    .io_sinks_3_valid      (m_axi_3_ar_valid),
    .io_sinks_3_bits_addr  (m_axi_3_ar_bits_addr),
    .io_sinks_3_bits_len   (m_axi_3_ar_bits_len),
    .io_sinks_3_bits_size  (m_axi_3_ar_bits_size),
    .io_sinks_3_bits_burst (m_axi_3_ar_bits_burst),
    .io_select_ready       (_read_demux_io_select_ready),
    .io_select_valid
      (_read_sinkBuffered__sinkBuffer_io_deq_valid & ~read_eagerFork_regs_1),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits        (_read_sinkBuffered__sinkBuffer_io_deq_bits__2)	// src/main/scala/chext/elastic/Buffer.scala:131:30
  );
  elasticArbiter read_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                  (clock),
    .reset                  (reset),
    .io_sources_0_ready     (m_axi_0_r_ready),
    .io_sources_0_valid     (m_axi_0_r_valid),
    .io_sources_0_bits_data (m_axi_0_r_bits_data),
    .io_sources_0_bits_last (m_axi_0_r_bits_last),
    .io_sources_1_ready     (m_axi_1_r_ready),
    .io_sources_1_valid     (m_axi_1_r_valid),
    .io_sources_1_bits_data (m_axi_1_r_bits_data),
    .io_sources_1_bits_last (m_axi_1_r_bits_last),
    .io_sources_2_ready     (m_axi_2_r_ready),
    .io_sources_2_valid     (m_axi_2_r_valid),
    .io_sources_2_bits_data (m_axi_2_r_bits_data),
    .io_sources_2_bits_last (m_axi_2_r_bits_last),
    .io_sources_3_ready     (m_axi_3_r_ready),
    .io_sources_3_valid     (m_axi_3_r_valid),
    .io_sources_3_bits_data (m_axi_3_r_bits_data),
    .io_sources_3_bits_last (m_axi_3_r_bits_last),
    .io_sink_ready          (_s_axi__sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_sink_valid          (_read_arbiter_io_sink_valid),
    .io_sink_bits_data      (_read_arbiter_io_sink_bits_data),
    .io_sink_bits_last      (_read_arbiter_io_sink_bits_last)
  );
  TransactionTracker write_transactionTracker (	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:140:36
    .clock            (clock),
    .reset            (reset),
    .io_initiate_en   (s_axi__aw_ready),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:174:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, src/main/scala/chext/elastic/Arrival.scala:65:45
    .io_initiate_port (_s_axi__sourceBuffer_1_io_deq_bits_addr[18:17]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:561:63
    .io_complete_en   (_s_axi__sinkBuffer_1_io_enq_ready & _write_arbiter_io_sink_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_query_count   (_write_transactionTracker_io_query_count),
    .io_query_port    (_write_transactionTracker_io_query_port)
  );
  Queue8_UInt2 write_portQueue (	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_portQueue_io_enq_ready),
    .io_enq_valid
      (_write_sinkBuffered__sinkBuffer_io_deq_valid & ~write_eagerFork_regs_2),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (_write_sinkBuffered__sinkBuffer_io_deq_bits__2),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready (_write_demux_1_io_select_ready),	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_deq_valid (_write_portQueue_io_deq_valid),
    .io_deq_bits  (_write_portQueue_io_deq_bits)
  );
  Queue2_Bundle2 write_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock                 (clock),
    .reset                 (reset),
    .io_enq_ready          (_write_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid          (s_axi__aw_ready),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:174:58, src/main/scala/chext/amba/axi4/full/components/helpers/TransactionTracker.scala:58:20, src/main/scala/chext/elastic/Arrival.scala:65:45
    .io_enq_bits__1_addr   (_s_axi__sourceBuffer_1_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_len    (_s_axi__sourceBuffer_1_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_size   (_s_axi__sourceBuffer_1_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_burst  (_s_axi__sourceBuffer_1_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_lock   (_s_axi__sourceBuffer_1_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_cache  (_s_axi__sourceBuffer_1_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_prot   (_s_axi__sourceBuffer_1_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_qos    (_s_axi__sourceBuffer_1_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__1_region (_s_axi__sourceBuffer_1_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits__2        (_s_axi__sourceBuffer_1_io_deq_bits_addr[18:17]),	// src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chext/ip/sgdma/Sgdma.scala:561:63
    .io_deq_ready          (write_awPort_ready),	// src/main/scala/chext/elastic/Fork.scala:87:23
    .io_deq_valid          (_write_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits__1_addr   (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_addr),
    .io_deq_bits__1_len    (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_len),
    .io_deq_bits__1_size   (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_size),
    .io_deq_bits__1_burst  (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_burst),
    .io_deq_bits__2        (_write_sinkBuffered__sinkBuffer_io_deq_bits__2)
  );
  elasticDemux_3 write_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready       (_write_demux_io_source_ready),
    .io_source_valid
      (_write_sinkBuffered__sinkBuffer_io_deq_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_addr   (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_addr),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_source_bits_len    (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_len),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_source_bits_size   (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_size),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_source_bits_burst  (_write_sinkBuffered__sinkBuffer_io_deq_bits__1_burst),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_sinks_0_ready      (m_axi_0_aw_ready),
    .io_sinks_0_valid      (m_axi_0_aw_valid),
    .io_sinks_0_bits_addr  (m_axi_0_aw_bits_addr),
    .io_sinks_0_bits_len   (m_axi_0_aw_bits_len),
    .io_sinks_0_bits_size  (m_axi_0_aw_bits_size),
    .io_sinks_0_bits_burst (m_axi_0_aw_bits_burst),
    .io_sinks_1_ready      (m_axi_1_aw_ready),
    .io_sinks_1_valid      (m_axi_1_aw_valid),
    .io_sinks_1_bits_addr  (m_axi_1_aw_bits_addr),
    .io_sinks_1_bits_len   (m_axi_1_aw_bits_len),
    .io_sinks_1_bits_size  (m_axi_1_aw_bits_size),
    .io_sinks_1_bits_burst (m_axi_1_aw_bits_burst),
    .io_sinks_2_ready      (m_axi_2_aw_ready),
    .io_sinks_2_valid      (m_axi_2_aw_valid),
    .io_sinks_2_bits_addr  (m_axi_2_aw_bits_addr),
    .io_sinks_2_bits_len   (m_axi_2_aw_bits_len),
    .io_sinks_2_bits_size  (m_axi_2_aw_bits_size),
    .io_sinks_2_bits_burst (m_axi_2_aw_bits_burst),
    .io_sinks_3_ready      (m_axi_3_aw_ready),
    .io_sinks_3_valid      (m_axi_3_aw_valid),
    .io_sinks_3_bits_addr  (m_axi_3_aw_bits_addr),
    .io_sinks_3_bits_len   (m_axi_3_aw_bits_len),
    .io_sinks_3_bits_size  (m_axi_3_aw_bits_size),
    .io_sinks_3_bits_burst (m_axi_3_aw_bits_burst),
    .io_select_ready       (_write_demux_io_select_ready),
    .io_select_valid
      (_write_sinkBuffered__sinkBuffer_io_deq_valid & ~write_eagerFork_regs_1),	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits        (_write_sinkBuffered__sinkBuffer_io_deq_bits__2)	// src/main/scala/chext/elastic/Buffer.scala:131:30
  );
  elasticDemux_5 write_demux_1 (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_write_demux_1_io_source_ready),
    .io_source_valid      (_s_axi__sourceBuffer_2_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_data  (_s_axi__sourceBuffer_2_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_strb  (_s_axi__sourceBuffer_2_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_source_bits_last  (_s_axi__sourceBuffer_2_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sinks_0_ready     (m_axi_0_w_ready),
    .io_sinks_0_valid     (m_axi_0_w_valid),
    .io_sinks_0_bits_data (m_axi_0_w_bits_data),
    .io_sinks_0_bits_strb (m_axi_0_w_bits_strb),
    .io_sinks_1_ready     (m_axi_1_w_ready),
    .io_sinks_1_valid     (m_axi_1_w_valid),
    .io_sinks_1_bits_data (m_axi_1_w_bits_data),
    .io_sinks_1_bits_strb (m_axi_1_w_bits_strb),
    .io_sinks_2_ready     (m_axi_2_w_ready),
    .io_sinks_2_valid     (m_axi_2_w_valid),
    .io_sinks_2_bits_data (m_axi_2_w_bits_data),
    .io_sinks_2_bits_strb (m_axi_2_w_bits_strb),
    .io_sinks_3_ready     (m_axi_3_w_ready),
    .io_sinks_3_valid     (m_axi_3_w_valid),
    .io_sinks_3_bits_data (m_axi_3_w_bits_data),
    .io_sinks_3_bits_strb (m_axi_3_w_bits_strb),
    .io_select_ready      (_write_demux_1_io_select_ready),
    .io_select_valid      (_write_portQueue_io_deq_valid),	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27
    .io_select_bits       (_write_portQueue_io_deq_bits)	// src/main/scala/chext/amba/axi4/full/components/Demux.scala:152:27
  );
  elasticArbiter_1 write_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                  (clock),
    .reset                  (reset),
    .io_sources_0_ready     (m_axi_0_b_ready),
    .io_sources_0_valid     (m_axi_0_b_valid),
    .io_sources_0_bits_resp (m_axi_0_b_bits_resp),
    .io_sources_1_ready     (m_axi_1_b_ready),
    .io_sources_1_valid     (m_axi_1_b_valid),
    .io_sources_1_bits_resp (m_axi_1_b_bits_resp),
    .io_sources_2_ready     (m_axi_2_b_ready),
    .io_sources_2_valid     (m_axi_2_b_valid),
    .io_sources_2_bits_resp (m_axi_2_b_bits_resp),
    .io_sources_3_ready     (m_axi_3_b_ready),
    .io_sources_3_valid     (m_axi_3_b_valid),
    .io_sources_3_bits_resp (m_axi_3_b_bits_resp),
    .io_sink_ready          (_s_axi__sinkBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_sink_valid          (_write_arbiter_io_sink_valid),
    .io_sink_bits_resp      (_write_arbiter_io_sink_bits_resp)
  );
endmodule

module SgdmaMulti(	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
  input          clock,	// <stdin>:26858:11
                 reset,	// <stdin>:26859:11
  output         s_axi_desc_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [18:0]  s_axi_desc_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [7:0]   s_axi_desc_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [2:0]   s_axi_desc_ar_bits_size,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [1:0]   s_axi_desc_ar_bits_burst,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_ar_bits_lock,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [3:0]   s_axi_desc_ar_bits_cache,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [2:0]   s_axi_desc_ar_bits_prot,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [3:0]   s_axi_desc_ar_bits_qos,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
                 s_axi_desc_ar_bits_region,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output         s_axi_desc_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output [63:0]  s_axi_desc_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output [1:0]   s_axi_desc_r_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output         s_axi_desc_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
                 s_axi_desc_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [18:0]  s_axi_desc_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [7:0]   s_axi_desc_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [2:0]   s_axi_desc_aw_bits_size,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [1:0]   s_axi_desc_aw_bits_burst,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_aw_bits_lock,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [3:0]   s_axi_desc_aw_bits_cache,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [2:0]   s_axi_desc_aw_bits_prot,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [3:0]   s_axi_desc_aw_bits_qos,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
                 s_axi_desc_aw_bits_region,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output         s_axi_desc_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [63:0]  s_axi_desc_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input  [7:0]   s_axi_desc_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  input          s_axi_desc_w_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
                 s_axi_desc_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output         s_axi_desc_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output [1:0]   s_axi_desc_b_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:516:22
  output         s_axil_ctrl_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input          s_axil_ctrl_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input  [10:0]  s_axil_ctrl_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input  [2:0]   s_axil_ctrl_ar_bits_prot,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input          s_axil_ctrl_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output         s_axil_ctrl_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output [31:0]  s_axil_ctrl_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output [1:0]   s_axil_ctrl_r_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output         s_axil_ctrl_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input          s_axil_ctrl_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input  [10:0]  s_axil_ctrl_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input  [2:0]   s_axil_ctrl_aw_bits_prot,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output         s_axil_ctrl_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input          s_axil_ctrl_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input  [31:0]  s_axil_ctrl_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input  [3:0]   s_axil_ctrl_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input          s_axil_ctrl_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output         s_axil_ctrl_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  output [1:0]   s_axil_ctrl_b_bits_resp,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:517:23
  input          m_axiN_0_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_0_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_0_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_0_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_0_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_0_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input  [127:0] m_axiN_0_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_0_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_0_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_0_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_0_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_0_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_0_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_0_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [127:0] m_axiN_0_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_0_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_0_w_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_0_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_0_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_1_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_1_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_1_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_1_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_1_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_1_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input  [127:0] m_axiN_1_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_1_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_1_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_1_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_1_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_1_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_1_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_1_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [127:0] m_axiN_1_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_1_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_1_w_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_1_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_1_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_2_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_2_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_2_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_2_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_2_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_2_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input  [127:0] m_axiN_2_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_2_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_2_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_2_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_2_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_2_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_2_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_2_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [127:0] m_axiN_2_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_2_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_2_w_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_2_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_2_b_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_3_ar_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_3_ar_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_3_ar_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_3_ar_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_3_r_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_3_r_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input  [127:0] m_axiN_3_r_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_3_r_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_3_aw_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_3_aw_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_3_aw_bits_addr,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [7:0]   m_axiN_3_aw_bits_len,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_3_w_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_3_w_valid,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [127:0] m_axiN_3_w_bits_data,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output [15:0]  m_axiN_3_w_bits_strb,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  output         m_axiN_3_w_bits_last,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
                 m_axiN_3_b_ready,	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
  input          m_axiN_3_b_valid	// src/main/scala/chext/ip/sgdma/Sgdma.scala:518:18
);

  wire        _demux_m_axil_0_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_0_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_0_ar_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_0_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_0_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_0_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_0_aw_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_0_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [31:0] _demux_m_axil_0_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [3:0]  _demux_m_axil_0_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_0_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_1_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_1_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_1_ar_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_1_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_1_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_1_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_1_aw_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_1_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [31:0] _demux_m_axil_1_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [3:0]  _demux_m_axil_1_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_1_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_2_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_2_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_2_ar_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_2_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_2_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_2_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_2_aw_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_2_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [31:0] _demux_m_axil_2_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [3:0]  _demux_m_axil_2_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_2_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_3_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_3_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_3_ar_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_3_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_3_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_3_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_3_aw_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_3_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [31:0] _demux_m_axil_3_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [3:0]  _demux_m_axil_3_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_3_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_4_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_4_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_4_ar_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_4_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_4_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [10:0] _demux_m_axil_4_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [2:0]  _demux_m_axil_4_aw_bits_prot;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_4_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [31:0] _demux_m_axil_4_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire [3:0]  _demux_m_axil_4_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _demux_m_axil_4_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
  wire        _interconnectDesc_demux_m_axi_0_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_0_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_0_ar_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_0_ar_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_0_ar_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_0_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_0_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_0_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_0_aw_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_0_aw_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_0_aw_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_0_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [63:0] _interconnectDesc_demux_m_axi_0_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_0_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_0_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_1_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_1_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_1_ar_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_1_ar_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_1_ar_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_1_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_1_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_1_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_1_aw_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_1_aw_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_1_aw_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_1_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [63:0] _interconnectDesc_demux_m_axi_1_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_1_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_1_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_2_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_2_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_2_ar_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_2_ar_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_2_ar_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_2_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_2_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_2_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_2_aw_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_2_aw_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_2_aw_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_2_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [63:0] _interconnectDesc_demux_m_axi_2_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_2_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_2_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_3_ar_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_3_ar_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_3_ar_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_3_ar_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_3_ar_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_3_r_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_3_aw_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [18:0] _interconnectDesc_demux_m_axi_3_aw_bits_addr;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_3_aw_bits_len;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [2:0]  _interconnectDesc_demux_m_axi_3_aw_bits_size;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [1:0]  _interconnectDesc_demux_m_axi_3_aw_bits_burst;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_3_w_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [63:0] _interconnectDesc_demux_m_axi_3_w_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire [7:0]  _interconnectDesc_demux_m_axi_3_w_bits_strb;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _interconnectDesc_demux_m_axi_3_b_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
  wire        _wrRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
  wire        _wrRespQueue__io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
  wire        _wrReqData__deq_q_io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _wrReqData__deq_q_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _wrReq__deq_q_io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _wrReq__deq_q_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire [7:0]  _wrReq__deq_q_io_deq_bits_addr;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _rdRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire        _rdRespQueue__io_deq_valid;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire [31:0] _rdRespQueue__io_deq_bits_data;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire [1:0]  _rdRespQueue__io_deq_bits_resp;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
  wire        _rdReq__deq_q_io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _rdReq__deq_q_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire [7:0]  _rdReq__deq_q_io_deq_bits_addr;	// src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _s_axil__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _s_axil__sinkBuffer_1_io_deq_bits_resp;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sourceBuffer_2_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sourceBuffer_2_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [31:0] _s_axil__sourceBuffer_2_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _s_axil__sourceBuffer_2_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sourceBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sourceBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axil__sourceBuffer_1_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axil__sourceBuffer_1_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [31:0] _s_axil__sinkBuffer_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _s_axil__sinkBuffer_io_deq_bits_resp;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _s_axil__sourceBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _s_axil__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _s_axil__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _s_axil__sourceBuffer_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _dmaModules_3_s_axi_desc_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axi_desc_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [63:0] _dmaModules_3_s_axi_desc_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axi_desc_r_bits_last;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axi_desc_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axi_desc_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axi_desc_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_3_s_axi_desc_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axil_ctrl_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axil_ctrl_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [31:0] _dmaModules_3_s_axil_ctrl_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_3_s_axil_ctrl_r_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axil_ctrl_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axil_ctrl_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_s_axil_ctrl_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_3_s_axil_ctrl_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_3_busy;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axi_desc_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axi_desc_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [63:0] _dmaModules_2_s_axi_desc_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axi_desc_r_bits_last;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axi_desc_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axi_desc_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axi_desc_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_2_s_axi_desc_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axil_ctrl_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axil_ctrl_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [31:0] _dmaModules_2_s_axil_ctrl_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_2_s_axil_ctrl_r_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axil_ctrl_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axil_ctrl_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_s_axil_ctrl_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_2_s_axil_ctrl_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_2_busy;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axi_desc_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axi_desc_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [63:0] _dmaModules_1_s_axi_desc_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axi_desc_r_bits_last;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axi_desc_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axi_desc_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axi_desc_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_1_s_axi_desc_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axil_ctrl_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axil_ctrl_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [31:0] _dmaModules_1_s_axil_ctrl_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_1_s_axil_ctrl_r_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axil_ctrl_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axil_ctrl_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_s_axil_ctrl_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_1_s_axil_ctrl_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_1_busy;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axi_desc_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axi_desc_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [63:0] _dmaModules_0_s_axi_desc_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axi_desc_r_bits_last;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axi_desc_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axi_desc_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axi_desc_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_0_s_axi_desc_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axil_ctrl_ar_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axil_ctrl_r_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [31:0] _dmaModules_0_s_axil_ctrl_r_bits_data;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_0_s_axil_ctrl_r_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axil_ctrl_aw_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axil_ctrl_w_ready;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_s_axil_ctrl_b_valid;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire [1:0]  _dmaModules_0_s_axil_ctrl_b_bits_resp;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  wire        _dmaModules_0_busy;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  reg  [63:0] regCounter;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:523:35
  wire        rdReq = _rdReq__deq_q_io_deq_valid & _rdRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36, :226:35, src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        wrReq =
    _wrReq__deq_q_io_deq_valid & _wrReqData__deq_q_io_deq_valid
    & _wrRespQueue__io_enq_ready;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36, :265:54, src/main/scala/chisel3/util/Decoupled.scala:362:21
  wire        _busy_T_2 =
    _dmaModules_0_busy | _dmaModules_1_busy | _dmaModules_2_busy | _dmaModules_3_busy;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11, :612:56
  wire        _GEN = wrReq & _wrReq__deq_q_io_deq_bits_addr[7:2] == 6'h3;	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54, :268:39, src/main/scala/chext/ip/sgdma/Sgdma.scala:613:32, :624:24, :625:{26,52}, :627:36, src/main/scala/chisel3/util/Decoupled.scala:362:21
  always @(posedge clock) begin	// <stdin>:26858:11
    if (reset)	// <stdin>:26858:11
      regCounter <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:523:35
    else if (_GEN)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:613:32, :624:24, :625:52, :627:36
      regCounter <= 64'h0;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:523:35
    else if (_busy_T_2)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:612:56
      regCounter <= regCounter + 64'h1;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:523:35, :617:30
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
        end	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
        regCounter = {_RANDOM[1'h0], _RANDOM[1'h1]};	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7, :523:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Sgdma dmaModules_0 (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .clock                    (clock),
    .reset                    (reset),
    .s_axi_desc_ar_ready      (_dmaModules_0_s_axi_desc_ar_ready),
    .s_axi_desc_ar_valid      (_interconnectDesc_demux_m_axi_0_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_addr  (_interconnectDesc_demux_m_axi_0_ar_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_len   (_interconnectDesc_demux_m_axi_0_ar_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_size  (_interconnectDesc_demux_m_axi_0_ar_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_burst (_interconnectDesc_demux_m_axi_0_ar_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_ready       (_interconnectDesc_demux_m_axi_0_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_valid       (_dmaModules_0_s_axi_desc_r_valid),
    .s_axi_desc_r_bits_data   (_dmaModules_0_s_axi_desc_r_bits_data),
    .s_axi_desc_r_bits_last   (_dmaModules_0_s_axi_desc_r_bits_last),
    .s_axi_desc_aw_ready      (_dmaModules_0_s_axi_desc_aw_ready),
    .s_axi_desc_aw_valid      (_interconnectDesc_demux_m_axi_0_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_addr  (_interconnectDesc_demux_m_axi_0_aw_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_len   (_interconnectDesc_demux_m_axi_0_aw_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_size  (_interconnectDesc_demux_m_axi_0_aw_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_burst (_interconnectDesc_demux_m_axi_0_aw_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_ready       (_dmaModules_0_s_axi_desc_w_ready),
    .s_axi_desc_w_valid       (_interconnectDesc_demux_m_axi_0_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_data   (_interconnectDesc_demux_m_axi_0_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_strb   (_interconnectDesc_demux_m_axi_0_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_ready       (_interconnectDesc_demux_m_axi_0_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_valid       (_dmaModules_0_s_axi_desc_b_valid),
    .s_axi_desc_b_bits_resp   (_dmaModules_0_s_axi_desc_b_bits_resp),
    .s_axil_ctrl_ar_ready     (_dmaModules_0_s_axil_ctrl_ar_ready),
    .s_axil_ctrl_ar_valid     (_demux_m_axil_1_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_addr (_demux_m_axil_1_ar_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_prot (_demux_m_axil_1_ar_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_ready      (_demux_m_axil_1_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_valid      (_dmaModules_0_s_axil_ctrl_r_valid),
    .s_axil_ctrl_r_bits_data  (_dmaModules_0_s_axil_ctrl_r_bits_data),
    .s_axil_ctrl_r_bits_resp  (_dmaModules_0_s_axil_ctrl_r_bits_resp),
    .s_axil_ctrl_aw_ready     (_dmaModules_0_s_axil_ctrl_aw_ready),
    .s_axil_ctrl_aw_valid     (_demux_m_axil_1_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_addr (_demux_m_axil_1_aw_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_prot (_demux_m_axil_1_aw_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_ready      (_dmaModules_0_s_axil_ctrl_w_ready),
    .s_axil_ctrl_w_valid      (_demux_m_axil_1_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_data  (_demux_m_axil_1_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_strb  (_demux_m_axil_1_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_ready      (_demux_m_axil_1_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_valid      (_dmaModules_0_s_axil_ctrl_b_valid),
    .s_axil_ctrl_b_bits_resp  (_dmaModules_0_s_axil_ctrl_b_bits_resp),
    .m_axi_ar_ready           (m_axiN_0_ar_ready),
    .m_axi_ar_valid           (m_axiN_0_ar_valid),
    .m_axi_ar_bits_addr       (m_axiN_0_ar_bits_addr),
    .m_axi_ar_bits_len        (m_axiN_0_ar_bits_len),
    .m_axi_r_ready            (m_axiN_0_r_ready),
    .m_axi_r_valid            (m_axiN_0_r_valid),
    .m_axi_r_bits_data        (m_axiN_0_r_bits_data),
    .m_axi_r_bits_last        (m_axiN_0_r_bits_last),
    .m_axi_aw_ready           (m_axiN_0_aw_ready),
    .m_axi_aw_valid           (m_axiN_0_aw_valid),
    .m_axi_aw_bits_addr       (m_axiN_0_aw_bits_addr),
    .m_axi_aw_bits_len        (m_axiN_0_aw_bits_len),
    .m_axi_w_ready            (m_axiN_0_w_ready),
    .m_axi_w_valid            (m_axiN_0_w_valid),
    .m_axi_w_bits_data        (m_axiN_0_w_bits_data),
    .m_axi_w_bits_strb        (m_axiN_0_w_bits_strb),
    .m_axi_w_bits_last        (m_axiN_0_w_bits_last),
    .m_axi_b_ready            (m_axiN_0_b_ready),
    .m_axi_b_valid            (m_axiN_0_b_valid),
    .start                    (_GEN),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:613:32, :624:24, :625:52, :627:36
    .busy                     (_dmaModules_0_busy)
  );
  Sgdma dmaModules_1 (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .clock                    (clock),
    .reset                    (reset),
    .s_axi_desc_ar_ready      (_dmaModules_1_s_axi_desc_ar_ready),
    .s_axi_desc_ar_valid      (_interconnectDesc_demux_m_axi_1_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_addr  (_interconnectDesc_demux_m_axi_1_ar_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_len   (_interconnectDesc_demux_m_axi_1_ar_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_size  (_interconnectDesc_demux_m_axi_1_ar_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_burst (_interconnectDesc_demux_m_axi_1_ar_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_ready       (_interconnectDesc_demux_m_axi_1_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_valid       (_dmaModules_1_s_axi_desc_r_valid),
    .s_axi_desc_r_bits_data   (_dmaModules_1_s_axi_desc_r_bits_data),
    .s_axi_desc_r_bits_last   (_dmaModules_1_s_axi_desc_r_bits_last),
    .s_axi_desc_aw_ready      (_dmaModules_1_s_axi_desc_aw_ready),
    .s_axi_desc_aw_valid      (_interconnectDesc_demux_m_axi_1_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_addr  (_interconnectDesc_demux_m_axi_1_aw_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_len   (_interconnectDesc_demux_m_axi_1_aw_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_size  (_interconnectDesc_demux_m_axi_1_aw_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_burst (_interconnectDesc_demux_m_axi_1_aw_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_ready       (_dmaModules_1_s_axi_desc_w_ready),
    .s_axi_desc_w_valid       (_interconnectDesc_demux_m_axi_1_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_data   (_interconnectDesc_demux_m_axi_1_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_strb   (_interconnectDesc_demux_m_axi_1_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_ready       (_interconnectDesc_demux_m_axi_1_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_valid       (_dmaModules_1_s_axi_desc_b_valid),
    .s_axi_desc_b_bits_resp   (_dmaModules_1_s_axi_desc_b_bits_resp),
    .s_axil_ctrl_ar_ready     (_dmaModules_1_s_axil_ctrl_ar_ready),
    .s_axil_ctrl_ar_valid     (_demux_m_axil_2_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_addr (_demux_m_axil_2_ar_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_prot (_demux_m_axil_2_ar_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_ready      (_demux_m_axil_2_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_valid      (_dmaModules_1_s_axil_ctrl_r_valid),
    .s_axil_ctrl_r_bits_data  (_dmaModules_1_s_axil_ctrl_r_bits_data),
    .s_axil_ctrl_r_bits_resp  (_dmaModules_1_s_axil_ctrl_r_bits_resp),
    .s_axil_ctrl_aw_ready     (_dmaModules_1_s_axil_ctrl_aw_ready),
    .s_axil_ctrl_aw_valid     (_demux_m_axil_2_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_addr (_demux_m_axil_2_aw_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_prot (_demux_m_axil_2_aw_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_ready      (_dmaModules_1_s_axil_ctrl_w_ready),
    .s_axil_ctrl_w_valid      (_demux_m_axil_2_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_data  (_demux_m_axil_2_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_strb  (_demux_m_axil_2_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_ready      (_demux_m_axil_2_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_valid      (_dmaModules_1_s_axil_ctrl_b_valid),
    .s_axil_ctrl_b_bits_resp  (_dmaModules_1_s_axil_ctrl_b_bits_resp),
    .m_axi_ar_ready           (m_axiN_1_ar_ready),
    .m_axi_ar_valid           (m_axiN_1_ar_valid),
    .m_axi_ar_bits_addr       (m_axiN_1_ar_bits_addr),
    .m_axi_ar_bits_len        (m_axiN_1_ar_bits_len),
    .m_axi_r_ready            (m_axiN_1_r_ready),
    .m_axi_r_valid            (m_axiN_1_r_valid),
    .m_axi_r_bits_data        (m_axiN_1_r_bits_data),
    .m_axi_r_bits_last        (m_axiN_1_r_bits_last),
    .m_axi_aw_ready           (m_axiN_1_aw_ready),
    .m_axi_aw_valid           (m_axiN_1_aw_valid),
    .m_axi_aw_bits_addr       (m_axiN_1_aw_bits_addr),
    .m_axi_aw_bits_len        (m_axiN_1_aw_bits_len),
    .m_axi_w_ready            (m_axiN_1_w_ready),
    .m_axi_w_valid            (m_axiN_1_w_valid),
    .m_axi_w_bits_data        (m_axiN_1_w_bits_data),
    .m_axi_w_bits_strb        (m_axiN_1_w_bits_strb),
    .m_axi_w_bits_last        (m_axiN_1_w_bits_last),
    .m_axi_b_ready            (m_axiN_1_b_ready),
    .m_axi_b_valid            (m_axiN_1_b_valid),
    .start                    (_GEN),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:613:32, :624:24, :625:52, :627:36
    .busy                     (_dmaModules_1_busy)
  );
  Sgdma dmaModules_2 (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .clock                    (clock),
    .reset                    (reset),
    .s_axi_desc_ar_ready      (_dmaModules_2_s_axi_desc_ar_ready),
    .s_axi_desc_ar_valid      (_interconnectDesc_demux_m_axi_2_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_addr  (_interconnectDesc_demux_m_axi_2_ar_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_len   (_interconnectDesc_demux_m_axi_2_ar_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_size  (_interconnectDesc_demux_m_axi_2_ar_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_burst (_interconnectDesc_demux_m_axi_2_ar_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_ready       (_interconnectDesc_demux_m_axi_2_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_valid       (_dmaModules_2_s_axi_desc_r_valid),
    .s_axi_desc_r_bits_data   (_dmaModules_2_s_axi_desc_r_bits_data),
    .s_axi_desc_r_bits_last   (_dmaModules_2_s_axi_desc_r_bits_last),
    .s_axi_desc_aw_ready      (_dmaModules_2_s_axi_desc_aw_ready),
    .s_axi_desc_aw_valid      (_interconnectDesc_demux_m_axi_2_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_addr  (_interconnectDesc_demux_m_axi_2_aw_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_len   (_interconnectDesc_demux_m_axi_2_aw_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_size  (_interconnectDesc_demux_m_axi_2_aw_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_burst (_interconnectDesc_demux_m_axi_2_aw_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_ready       (_dmaModules_2_s_axi_desc_w_ready),
    .s_axi_desc_w_valid       (_interconnectDesc_demux_m_axi_2_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_data   (_interconnectDesc_demux_m_axi_2_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_strb   (_interconnectDesc_demux_m_axi_2_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_ready       (_interconnectDesc_demux_m_axi_2_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_valid       (_dmaModules_2_s_axi_desc_b_valid),
    .s_axi_desc_b_bits_resp   (_dmaModules_2_s_axi_desc_b_bits_resp),
    .s_axil_ctrl_ar_ready     (_dmaModules_2_s_axil_ctrl_ar_ready),
    .s_axil_ctrl_ar_valid     (_demux_m_axil_3_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_addr (_demux_m_axil_3_ar_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_prot (_demux_m_axil_3_ar_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_ready      (_demux_m_axil_3_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_valid      (_dmaModules_2_s_axil_ctrl_r_valid),
    .s_axil_ctrl_r_bits_data  (_dmaModules_2_s_axil_ctrl_r_bits_data),
    .s_axil_ctrl_r_bits_resp  (_dmaModules_2_s_axil_ctrl_r_bits_resp),
    .s_axil_ctrl_aw_ready     (_dmaModules_2_s_axil_ctrl_aw_ready),
    .s_axil_ctrl_aw_valid     (_demux_m_axil_3_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_addr (_demux_m_axil_3_aw_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_prot (_demux_m_axil_3_aw_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_ready      (_dmaModules_2_s_axil_ctrl_w_ready),
    .s_axil_ctrl_w_valid      (_demux_m_axil_3_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_data  (_demux_m_axil_3_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_strb  (_demux_m_axil_3_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_ready      (_demux_m_axil_3_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_valid      (_dmaModules_2_s_axil_ctrl_b_valid),
    .s_axil_ctrl_b_bits_resp  (_dmaModules_2_s_axil_ctrl_b_bits_resp),
    .m_axi_ar_ready           (m_axiN_2_ar_ready),
    .m_axi_ar_valid           (m_axiN_2_ar_valid),
    .m_axi_ar_bits_addr       (m_axiN_2_ar_bits_addr),
    .m_axi_ar_bits_len        (m_axiN_2_ar_bits_len),
    .m_axi_r_ready            (m_axiN_2_r_ready),
    .m_axi_r_valid            (m_axiN_2_r_valid),
    .m_axi_r_bits_data        (m_axiN_2_r_bits_data),
    .m_axi_r_bits_last        (m_axiN_2_r_bits_last),
    .m_axi_aw_ready           (m_axiN_2_aw_ready),
    .m_axi_aw_valid           (m_axiN_2_aw_valid),
    .m_axi_aw_bits_addr       (m_axiN_2_aw_bits_addr),
    .m_axi_aw_bits_len        (m_axiN_2_aw_bits_len),
    .m_axi_w_ready            (m_axiN_2_w_ready),
    .m_axi_w_valid            (m_axiN_2_w_valid),
    .m_axi_w_bits_data        (m_axiN_2_w_bits_data),
    .m_axi_w_bits_strb        (m_axiN_2_w_bits_strb),
    .m_axi_w_bits_last        (m_axiN_2_w_bits_last),
    .m_axi_b_ready            (m_axiN_2_b_ready),
    .m_axi_b_valid            (m_axiN_2_b_valid),
    .start                    (_GEN),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:613:32, :624:24, :625:52, :627:36
    .busy                     (_dmaModules_2_busy)
  );
  Sgdma dmaModules_3 (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .clock                    (clock),
    .reset                    (reset),
    .s_axi_desc_ar_ready      (_dmaModules_3_s_axi_desc_ar_ready),
    .s_axi_desc_ar_valid      (_interconnectDesc_demux_m_axi_3_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_addr  (_interconnectDesc_demux_m_axi_3_ar_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_len   (_interconnectDesc_demux_m_axi_3_ar_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_size  (_interconnectDesc_demux_m_axi_3_ar_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_ar_bits_burst (_interconnectDesc_demux_m_axi_3_ar_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_ready       (_interconnectDesc_demux_m_axi_3_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_r_valid       (_dmaModules_3_s_axi_desc_r_valid),
    .s_axi_desc_r_bits_data   (_dmaModules_3_s_axi_desc_r_bits_data),
    .s_axi_desc_r_bits_last   (_dmaModules_3_s_axi_desc_r_bits_last),
    .s_axi_desc_aw_ready      (_dmaModules_3_s_axi_desc_aw_ready),
    .s_axi_desc_aw_valid      (_interconnectDesc_demux_m_axi_3_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_addr  (_interconnectDesc_demux_m_axi_3_aw_bits_addr[16:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_len   (_interconnectDesc_demux_m_axi_3_aw_bits_len),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_size  (_interconnectDesc_demux_m_axi_3_aw_bits_size),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_aw_bits_burst (_interconnectDesc_demux_m_axi_3_aw_bits_burst),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_ready       (_dmaModules_3_s_axi_desc_w_ready),
    .s_axi_desc_w_valid       (_interconnectDesc_demux_m_axi_3_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_data   (_interconnectDesc_demux_m_axi_3_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_w_bits_strb   (_interconnectDesc_demux_m_axi_3_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_ready       (_interconnectDesc_demux_m_axi_3_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .s_axi_desc_b_valid       (_dmaModules_3_s_axi_desc_b_valid),
    .s_axi_desc_b_bits_resp   (_dmaModules_3_s_axi_desc_b_bits_resp),
    .s_axil_ctrl_ar_ready     (_dmaModules_3_s_axil_ctrl_ar_ready),
    .s_axil_ctrl_ar_valid     (_demux_m_axil_4_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_addr (_demux_m_axil_4_ar_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_ar_bits_prot (_demux_m_axil_4_ar_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_ready      (_demux_m_axil_4_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_r_valid      (_dmaModules_3_s_axil_ctrl_r_valid),
    .s_axil_ctrl_r_bits_data  (_dmaModules_3_s_axil_ctrl_r_bits_data),
    .s_axil_ctrl_r_bits_resp  (_dmaModules_3_s_axil_ctrl_r_bits_resp),
    .s_axil_ctrl_aw_ready     (_dmaModules_3_s_axil_ctrl_aw_ready),
    .s_axil_ctrl_aw_valid     (_demux_m_axil_4_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_addr (_demux_m_axil_4_aw_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_aw_bits_prot (_demux_m_axil_4_aw_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_ready      (_dmaModules_3_s_axil_ctrl_w_ready),
    .s_axil_ctrl_w_valid      (_demux_m_axil_4_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_data  (_demux_m_axil_4_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_w_bits_strb  (_demux_m_axil_4_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_ready      (_demux_m_axil_4_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .s_axil_ctrl_b_valid      (_dmaModules_3_s_axil_ctrl_b_valid),
    .s_axil_ctrl_b_bits_resp  (_dmaModules_3_s_axil_ctrl_b_bits_resp),
    .m_axi_ar_ready           (m_axiN_3_ar_ready),
    .m_axi_ar_valid           (m_axiN_3_ar_valid),
    .m_axi_ar_bits_addr       (m_axiN_3_ar_bits_addr),
    .m_axi_ar_bits_len        (m_axiN_3_ar_bits_len),
    .m_axi_r_ready            (m_axiN_3_r_ready),
    .m_axi_r_valid            (m_axiN_3_r_valid),
    .m_axi_r_bits_data        (m_axiN_3_r_bits_data),
    .m_axi_r_bits_last        (m_axiN_3_r_bits_last),
    .m_axi_aw_ready           (m_axiN_3_aw_ready),
    .m_axi_aw_valid           (m_axiN_3_aw_valid),
    .m_axi_aw_bits_addr       (m_axiN_3_aw_bits_addr),
    .m_axi_aw_bits_len        (m_axiN_3_aw_bits_len),
    .m_axi_w_ready            (m_axiN_3_w_ready),
    .m_axi_w_valid            (m_axiN_3_w_valid),
    .m_axi_w_bits_data        (m_axiN_3_w_bits_data),
    .m_axi_w_bits_strb        (m_axiN_3_w_bits_strb),
    .m_axi_w_bits_last        (m_axiN_3_w_bits_last),
    .m_axi_b_ready            (m_axiN_3_b_ready),
    .m_axi_b_valid            (m_axiN_3_b_valid),
    .start                    (_GEN),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:613:32, :624:24, :625:52, :627:36
    .busy                     (_dmaModules_3_busy)
  );
  Queue2_AddressChannel s_axil__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sourceBuffer_io_enq_ready),
    .io_enq_valid     (_demux_m_axil_0_ar_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_enq_bits_addr (_demux_m_axil_0_ar_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_enq_bits_prot (_demux_m_axil_0_ar_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_deq_ready     (_rdReq__deq_q_io_enq_ready),	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_valid     (_s_axil__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr (_s_axil__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_prot (_s_axil__sourceBuffer_io_deq_bits_prot)
  );
  Queue2_ReadDataChannel s_axil__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sinkBuffer_io_enq_ready),
    .io_enq_valid     (_rdRespQueue__io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .io_enq_bits_data (_rdRespQueue__io_deq_bits_data),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .io_enq_bits_resp (_rdRespQueue__io_deq_bits_resp),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .io_deq_ready     (_demux_m_axil_0_r_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_deq_valid     (_s_axil__sinkBuffer_io_deq_valid),
    .io_deq_bits_data (_s_axil__sinkBuffer_io_deq_bits_data),
    .io_deq_bits_resp (_s_axil__sinkBuffer_io_deq_bits_resp)
  );
  Queue2_AddressChannel s_axil__sourceBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sourceBuffer_1_io_enq_ready),
    .io_enq_valid     (_demux_m_axil_0_aw_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_enq_bits_addr (_demux_m_axil_0_aw_bits_addr[7:0]),	// src/main/scala/chext/elastic/Connect.scala:12:15, src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_enq_bits_prot (_demux_m_axil_0_aw_bits_prot),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_deq_ready     (_wrReq__deq_q_io_enq_ready),	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_valid     (_s_axil__sourceBuffer_1_io_deq_valid),
    .io_deq_bits_addr (_s_axil__sourceBuffer_1_io_deq_bits_addr),
    .io_deq_bits_prot (_s_axil__sourceBuffer_1_io_deq_bits_prot)
  );
  Queue2_WriteDataChannel s_axil__sourceBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sourceBuffer_2_io_enq_ready),
    .io_enq_valid     (_demux_m_axil_0_w_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_enq_bits_data (_demux_m_axil_0_w_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_enq_bits_strb (_demux_m_axil_0_w_bits_strb),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_deq_ready     (_wrReqData__deq_q_io_enq_ready),	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_valid     (_s_axil__sourceBuffer_2_io_deq_valid),
    .io_deq_bits_data (_s_axil__sourceBuffer_2_io_deq_bits_data),
    .io_deq_bits_strb (_s_axil__sourceBuffer_2_io_deq_bits_strb)
  );
  Queue2_WriteResponseChannel_3 s_axil__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_s_axil__sinkBuffer_1_io_enq_ready),
    .io_enq_valid     (_wrRespQueue__io_deq_valid),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
    .io_enq_bits_resp (2'h0),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:513:7
    .io_deq_ready     (_demux_m_axil_0_b_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .io_deq_valid     (_s_axil__sinkBuffer_1_io_deq_valid),
    .io_deq_bits_resp (_s_axil__sinkBuffer_1_io_deq_bits_resp)
  );
  Queue1_AddressChannel rdReq__deq_q (	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_rdReq__deq_q_io_enq_ready),
    .io_enq_valid     (_s_axil__sourceBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_addr (_s_axil__sourceBuffer_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_prot (_s_axil__sourceBuffer_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_deq_ready     (rdReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:226:35
    .io_deq_valid     (_rdReq__deq_q_io_deq_valid),
    .io_deq_bits_addr (_rdReq__deq_q_io_deq_bits_addr)
  );
  Queue1_ReadDataChannel rdRespQueue_ (	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:173:36
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_rdRespQueue__io_enq_ready),
    .io_enq_valid     (rdReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:226:35
    .io_enq_bits_data
      (_rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h3
         ? 32'h0
         : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h2
             ? regCounter[63:32]
             : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h1
                 ? regCounter[31:0]
                 : _rdReq__deq_q_io_deq_bits_addr[7:2] == 6'h0
                     ? {31'h0, _busy_T_2}
                     : 32'hFFFFFFFF),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:229:39, :237:{10,29}, :241:{26,38}, :242:16, src/main/scala/chext/ip/sgdma/Sgdma.scala:523:35, :585:51, :586:51, :612:56, :625:26, src/main/scala/chisel3/util/Decoupled.scala:362:21
    .io_deq_ready     (_s_axil__sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_rdRespQueue__io_deq_valid),
    .io_deq_bits_data (_rdRespQueue__io_deq_bits_data),
    .io_deq_bits_resp (_rdRespQueue__io_deq_bits_resp)
  );
  Queue1_AddressChannel wrReq__deq_q (	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_wrReq__deq_q_io_enq_ready),
    .io_enq_valid     (_s_axil__sourceBuffer_1_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_addr (_s_axil__sourceBuffer_1_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_prot (_s_axil__sourceBuffer_1_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_deq_ready     (wrReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54
    .io_deq_valid     (_wrReq__deq_q_io_deq_valid),
    .io_deq_bits_addr (_wrReq__deq_q_io_deq_bits_addr)
  );
  Queue1_WriteDataChannel wrReqData__deq_q (	// src/main/scala/chisel3/util/Decoupled.scala:362:21
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_wrReqData__deq_q_io_enq_ready),
    .io_enq_valid     (_s_axil__sourceBuffer_2_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_data (_s_axil__sourceBuffer_2_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_strb (_s_axil__sourceBuffer_2_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_deq_ready     (wrReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54
    .io_deq_valid     (_wrReqData__deq_q_io_deq_valid),
    .io_deq_bits_data (/* unused */),
    .io_deq_bits_strb (/* unused */)
  );
  Queue1_WriteResponseChannel wrRespQueue_ (	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:181:36
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_wrRespQueue__io_enq_ready),
    .io_enq_valid (wrReq),	// src/main/scala/chext/amba/axi4/lite/components/RegisterBlock.scala:265:54
    .io_deq_ready (_s_axil__sinkBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid (_wrRespQueue__io_deq_valid)
  );
  axi4LiteDemux interconnectControl_demux (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:539:13
    .clock                 (clock),
    .reset                 (reset),
    .s_axil_ar_ready       (/* unused */),
    .s_axil_ar_valid       (s_axil_ctrl_ar_valid),
    .s_axil_ar_bits_addr   (s_axil_ctrl_ar_bits_addr),
    .s_axil_ar_bits_prot   (s_axil_ctrl_ar_bits_prot),
    .s_axil_r_ready        (s_axil_ctrl_r_ready),
    .s_axil_r_valid        (/* unused */),
    .s_axil_r_bits_data    (/* unused */),
    .s_axil_r_bits_resp    (/* unused */),
    .s_axil_aw_ready       (/* unused */),
    .s_axil_aw_valid       (s_axil_ctrl_aw_valid),
    .s_axil_aw_bits_addr   (s_axil_ctrl_aw_bits_addr),
    .s_axil_aw_bits_prot   (s_axil_ctrl_aw_bits_prot),
    .s_axil_w_ready        (/* unused */),
    .s_axil_w_valid        (s_axil_ctrl_w_valid),
    .s_axil_w_bits_data    (s_axil_ctrl_w_bits_data),
    .s_axil_w_bits_strb    (s_axil_ctrl_w_bits_strb),
    .s_axil_b_ready        (s_axil_ctrl_b_ready),
    .s_axil_b_valid        (/* unused */),
    .s_axil_b_bits_resp    (/* unused */),
    .m_axil_0_ar_ready     (_s_axil__sourceBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axil_0_ar_valid     (/* unused */),
    .m_axil_0_ar_bits_addr (/* unused */),
    .m_axil_0_ar_bits_prot (/* unused */),
    .m_axil_0_r_ready      (/* unused */),
    .m_axil_0_r_valid      (_s_axil__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_r_bits_data  (_s_axil__sinkBuffer_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_r_bits_resp  (_s_axil__sinkBuffer_io_deq_bits_resp),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_aw_ready     (_s_axil__sourceBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axil_0_aw_valid     (/* unused */),
    .m_axil_0_aw_bits_addr (/* unused */),
    .m_axil_0_aw_bits_prot (/* unused */),
    .m_axil_0_w_ready      (_s_axil__sourceBuffer_2_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axil_0_w_valid      (/* unused */),
    .m_axil_0_w_bits_data  (/* unused */),
    .m_axil_0_w_bits_strb  (/* unused */),
    .m_axil_0_b_ready      (/* unused */),
    .m_axil_0_b_valid      (_s_axil__sinkBuffer_1_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_b_bits_resp  (_s_axil__sinkBuffer_1_io_deq_bits_resp),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_1_ar_ready     (_dmaModules_0_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_ar_valid     (/* unused */),
    .m_axil_1_ar_bits_addr (/* unused */),
    .m_axil_1_ar_bits_prot (/* unused */),
    .m_axil_1_r_ready      (/* unused */),
    .m_axil_1_r_valid      (_dmaModules_0_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_r_bits_data  (_dmaModules_0_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_r_bits_resp  (_dmaModules_0_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_aw_ready     (_dmaModules_0_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_aw_valid     (/* unused */),
    .m_axil_1_aw_bits_addr (/* unused */),
    .m_axil_1_aw_bits_prot (/* unused */),
    .m_axil_1_w_ready      (_dmaModules_0_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_w_valid      (/* unused */),
    .m_axil_1_w_bits_data  (/* unused */),
    .m_axil_1_w_bits_strb  (/* unused */),
    .m_axil_1_b_ready      (/* unused */),
    .m_axil_1_b_valid      (_dmaModules_0_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_b_bits_resp  (_dmaModules_0_s_axil_ctrl_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_ar_ready     (_dmaModules_1_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_ar_valid     (/* unused */),
    .m_axil_2_ar_bits_addr (/* unused */),
    .m_axil_2_ar_bits_prot (/* unused */),
    .m_axil_2_r_ready      (/* unused */),
    .m_axil_2_r_valid      (_dmaModules_1_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_r_bits_data  (_dmaModules_1_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_r_bits_resp  (_dmaModules_1_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_aw_ready     (_dmaModules_1_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_aw_valid     (/* unused */),
    .m_axil_2_aw_bits_addr (/* unused */),
    .m_axil_2_aw_bits_prot (/* unused */),
    .m_axil_2_w_ready      (_dmaModules_1_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_w_valid      (/* unused */),
    .m_axil_2_w_bits_data  (/* unused */),
    .m_axil_2_w_bits_strb  (/* unused */),
    .m_axil_2_b_ready      (/* unused */),
    .m_axil_2_b_valid      (_dmaModules_1_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_b_bits_resp  (_dmaModules_1_s_axil_ctrl_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_ar_ready     (_dmaModules_2_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_ar_valid     (/* unused */),
    .m_axil_3_ar_bits_addr (/* unused */),
    .m_axil_3_ar_bits_prot (/* unused */),
    .m_axil_3_r_ready      (/* unused */),
    .m_axil_3_r_valid      (_dmaModules_2_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_r_bits_data  (_dmaModules_2_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_r_bits_resp  (_dmaModules_2_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_aw_ready     (_dmaModules_2_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_aw_valid     (/* unused */),
    .m_axil_3_aw_bits_addr (/* unused */),
    .m_axil_3_aw_bits_prot (/* unused */),
    .m_axil_3_w_ready      (_dmaModules_2_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_w_valid      (/* unused */),
    .m_axil_3_w_bits_data  (/* unused */),
    .m_axil_3_w_bits_strb  (/* unused */),
    .m_axil_3_b_ready      (/* unused */),
    .m_axil_3_b_valid      (_dmaModules_2_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_b_bits_resp  (_dmaModules_2_s_axil_ctrl_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_ar_ready     (_dmaModules_3_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_ar_valid     (/* unused */),
    .m_axil_4_ar_bits_addr (/* unused */),
    .m_axil_4_ar_bits_prot (/* unused */),
    .m_axil_4_r_ready      (/* unused */),
    .m_axil_4_r_valid      (_dmaModules_3_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_r_bits_data  (_dmaModules_3_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_r_bits_resp  (_dmaModules_3_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_aw_ready     (_dmaModules_3_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_aw_valid     (/* unused */),
    .m_axil_4_aw_bits_addr (/* unused */),
    .m_axil_4_aw_bits_prot (/* unused */),
    .m_axil_4_w_ready      (_dmaModules_3_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_w_valid      (/* unused */),
    .m_axil_4_w_bits_data  (/* unused */),
    .m_axil_4_w_bits_strb  (/* unused */),
    .m_axil_4_b_ready      (/* unused */),
    .m_axil_4_b_valid      (_dmaModules_3_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_b_bits_resp  (_dmaModules_3_s_axil_ctrl_b_bits_resp)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  );
  axi4FullDemux interconnectDesc_demux (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:559:13
    .clock                 (clock),
    .reset                 (reset),
    .s_axi_ar_ready        (s_axi_desc_ar_ready),
    .s_axi_ar_valid        (s_axi_desc_ar_valid),
    .s_axi_ar_bits_addr    (s_axi_desc_ar_bits_addr),
    .s_axi_ar_bits_len     (s_axi_desc_ar_bits_len),
    .s_axi_ar_bits_size    (s_axi_desc_ar_bits_size),
    .s_axi_ar_bits_burst   (s_axi_desc_ar_bits_burst),
    .s_axi_ar_bits_lock    (s_axi_desc_ar_bits_lock),
    .s_axi_ar_bits_cache   (s_axi_desc_ar_bits_cache),
    .s_axi_ar_bits_prot    (s_axi_desc_ar_bits_prot),
    .s_axi_ar_bits_qos     (s_axi_desc_ar_bits_qos),
    .s_axi_ar_bits_region  (s_axi_desc_ar_bits_region),
    .s_axi_r_ready         (s_axi_desc_r_ready),
    .s_axi_r_valid         (s_axi_desc_r_valid),
    .s_axi_r_bits_data     (s_axi_desc_r_bits_data),
    .s_axi_r_bits_resp     (s_axi_desc_r_bits_resp),
    .s_axi_r_bits_last     (s_axi_desc_r_bits_last),
    .s_axi_aw_ready        (s_axi_desc_aw_ready),
    .s_axi_aw_valid        (s_axi_desc_aw_valid),
    .s_axi_aw_bits_addr    (s_axi_desc_aw_bits_addr),
    .s_axi_aw_bits_len     (s_axi_desc_aw_bits_len),
    .s_axi_aw_bits_size    (s_axi_desc_aw_bits_size),
    .s_axi_aw_bits_burst   (s_axi_desc_aw_bits_burst),
    .s_axi_aw_bits_lock    (s_axi_desc_aw_bits_lock),
    .s_axi_aw_bits_cache   (s_axi_desc_aw_bits_cache),
    .s_axi_aw_bits_prot    (s_axi_desc_aw_bits_prot),
    .s_axi_aw_bits_qos     (s_axi_desc_aw_bits_qos),
    .s_axi_aw_bits_region  (s_axi_desc_aw_bits_region),
    .s_axi_w_ready         (s_axi_desc_w_ready),
    .s_axi_w_valid         (s_axi_desc_w_valid),
    .s_axi_w_bits_data     (s_axi_desc_w_bits_data),
    .s_axi_w_bits_strb     (s_axi_desc_w_bits_strb),
    .s_axi_w_bits_last     (s_axi_desc_w_bits_last),
    .s_axi_b_ready         (s_axi_desc_b_ready),
    .s_axi_b_valid         (s_axi_desc_b_valid),
    .s_axi_b_bits_resp     (s_axi_desc_b_bits_resp),
    .m_axi_0_ar_ready      (_dmaModules_0_s_axi_desc_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_ar_valid      (_interconnectDesc_demux_m_axi_0_ar_valid),
    .m_axi_0_ar_bits_addr  (_interconnectDesc_demux_m_axi_0_ar_bits_addr),
    .m_axi_0_ar_bits_len   (_interconnectDesc_demux_m_axi_0_ar_bits_len),
    .m_axi_0_ar_bits_size  (_interconnectDesc_demux_m_axi_0_ar_bits_size),
    .m_axi_0_ar_bits_burst (_interconnectDesc_demux_m_axi_0_ar_bits_burst),
    .m_axi_0_r_ready       (_interconnectDesc_demux_m_axi_0_r_ready),
    .m_axi_0_r_valid       (_dmaModules_0_s_axi_desc_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_r_bits_data   (_dmaModules_0_s_axi_desc_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_r_bits_last   (_dmaModules_0_s_axi_desc_r_bits_last),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_aw_ready      (_dmaModules_0_s_axi_desc_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_aw_valid      (_interconnectDesc_demux_m_axi_0_aw_valid),
    .m_axi_0_aw_bits_addr  (_interconnectDesc_demux_m_axi_0_aw_bits_addr),
    .m_axi_0_aw_bits_len   (_interconnectDesc_demux_m_axi_0_aw_bits_len),
    .m_axi_0_aw_bits_size  (_interconnectDesc_demux_m_axi_0_aw_bits_size),
    .m_axi_0_aw_bits_burst (_interconnectDesc_demux_m_axi_0_aw_bits_burst),
    .m_axi_0_w_ready       (_dmaModules_0_s_axi_desc_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_w_valid       (_interconnectDesc_demux_m_axi_0_w_valid),
    .m_axi_0_w_bits_data   (_interconnectDesc_demux_m_axi_0_w_bits_data),
    .m_axi_0_w_bits_strb   (_interconnectDesc_demux_m_axi_0_w_bits_strb),
    .m_axi_0_b_ready       (_interconnectDesc_demux_m_axi_0_b_ready),
    .m_axi_0_b_valid       (_dmaModules_0_s_axi_desc_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_0_b_bits_resp   (_dmaModules_0_s_axi_desc_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_ar_ready      (_dmaModules_1_s_axi_desc_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_ar_valid      (_interconnectDesc_demux_m_axi_1_ar_valid),
    .m_axi_1_ar_bits_addr  (_interconnectDesc_demux_m_axi_1_ar_bits_addr),
    .m_axi_1_ar_bits_len   (_interconnectDesc_demux_m_axi_1_ar_bits_len),
    .m_axi_1_ar_bits_size  (_interconnectDesc_demux_m_axi_1_ar_bits_size),
    .m_axi_1_ar_bits_burst (_interconnectDesc_demux_m_axi_1_ar_bits_burst),
    .m_axi_1_r_ready       (_interconnectDesc_demux_m_axi_1_r_ready),
    .m_axi_1_r_valid       (_dmaModules_1_s_axi_desc_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_r_bits_data   (_dmaModules_1_s_axi_desc_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_r_bits_last   (_dmaModules_1_s_axi_desc_r_bits_last),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_aw_ready      (_dmaModules_1_s_axi_desc_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_aw_valid      (_interconnectDesc_demux_m_axi_1_aw_valid),
    .m_axi_1_aw_bits_addr  (_interconnectDesc_demux_m_axi_1_aw_bits_addr),
    .m_axi_1_aw_bits_len   (_interconnectDesc_demux_m_axi_1_aw_bits_len),
    .m_axi_1_aw_bits_size  (_interconnectDesc_demux_m_axi_1_aw_bits_size),
    .m_axi_1_aw_bits_burst (_interconnectDesc_demux_m_axi_1_aw_bits_burst),
    .m_axi_1_w_ready       (_dmaModules_1_s_axi_desc_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_w_valid       (_interconnectDesc_demux_m_axi_1_w_valid),
    .m_axi_1_w_bits_data   (_interconnectDesc_demux_m_axi_1_w_bits_data),
    .m_axi_1_w_bits_strb   (_interconnectDesc_demux_m_axi_1_w_bits_strb),
    .m_axi_1_b_ready       (_interconnectDesc_demux_m_axi_1_b_ready),
    .m_axi_1_b_valid       (_dmaModules_1_s_axi_desc_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_1_b_bits_resp   (_dmaModules_1_s_axi_desc_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_ar_ready      (_dmaModules_2_s_axi_desc_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_ar_valid      (_interconnectDesc_demux_m_axi_2_ar_valid),
    .m_axi_2_ar_bits_addr  (_interconnectDesc_demux_m_axi_2_ar_bits_addr),
    .m_axi_2_ar_bits_len   (_interconnectDesc_demux_m_axi_2_ar_bits_len),
    .m_axi_2_ar_bits_size  (_interconnectDesc_demux_m_axi_2_ar_bits_size),
    .m_axi_2_ar_bits_burst (_interconnectDesc_demux_m_axi_2_ar_bits_burst),
    .m_axi_2_r_ready       (_interconnectDesc_demux_m_axi_2_r_ready),
    .m_axi_2_r_valid       (_dmaModules_2_s_axi_desc_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_r_bits_data   (_dmaModules_2_s_axi_desc_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_r_bits_last   (_dmaModules_2_s_axi_desc_r_bits_last),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_aw_ready      (_dmaModules_2_s_axi_desc_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_aw_valid      (_interconnectDesc_demux_m_axi_2_aw_valid),
    .m_axi_2_aw_bits_addr  (_interconnectDesc_demux_m_axi_2_aw_bits_addr),
    .m_axi_2_aw_bits_len   (_interconnectDesc_demux_m_axi_2_aw_bits_len),
    .m_axi_2_aw_bits_size  (_interconnectDesc_demux_m_axi_2_aw_bits_size),
    .m_axi_2_aw_bits_burst (_interconnectDesc_demux_m_axi_2_aw_bits_burst),
    .m_axi_2_w_ready       (_dmaModules_2_s_axi_desc_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_w_valid       (_interconnectDesc_demux_m_axi_2_w_valid),
    .m_axi_2_w_bits_data   (_interconnectDesc_demux_m_axi_2_w_bits_data),
    .m_axi_2_w_bits_strb   (_interconnectDesc_demux_m_axi_2_w_bits_strb),
    .m_axi_2_b_ready       (_interconnectDesc_demux_m_axi_2_b_ready),
    .m_axi_2_b_valid       (_dmaModules_2_s_axi_desc_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_2_b_bits_resp   (_dmaModules_2_s_axi_desc_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_ar_ready      (_dmaModules_3_s_axi_desc_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_ar_valid      (_interconnectDesc_demux_m_axi_3_ar_valid),
    .m_axi_3_ar_bits_addr  (_interconnectDesc_demux_m_axi_3_ar_bits_addr),
    .m_axi_3_ar_bits_len   (_interconnectDesc_demux_m_axi_3_ar_bits_len),
    .m_axi_3_ar_bits_size  (_interconnectDesc_demux_m_axi_3_ar_bits_size),
    .m_axi_3_ar_bits_burst (_interconnectDesc_demux_m_axi_3_ar_bits_burst),
    .m_axi_3_r_ready       (_interconnectDesc_demux_m_axi_3_r_ready),
    .m_axi_3_r_valid       (_dmaModules_3_s_axi_desc_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_r_bits_data   (_dmaModules_3_s_axi_desc_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_r_bits_last   (_dmaModules_3_s_axi_desc_r_bits_last),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_aw_ready      (_dmaModules_3_s_axi_desc_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_aw_valid      (_interconnectDesc_demux_m_axi_3_aw_valid),
    .m_axi_3_aw_bits_addr  (_interconnectDesc_demux_m_axi_3_aw_bits_addr),
    .m_axi_3_aw_bits_len   (_interconnectDesc_demux_m_axi_3_aw_bits_len),
    .m_axi_3_aw_bits_size  (_interconnectDesc_demux_m_axi_3_aw_bits_size),
    .m_axi_3_aw_bits_burst (_interconnectDesc_demux_m_axi_3_aw_bits_burst),
    .m_axi_3_w_ready       (_dmaModules_3_s_axi_desc_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_w_valid       (_interconnectDesc_demux_m_axi_3_w_valid),
    .m_axi_3_w_bits_data   (_interconnectDesc_demux_m_axi_3_w_bits_data),
    .m_axi_3_w_bits_strb   (_interconnectDesc_demux_m_axi_3_w_bits_strb),
    .m_axi_3_b_ready       (_interconnectDesc_demux_m_axi_3_b_ready),
    .m_axi_3_b_valid       (_dmaModules_3_s_axi_desc_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axi_3_b_bits_resp   (_dmaModules_3_s_axi_desc_b_bits_resp)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  );
  axi4LiteDemux demux (	// src/main/scala/chext/ip/sgdma/Sgdma.scala:595:13
    .clock                 (clock),
    .reset                 (reset),
    .s_axil_ar_ready       (s_axil_ctrl_ar_ready),
    .s_axil_ar_valid       (s_axil_ctrl_ar_valid),
    .s_axil_ar_bits_addr   (s_axil_ctrl_ar_bits_addr),
    .s_axil_ar_bits_prot   (s_axil_ctrl_ar_bits_prot),
    .s_axil_r_ready        (s_axil_ctrl_r_ready),
    .s_axil_r_valid        (s_axil_ctrl_r_valid),
    .s_axil_r_bits_data    (s_axil_ctrl_r_bits_data),
    .s_axil_r_bits_resp    (s_axil_ctrl_r_bits_resp),
    .s_axil_aw_ready       (s_axil_ctrl_aw_ready),
    .s_axil_aw_valid       (s_axil_ctrl_aw_valid),
    .s_axil_aw_bits_addr   (s_axil_ctrl_aw_bits_addr),
    .s_axil_aw_bits_prot   (s_axil_ctrl_aw_bits_prot),
    .s_axil_w_ready        (s_axil_ctrl_w_ready),
    .s_axil_w_valid        (s_axil_ctrl_w_valid),
    .s_axil_w_bits_data    (s_axil_ctrl_w_bits_data),
    .s_axil_w_bits_strb    (s_axil_ctrl_w_bits_strb),
    .s_axil_b_ready        (s_axil_ctrl_b_ready),
    .s_axil_b_valid        (s_axil_ctrl_b_valid),
    .s_axil_b_bits_resp    (s_axil_ctrl_b_bits_resp),
    .m_axil_0_ar_ready     (_s_axil__sourceBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axil_0_ar_valid     (_demux_m_axil_0_ar_valid),
    .m_axil_0_ar_bits_addr (_demux_m_axil_0_ar_bits_addr),
    .m_axil_0_ar_bits_prot (_demux_m_axil_0_ar_bits_prot),
    .m_axil_0_r_ready      (_demux_m_axil_0_r_ready),
    .m_axil_0_r_valid      (_s_axil__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_r_bits_data  (_s_axil__sinkBuffer_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_r_bits_resp  (_s_axil__sinkBuffer_io_deq_bits_resp),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_aw_ready     (_s_axil__sourceBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axil_0_aw_valid     (_demux_m_axil_0_aw_valid),
    .m_axil_0_aw_bits_addr (_demux_m_axil_0_aw_bits_addr),
    .m_axil_0_aw_bits_prot (_demux_m_axil_0_aw_bits_prot),
    .m_axil_0_w_ready      (_s_axil__sourceBuffer_2_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axil_0_w_valid      (_demux_m_axil_0_w_valid),
    .m_axil_0_w_bits_data  (_demux_m_axil_0_w_bits_data),
    .m_axil_0_w_bits_strb  (_demux_m_axil_0_w_bits_strb),
    .m_axil_0_b_ready      (_demux_m_axil_0_b_ready),
    .m_axil_0_b_valid      (_s_axil__sinkBuffer_1_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_0_b_bits_resp  (_s_axil__sinkBuffer_1_io_deq_bits_resp),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axil_1_ar_ready     (_dmaModules_0_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_ar_valid     (_demux_m_axil_1_ar_valid),
    .m_axil_1_ar_bits_addr (_demux_m_axil_1_ar_bits_addr),
    .m_axil_1_ar_bits_prot (_demux_m_axil_1_ar_bits_prot),
    .m_axil_1_r_ready      (_demux_m_axil_1_r_ready),
    .m_axil_1_r_valid      (_dmaModules_0_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_r_bits_data  (_dmaModules_0_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_r_bits_resp  (_dmaModules_0_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_aw_ready     (_dmaModules_0_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_aw_valid     (_demux_m_axil_1_aw_valid),
    .m_axil_1_aw_bits_addr (_demux_m_axil_1_aw_bits_addr),
    .m_axil_1_aw_bits_prot (_demux_m_axil_1_aw_bits_prot),
    .m_axil_1_w_ready      (_dmaModules_0_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_w_valid      (_demux_m_axil_1_w_valid),
    .m_axil_1_w_bits_data  (_demux_m_axil_1_w_bits_data),
    .m_axil_1_w_bits_strb  (_demux_m_axil_1_w_bits_strb),
    .m_axil_1_b_ready      (_demux_m_axil_1_b_ready),
    .m_axil_1_b_valid      (_dmaModules_0_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_1_b_bits_resp  (_dmaModules_0_s_axil_ctrl_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_ar_ready     (_dmaModules_1_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_ar_valid     (_demux_m_axil_2_ar_valid),
    .m_axil_2_ar_bits_addr (_demux_m_axil_2_ar_bits_addr),
    .m_axil_2_ar_bits_prot (_demux_m_axil_2_ar_bits_prot),
    .m_axil_2_r_ready      (_demux_m_axil_2_r_ready),
    .m_axil_2_r_valid      (_dmaModules_1_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_r_bits_data  (_dmaModules_1_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_r_bits_resp  (_dmaModules_1_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_aw_ready     (_dmaModules_1_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_aw_valid     (_demux_m_axil_2_aw_valid),
    .m_axil_2_aw_bits_addr (_demux_m_axil_2_aw_bits_addr),
    .m_axil_2_aw_bits_prot (_demux_m_axil_2_aw_bits_prot),
    .m_axil_2_w_ready      (_dmaModules_1_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_w_valid      (_demux_m_axil_2_w_valid),
    .m_axil_2_w_bits_data  (_demux_m_axil_2_w_bits_data),
    .m_axil_2_w_bits_strb  (_demux_m_axil_2_w_bits_strb),
    .m_axil_2_b_ready      (_demux_m_axil_2_b_ready),
    .m_axil_2_b_valid      (_dmaModules_1_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_2_b_bits_resp  (_dmaModules_1_s_axil_ctrl_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_ar_ready     (_dmaModules_2_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_ar_valid     (_demux_m_axil_3_ar_valid),
    .m_axil_3_ar_bits_addr (_demux_m_axil_3_ar_bits_addr),
    .m_axil_3_ar_bits_prot (_demux_m_axil_3_ar_bits_prot),
    .m_axil_3_r_ready      (_demux_m_axil_3_r_ready),
    .m_axil_3_r_valid      (_dmaModules_2_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_r_bits_data  (_dmaModules_2_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_r_bits_resp  (_dmaModules_2_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_aw_ready     (_dmaModules_2_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_aw_valid     (_demux_m_axil_3_aw_valid),
    .m_axil_3_aw_bits_addr (_demux_m_axil_3_aw_bits_addr),
    .m_axil_3_aw_bits_prot (_demux_m_axil_3_aw_bits_prot),
    .m_axil_3_w_ready      (_dmaModules_2_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_w_valid      (_demux_m_axil_3_w_valid),
    .m_axil_3_w_bits_data  (_demux_m_axil_3_w_bits_data),
    .m_axil_3_w_bits_strb  (_demux_m_axil_3_w_bits_strb),
    .m_axil_3_b_ready      (_demux_m_axil_3_b_ready),
    .m_axil_3_b_valid      (_dmaModules_2_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_3_b_bits_resp  (_dmaModules_2_s_axil_ctrl_b_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_ar_ready     (_dmaModules_3_s_axil_ctrl_ar_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_ar_valid     (_demux_m_axil_4_ar_valid),
    .m_axil_4_ar_bits_addr (_demux_m_axil_4_ar_bits_addr),
    .m_axil_4_ar_bits_prot (_demux_m_axil_4_ar_bits_prot),
    .m_axil_4_r_ready      (_demux_m_axil_4_r_ready),
    .m_axil_4_r_valid      (_dmaModules_3_s_axil_ctrl_r_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_r_bits_data  (_dmaModules_3_s_axil_ctrl_r_bits_data),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_r_bits_resp  (_dmaModules_3_s_axil_ctrl_r_bits_resp),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_aw_ready     (_dmaModules_3_s_axil_ctrl_aw_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_aw_valid     (_demux_m_axil_4_aw_valid),
    .m_axil_4_aw_bits_addr (_demux_m_axil_4_aw_bits_addr),
    .m_axil_4_aw_bits_prot (_demux_m_axil_4_aw_bits_prot),
    .m_axil_4_w_ready      (_dmaModules_3_s_axil_ctrl_w_ready),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_w_valid      (_demux_m_axil_4_w_valid),
    .m_axil_4_w_bits_data  (_demux_m_axil_4_w_bits_data),
    .m_axil_4_w_bits_strb  (_demux_m_axil_4_w_bits_strb),
    .m_axil_4_b_ready      (_demux_m_axil_4_b_ready),
    .m_axil_4_b_valid      (_dmaModules_3_s_axil_ctrl_b_valid),	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
    .m_axil_4_b_bits_resp  (_dmaModules_3_s_axil_ctrl_b_bits_resp)	// src/main/scala/chext/ip/sgdma/Sgdma.scala:526:11
  );
endmodule

module StrobeGenerator_6(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input  [15:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output [15:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
  output [2:0]  sink_bits_size	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:141:16
);

  assign source_ready = sink_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_valid = source_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_bits_addr = source_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
  assign sink_bits_size = source_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:136:7
endmodule

module AddressStrobeGenerator_6(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:7
  input         clock,	// <stdin>:27941:11, :28429:11, :30473:11, :30961:11, :33005:11, :33493:11, :35537:11, :36025:11
                reset,	// <stdin>:27942:11, :28430:11, :30474:11, :30962:11, :33006:11, :33494:11, :35538:11, :36026:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [15:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output [15:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
  output [2:0]  sink_bits_size	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:182:16
);

  wire        _strobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
  wire        _addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  wire [15:0] _addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  wire [2:0]  _addressGenerator_sink_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
  AddressGenerator addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (source_ready),
    .source_valid      (source_valid),
    .source_bits_addr  (source_bits_addr),
    .source_bits_len   (source_bits_len),
    .source_bits_size  (source_bits_size),
    .source_bits_burst (source_bits_burst),
    .sink_ready        (_strobeGenerator_source_ready),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
    .sink_valid        (_addressGenerator_sink_valid),
    .sink_bits_addr    (_addressGenerator_sink_bits_addr),
    .sink_bits_size    (_addressGenerator_sink_bits_size)
  );
  StrobeGenerator_6 strobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:176:39
    .source_ready     (_strobeGenerator_source_ready),
    .source_valid     (_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .source_bits_addr (_addressGenerator_sink_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .source_bits_size (_addressGenerator_sink_bits_size),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:40
    .sink_ready       (sink_ready),
    .sink_valid       (sink_valid),
    .sink_bits_addr   (sink_bits_addr),
    .sink_bits_size   (sink_bits_size)
  );
endmodule

// VCS coverage exclude_file
module ram_8x8(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [2:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [2:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data
);

  reg [7:0] Memory[0:7];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[2:0]] = _RANDOM_MEM[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue8_UInt8(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:27968:11, :28456:11, :30500:11, :30988:11, :33032:11, :33520:11, :35564:11, :36052:11
               reset,	// <stdin>:27969:11, :28457:11, :30501:11, :30989:11, :33033:11, :33521:11, :35565:11, :36053:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [2:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [2:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:27968:11, :28456:11, :30500:11, :30988:11, :33032:11, :33520:11, :35564:11, :36052:11
    if (reset) begin	// <stdin>:27968:11, :28456:11, :30500:11, :30988:11, :33032:11, :33520:11, :35564:11, :36052:11
      enq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:27968:11, :28456:11, :30500:11, :30988:11, :33032:11, :33520:11, :35564:11, :36052:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][5:3];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_8x8 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

// VCS coverage exclude_file
module ram_2x16(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [15:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [15:0] W0_data
);

  reg [15:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[15:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 16'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadAddressChannel_1(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:28019:11, :30551:11, :33083:11, :35615:11
                reset,	// <stdin>:28020:11, :30552:11, :33084:11, :35616:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [15:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:28019:11, :30551:11, :33083:11, :35615:11
    if (reset) begin	// <stdin>:28019:11, :30551:11, :33083:11, :35615:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:28019:11, :30551:11, :33083:11, :35615:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x16 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_lock = _ram_ext_R0_data[0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[4:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[7:5];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[11:8];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[15:12];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_Bool(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:28070:11, :28558:11, :30602:11, :31090:11, :33134:11, :33622:11, :35666:11, :36154:11
         reset,	// <stdin>:28071:11, :28559:11, :30603:11, :31091:11, :33135:11, :33623:11, :35667:11, :36155:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:28070:11, :28558:11, :30602:11, :31090:11, :33134:11, :33622:11, :35666:11, :36154:11
    if (reset) begin	// <stdin>:28070:11, :28558:11, :30602:11, :31090:11, :33134:11, :33622:11, :35666:11, :36154:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:28070:11, :28558:11, :30602:11, :31090:11, :33134:11, :33622:11, :35666:11, :36154:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Queue2_WriteAddressChannel_1(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:28507:11, :31039:11, :33571:11, :36103:11
                reset,	// <stdin>:28508:11, :31040:11, :33572:11, :36104:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [15:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:28507:11, :31039:11, :33571:11, :36103:11
    if (reset) begin	// <stdin>:28507:11, :31039:11, :33571:11, :36103:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:28507:11, :31039:11, :33571:11, :36103:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x16 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_lock = _ram_ext_R0_data[0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[4:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[7:5];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[11:8];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[15:12];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module BurstSplitter(	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  input          clock,	// <stdin>:28660:11, :31192:11, :33724:11, :36256:11
                 reset,	// <stdin>:28661:11, :31193:11, :33725:11, :36257:11
  output         s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [15:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [7:0]   s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [1:0]   s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [3:0]   s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [2:0]   s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [3:0]   s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
                 s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output         s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output [127:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output [1:0]   s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
                 s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [15:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [7:0]   s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [1:0]   s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [3:0]   s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [2:0]   s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [3:0]   s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
                 s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output         s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [127:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input  [15:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
                 s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output         s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  output [1:0]   s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:33:17
  input          m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [15:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [2:0]   m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [1:0]   m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [3:0]   m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [2:0]   m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [3:0]   m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
                 m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input          m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input  [127:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input  [1:0]   m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
                 m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [15:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [2:0]   m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [1:0]   m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [3:0]   m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [2:0]   m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [3:0]   m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
                 m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input          m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [127:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output [15:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
                 m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input          m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
  input  [1:0]   m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:34:17
);

  wire        write_joined_ready;	// src/main/scala/chext/elastic/Arrival.scala:65:28
  wire [15:0] write_idx_1;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_len_T_1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:187:21
  wire        _write_eagerFork_result_valid_T_2;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] write_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_len_T;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:145:29
  wire [15:0] read_r_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_r_len_T;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:99:21
  wire        _read_ar_eagerFork_result_valid_T_2;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] read_ar_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_ar_len_T;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29
  wire        _write_sinkBuffered__sinkBuffer_2_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_1_io_deq_bits;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_lenQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:125:26
  wire        _write_lenQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:125:26
  wire [7:0]  _write_lenQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:125:26
  wire        _write_addressStrobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:121:13
  wire        _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:121:13
  wire        _read_r_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_r_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_ar_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_ar_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_lenQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26
  wire        _read_lenQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26
  wire [7:0]  _read_lenQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26
  wire        _read_addressStrobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:41:13
  wire        _read_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:41:13
  reg         read_ar_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_ar_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_ar_last = read_ar_idx == {7'h0, _read_ar_len_T} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:{19,29}, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _read_ar_len_T = {1'h0, s_axi_ar_bits_len} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _read_ar_T =
    s_axi_ar_valid & _read_ar_eagerFork_result_valid_T_2
    & _read_ar_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_ar_T_2 = _read_ar_len_T == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign read_ar_idx = read_ar_generating_ ? read_ar_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         read_ar_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_ar_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _read_ar_eagerFork_result_valid_T_2 = ~read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        read_ar_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_addressStrobeGenerator_source_ready | read_ar_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:41:13, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_ar_eagerFork_s_axi_ar_ready_qual1_1 =
    _read_ar_T & (read_ar_generating_ ? read_ar_last : ~(|_read_ar_len_T) | _read_ar_T_2)
    | read_ar_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        read_ar_eagerFork_s_axi_ar_ready_qual1_2 =
    _read_lenQueue_io_enq_ready | read_ar_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        s_axi_ar_ready_0 =
    read_ar_eagerFork_s_axi_ar_ready_qual1_0 & read_ar_eagerFork_s_axi_ar_ready_qual1_1
    & read_ar_eagerFork_s_axi_ar_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        m_axi_ar_valid_0 =
    _read_ar_sinkBuffered__sinkBuffer_io_deq_valid
    & _read_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:41:13, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        read_arReplicated_ready = m_axi_ar_ready & m_axi_ar_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         read_r_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_r_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_r_last = read_r_idx == {7'h0, _read_r_len_T} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:19, :99:21, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _read_r_len_T = {1'h0, _read_lenQueue_io_deq_bits} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26, :65:29, :99:21, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _read_r_T =
    _read_lenQueue_io_deq_valid & _read_r_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_r_T_2 = _read_r_len_T == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, :99:21, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign read_r_idx = read_r_generating_ ? read_r_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  wire        s_axi_r_valid_0 =
    m_axi_r_valid & _read_r_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        m_axi_r_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_last = write_idx == {7'h0, _write_len_T} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:19, :145:29, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _write_len_T = {1'h0, s_axi_aw_bits_len} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, :145:29, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _write_T =
    s_axi_aw_valid & _write_eagerFork_result_valid_T_2
    & _write_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_T_2 = _write_len_T == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, :145:29, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign write_idx = write_generating_ ? write_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _write_eagerFork_result_valid_T_2 = ~write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        write_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_addressStrobeGenerator_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:121:13, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_s_axi_aw_ready_qual1_1 =
    _write_T & (write_generating_ ? write_last : ~(|_write_len_T) | _write_T_2)
    | write_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:145:29, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        write_eagerFork_s_axi_aw_ready_qual1_2 =
    _write_lenQueue_io_enq_ready | write_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:125:26, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        s_axi_aw_ready_0 =
    write_eagerFork_s_axi_aw_ready_qual1_0 & write_eagerFork_s_axi_aw_ready_qual1_1
    & write_eagerFork_s_axi_aw_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        write_mkJoin_allValid =
    _write_sinkBuffered__sinkBuffer_io_deq_valid
    & _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:121:13, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_mkJoin_fire = m_axi_aw_ready & write_mkJoin_allValid;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_generating__1;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_idx__1;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_last_1 = write_idx_1 == {7'h0, _write_len_T_1} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:19, :187:21, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _write_len_T_1 = {1'h0, _write_lenQueue_io_deq_bits} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, :125:26, :187:21, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _write_T_4 =
    _write_lenQueue_io_deq_valid & _write_sinkBuffered__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:125:26, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_T_6 = _write_len_T_1 == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, :187:21, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign write_idx_1 = write_generating__1 ? write_idx__1 : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  wire        write_joined_valid =
    m_axi_b_valid & _write_sinkBuffered__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_lastReplicated_ready = write_joined_ready & write_joined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg  [1:0]  write_respReg;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:194:28
  assign write_joined_ready =
    _write_sinkBuffered__sinkBuffer_2_io_enq_ready & write_joined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        _write_T_9 = m_axi_b_bits_resp > write_respReg;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:194:28, :201:27
  always @(posedge clock) begin	// <stdin>:28660:11, :31192:11, :33724:11, :36256:11
    if (reset) begin	// <stdin>:28660:11, :31192:11, :33724:11, :36256:11
      read_ar_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      read_ar_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      read_ar_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      read_ar_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      read_ar_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      read_r_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      read_r_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      write_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      write_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      write_generating__1 <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      write_idx__1 <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_respReg <= 2'h0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, :194:28
    end
    else begin	// <stdin>:28660:11, :31192:11, :33724:11, :36256:11
      if (_read_ar_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_ar_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_ar_generating_ <= ~read_ar_last & read_ar_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_ar_idx_ <= read_ar_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN = ~(|_read_ar_len_T) | _read_ar_T_2;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          read_ar_generating_ <= ~_GEN | read_ar_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_ar_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      read_ar_eagerFork_regs_0 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_1 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_2 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_2 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_read_r_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_r_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_r_generating_ <= ~read_r_last & read_r_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_r_idx_ <= read_r_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_0 = ~(|_read_r_len_T) | _read_r_T_2;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:99:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          read_r_generating_ <= ~_GEN_0 | read_r_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_0)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_r_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      if (_write_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_generating_ <= ~write_last & write_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_idx_ <= write_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_1 = ~(|_write_len_T) | _write_T_2;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:145:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          write_generating_ <= ~_GEN_1 | write_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_1)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      write_eagerFork_regs_0 <=
        write_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_2 <=
        write_eagerFork_s_axi_aw_ready_qual1_2 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_write_T_4) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_generating__1) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_generating__1 <= ~write_last_1 & write_generating__1;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_idx__1 <= write_idx__1 + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_2 = ~(|_write_len_T_1) | _write_T_6;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:187:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          write_generating__1 <= ~_GEN_2 | write_generating__1;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_2)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_idx__1 <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      if (write_joined_ready) begin	// src/main/scala/chext/elastic/Arrival.scala:65:28
        if (_write_sinkBuffered__sinkBuffer_1_io_deq_bits)	// src/main/scala/chext/elastic/Buffer.scala:131:30
          write_respReg <= 2'h0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, :194:28
        else if (_write_T_9)	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:201:27
          write_respReg <= m_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:194:28
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
      automatic logic [31:0] _RANDOM[0:2];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
        end	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
        read_ar_generating_ = _RANDOM[2'h0][0];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_ar_idx_ = _RANDOM[2'h0][16:1];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        read_ar_eagerFork_regs_0 = _RANDOM[2'h0][17];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_ar_eagerFork_regs_1 = _RANDOM[2'h0][18];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_ar_eagerFork_regs_2 = _RANDOM[2'h0][19];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_r_generating_ = _RANDOM[2'h0][20];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_r_idx_ = {_RANDOM[2'h0][31:21], _RANDOM[2'h1][4:0]};	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        write_generating_ = _RANDOM[2'h1][5];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        write_idx_ = _RANDOM[2'h1][21:6];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_eagerFork_regs_0 = _RANDOM[2'h1][22];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_eagerFork_regs_1 = _RANDOM[2'h1][23];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_eagerFork_regs_2 = _RANDOM[2'h1][24];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_generating__1 = _RANDOM[2'h1][25];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        write_idx__1 = {_RANDOM[2'h1][31:26], _RANDOM[2'h2][9:0]};	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_respReg = _RANDOM[2'h2][11:10];	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, :194:28, src/main/scala/chext/elastic/Replicate.scala:21:29
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressStrobeGenerator_6 read_addressStrobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:41:13
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_ar_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr),
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (read_arReplicated_ready),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_read_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (m_axi_ar_bits_addr),
    .sink_bits_size    (m_axi_ar_bits_size)
  );
  Queue8_UInt8 read_lenQueue (	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:45:26
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_lenQueue_io_enq_ready),
    .io_enq_valid (s_axi_ar_valid & ~read_ar_eagerFork_regs_2),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (s_axi_ar_bits_len),
    .io_deq_ready
      (_read_r_T & (read_r_generating_ ? read_r_last : ~(|_read_r_len_T) | _read_r_T_2)),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:99:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
    .io_deq_valid (_read_lenQueue_io_deq_valid),
    .io_deq_bits  (_read_lenQueue_io_deq_bits)
  );
  Queue2_ReadAddressChannel_1 read_ar_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_read_ar_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid       (_read_ar_T & (read_ar_generating_ | (|_read_ar_len_T))),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:65:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits_addr   (s_axi_ar_bits_addr),
    .io_enq_bits_len    (s_axi_ar_bits_len),
    .io_enq_bits_size   (s_axi_ar_bits_size),
    .io_enq_bits_burst  (s_axi_ar_bits_burst),
    .io_enq_bits_lock   (s_axi_ar_bits_lock),
    .io_enq_bits_cache  (s_axi_ar_bits_cache),
    .io_enq_bits_prot   (s_axi_ar_bits_prot),
    .io_enq_bits_qos    (s_axi_ar_bits_qos),
    .io_enq_bits_region (s_axi_ar_bits_region),
    .io_deq_ready       (read_arReplicated_ready),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid       (_read_ar_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_lock   (m_axi_ar_bits_lock),
    .io_deq_bits_cache  (m_axi_ar_bits_cache),
    .io_deq_bits_prot   (m_axi_ar_bits_prot),
    .io_deq_bits_qos    (m_axi_ar_bits_qos),
    .io_deq_bits_region (m_axi_ar_bits_region)
  );
  Queue2_Bool read_r_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_r_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid (_read_r_T & (read_r_generating_ | (|_read_r_len_T))),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:99:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits  (read_r_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready (m_axi_r_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_read_r_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits  (s_axi_r_bits_last)
  );
  AddressStrobeGenerator_6 write_addressStrobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:121:13
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr),
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (write_mkJoin_fire),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_write_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (m_axi_aw_bits_addr),
    .sink_bits_size    (m_axi_aw_bits_size)
  );
  Queue8_UInt8 write_lenQueue (	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:125:26
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_lenQueue_io_enq_ready),
    .io_enq_valid (s_axi_aw_valid & ~write_eagerFork_regs_2),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (s_axi_aw_bits_len),
    .io_deq_ready
      (_write_T_4
       & (write_generating__1 ? write_last_1 : ~(|_write_len_T_1) | _write_T_6)),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:187:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
    .io_deq_valid (_write_lenQueue_io_deq_valid),
    .io_deq_bits  (_write_lenQueue_io_deq_bits)
  );
  Queue2_WriteAddressChannel_1 write_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_write_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid       (_write_T & (write_generating_ | (|_write_len_T))),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:145:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits_addr   (s_axi_aw_bits_addr),
    .io_enq_bits_len    (s_axi_aw_bits_len),
    .io_enq_bits_size   (s_axi_aw_bits_size),
    .io_enq_bits_burst  (s_axi_aw_bits_burst),
    .io_enq_bits_lock   (s_axi_aw_bits_lock),
    .io_enq_bits_cache  (s_axi_aw_bits_cache),
    .io_enq_bits_prot   (s_axi_aw_bits_prot),
    .io_enq_bits_qos    (s_axi_aw_bits_qos),
    .io_enq_bits_region (s_axi_aw_bits_region),
    .io_deq_ready       (write_mkJoin_fire),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid       (_write_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_lock   (m_axi_aw_bits_lock),
    .io_deq_bits_cache  (m_axi_aw_bits_cache),
    .io_deq_bits_prot   (m_axi_aw_bits_prot),
    .io_deq_bits_qos    (m_axi_aw_bits_qos),
    .io_deq_bits_region (m_axi_aw_bits_region)
  );
  Queue2_Bool write_sinkBuffered__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_sinkBuffered__sinkBuffer_1_io_enq_ready),
    .io_enq_valid (_write_T_4 & (write_generating__1 | (|_write_len_T_1))),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:187:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits  (write_last_1),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready (write_lastReplicated_ready),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_write_sinkBuffered__sinkBuffer_1_io_deq_valid),
    .io_deq_bits  (_write_sinkBuffered__sinkBuffer_1_io_deq_bits)
  );
  Queue2_WriteResponseChannel_2 write_sinkBuffered__sinkBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_sinkBuffered__sinkBuffer_2_io_enq_ready),
    .io_enq_valid
      (write_joined_ready & _write_sinkBuffered__sinkBuffer_1_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:208:35, src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}, src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_resp (_write_T_9 ? m_axi_b_bits_resp : write_respReg),	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:194:28, :201:{27,38}, :202:21
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_resp (s_axi_b_bits_resp)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign s_axi_r_bits_data = m_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign s_axi_r_bits_resp = m_axi_r_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_w_ready = m_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign m_axi_ar_valid = m_axi_ar_valid_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign m_axi_ar_bits_len = 8'h0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, :81:19
  assign m_axi_ar_bits_burst = 2'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign m_axi_r_ready = m_axi_r_ready_0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign m_axi_aw_valid = write_mkJoin_allValid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign m_axi_aw_bits_len = 8'h0;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, :81:19
  assign m_axi_aw_bits_burst = 2'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign m_axi_w_valid = s_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign m_axi_w_bits_data = s_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign m_axi_w_bits_strb = s_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7
  assign m_axi_w_bits_last = 1'h1;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Replicate.scala:27:38
  assign m_axi_b_ready = write_lastReplicated_ready;	// src/main/scala/chext/amba/axi4/full/components/BurstSplitter.scala:30:7, src/main/scala/chext/elastic/Join.scala:42:29
endmodule

// VCS coverage exclude_file
module ram_2x17(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [16:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [16:0] W0_data
);

  reg [16:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[16:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 17'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrLenSizeBurstBundle_14(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:29099:11, :29429:11, :31631:11, :31961:11, :34163:11, :34493:11, :36695:11, :37025:11
               reset,	// <stdin>:29100:11, :29430:11, :31632:11, :31962:11, :34164:11, :34494:11, :36696:11, :37026:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_burst	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [16:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:29099:11, :29429:11, :31631:11, :31961:11, :34163:11, :34493:11, :36695:11, :37025:11
    if (reset) begin	// <stdin>:29099:11, :29429:11, :31631:11, :31961:11, :34163:11, :34493:11, :36695:11, :37025:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:29099:11, :29429:11, :31631:11, :31961:11, :34163:11, :34493:11, :36695:11, :37025:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x17 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({2'h1, io_enq_bits_size, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:255:14, :256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[3:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[11:4];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[14:12];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[16:15];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x5(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input        R0_addr,
               R0_en,
               R0_clk,
  output [4:0] R0_data,
  input        W0_addr,
               W0_en,
               W0_clk,
  input  [4:0] W0_data
);

  reg [4:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[4:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 5'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrSizeLastBundle_14(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:29150:11, :29480:11, :31682:11, :32012:11, :34214:11, :34544:11, :36746:11, :37076:11
               reset,	// <stdin>:29151:11, :29481:11, :31683:11, :32013:11, :34215:11, :34545:11, :36747:11, :37077:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [4:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg        wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:29150:11, :29480:11, :31682:11, :32012:11, :34214:11, :34544:11, :36746:11, :37076:11
    if (reset) begin	// <stdin>:29150:11, :29480:11, :31682:11, :32012:11, :34214:11, :34544:11, :36746:11, :37076:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:29150:11, :29480:11, :31682:11, :32012:11, :34214:11, :34544:11, :36746:11, :37076:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x5 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[3:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[4];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module AddressGenerator_14(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
  input        clock,	// <stdin>:29201:11, :29531:11, :31733:11, :32063:11, :34265:11, :34595:11, :36797:11, :37127:11
               reset,	// <stdin>:29202:11, :29532:11, :31734:11, :32064:11, :34266:11, :34596:11, :36798:11, :37128:11
  output       source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input        source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [3:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [7:0] source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [2:0] source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input        sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output       sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output [3:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output       sink_bits_last	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
);

  wire        _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _source__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]  _source__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _source__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _source__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg  [3:0]  addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25
  reg  [7:0]  ctr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24
  reg         generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
  wire        sink__valid =
    _source__sourceBuffer_io_deq_valid & _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22, src/main/scala/chext/elastic/Buffer.scala:93:32, :148:30
  wire        last = ctr == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :77:22
  wire [10:0] _result_addr_T = {7'h0, addr} << _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :106:31, src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        last_1 = _source__sourceBuffer_io_deq_bits_len == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:77:22, :114:30, src/main/scala/chext/elastic/Buffer.scala:93:32
  always @(posedge clock) begin	// <stdin>:29201:11, :29531:11, :31733:11, :32063:11, :34265:11, :34595:11, :36797:11, :37127:11
    if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        if (~last) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
          if (_source__sourceBuffer_io_deq_bits_burst == 2'h1)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:85:28, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <= addr + 4'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24
          else if (_source__sourceBuffer_io_deq_bits_burst == 2'h2)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:87:34, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <=
              ~(_source__sourceBuffer_io_deq_bits_len[3:0]) & addr
              | _source__sourceBuffer_io_deq_bits_len[3:0] & addr + 4'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :89:23, :90:{25,34,44,51}, src/main/scala/chext/elastic/Buffer.scala:93:32
          ctr <= ctr - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :83:20
        end
      end
      else if (~last_1) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
        addr <=
          (_source__sourceBuffer_io_deq_bits_addr
           >> _source__sourceBuffer_io_deq_bits_size) + 4'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :120:{32,49}, src/main/scala/chext/elastic/Buffer.scala:93:32
        ctr <= _source__sourceBuffer_io_deq_bits_len - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :121:28, src/main/scala/chext/elastic/Buffer.scala:93:32
      end
    end
    if (reset)	// <stdin>:29201:11, :29531:11, :31733:11, :32063:11, :34265:11, :34595:11, :36797:11, :37127:11
      generating <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :70:35
    else if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last & generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
      else	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last_1 | generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        addr = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25
        ctr = _RANDOM[/*Zero width*/ 1'b0][11:4];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :67:24
        generating = _RANDOM[/*Zero width*/ 1'b0][12];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :70:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddrLenSizeBurstBundle_14 source__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (source_ready),
    .io_enq_valid      (source_valid),
    .io_enq_bits_addr  (source_bits_addr),
    .io_enq_bits_len   (source_bits_len),
    .io_enq_bits_size  (source_bits_size),
    .io_deq_ready      (sink__valid & (generating ? last : last_1)),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :75:{22,38}, :76:22, :77:22, :79:18, :114:30, :116:18, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid      (_source__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr  (_source__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_source__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size  (_source__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst (_source__sourceBuffer_io_deq_bits_burst)
  );
  Queue2_AddrSizeLastBundle_14 sink__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sink__sinkBuffer_io_enq_ready),
    .io_enq_valid     (sink__valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
    .io_enq_bits_addr
      (~generating | _source__sourceBuffer_io_deq_bits_burst == 2'h0
         ? _source__sourceBuffer_io_deq_bits_addr
         : _result_addr_T[3:0]),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :94:{26,47}, :106:{23,31}, src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_enq_bits_size (_source__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_last (generating ? last : last_1),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :77:22, :94:47, :114:30, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_deq_ready     (sink_ready),
    .io_deq_valid     (sink_valid),
    .io_deq_bits_addr (sink_bits_addr),
    .io_deq_bits_last (sink_bits_last)
  );
endmodule

// VCS coverage exclude_file
module ram_16x3(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [2:0] R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [2:0] W0_data
);

  reg [2:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 3'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_Bundle2(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:29305:11, :29635:11, :31837:11, :32167:11, :34369:11, :34699:11, :36901:11, :37231:11
               reset,	// <stdin>:29306:11, :29636:11, :31838:11, :32168:11, :34370:11, :34700:11, :36902:11, :37232:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits__1,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits__2,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits__1,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_bits__2	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [2:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:29305:11, :29635:11, :31837:11, :32167:11, :34369:11, :34699:11, :36901:11, :37231:11
    if (reset) begin	// <stdin>:29305:11, :29635:11, :31837:11, :32167:11, :34369:11, :34699:11, :36901:11, :37231:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:29305:11, :29635:11, :31837:11, :32167:11, :34369:11, :34699:11, :36901:11, :37231:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x3 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits__2, io_enq_bits__1})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits__1 = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits__2 = _ram_ext_R0_data[2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module SteerLeft(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7
  input  [31:0]  dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:13:18
  input  [1:0]   offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:14:20
  output [127:0] dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:15:19
);

  wire [3:0][127:0] _GEN =
    {{{dataIn, 96'h0}},
     {{32'h0, dataIn, 64'h0}},
     {{64'h0, dataIn, 32'h0}},
     {{96'h0, dataIn}}};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:21:10, :25:11
  assign dataOut = _GEN[offsetIn];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7, :25:11
endmodule

// VCS coverage exclude_file
module ram_2x131(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input          R0_addr,
                 R0_en,
                 R0_clk,
  output [130:0] R0_data,
  input          W0_addr,
                 W0_en,
                 W0_clk,
  input  [130:0] W0_data
);

  reg [130:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [159:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'hA0; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[130:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 131'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadDataChannel_8(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input          clock,	// <stdin>:29378:11, :31910:11, :34442:11, :36974:11
                 reset,	// <stdin>:29379:11, :31911:11, :34443:11, :36975:11
  output         io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [127:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]   io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [127:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]   io_deq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [130:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg          wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire         ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire         empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire         full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire         do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:29378:11, :31910:11, :34442:11, :36974:11
    if (reset) begin	// <stdin>:29378:11, :31910:11, :34442:11, :36974:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:29378:11, :31910:11, :34442:11, :36974:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x131 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({1'h1, io_enq_bits_resp, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[127:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = _ram_ext_R0_data[129:128];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[130];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module SteerRight(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7
  input  [127:0] dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:34:18
  input  [1:0]   offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:35:20
  output [31:0]  dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:36:19
);

  wire [3:0][31:0] _GEN =
    {{dataIn[127:96]}, {dataIn[95:64]}, {dataIn[63:32]}, {dataIn[31:0]}};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:42:13, :46:11
  assign dataOut = _GEN[offsetIn];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7, :46:11
endmodule

module SteerRight_1(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7
  input  [15:0] dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:34:18
  input  [1:0]  offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:35:20
  output [3:0]  dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:36:19
);

  wire [3:0][3:0] _GEN = {{dataIn[15:12]}, {dataIn[11:8]}, {dataIn[7:4]}, {dataIn[3:0]}};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:42:13, :46:11
  assign dataOut = _GEN[offsetIn];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7, :46:11
endmodule

// VCS coverage exclude_file
module ram_2x37(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [36:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [36:0] W0_data
);

  reg [36:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[36:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 37'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteDataChannel_12(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:29722:11, :32254:11, :34786:11, :37318:11, :38934:11
                reset,	// <stdin>:29723:11, :32255:11, :34787:11, :37319:11, :38935:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [36:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:29722:11, :32254:11, :34786:11, :37318:11, :38934:11
    if (reset) begin	// <stdin>:29722:11, :32254:11, :34786:11, :37318:11, :38934:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:29722:11, :32254:11, :34786:11, :37318:11, :38934:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x37 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_strb, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_strb = _ram_ext_R0_data[35:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[36];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Downscale(	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  input          clock,	// <stdin>:29773:11, :32305:11, :34837:11, :37369:11
                 reset,	// <stdin>:29774:11, :32306:11, :34838:11, :37370:11
  output         s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [15:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [3:0]   s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [2:0]   s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [3:0]   s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
                 s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output         s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output [127:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output [1:0]   s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
                 s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [15:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [3:0]   s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [2:0]   s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [3:0]   s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
                 s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output         s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [127:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input  [15:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output         s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  output [1:0]   s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:125:17
  input          m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [15:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [2:0]   m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [3:0]   m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [2:0]   m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [3:0]   m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
                 m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input          m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input  [31:0]  m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input  [1:0]   m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
                 m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [15:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [2:0]   m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [3:0]   m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [2:0]   m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [3:0]   m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
                 m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input          m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [31:0]  m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output [3:0]   m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
                 m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input          m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
  input  [1:0]   m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
);

  wire         read_r_zipped_ready;	// src/main/scala/chext/elastic/Arrival.scala:65:28
  wire         _write_w_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [3:0]   _write_w_steerRightStrobe_dataOut;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:273:36
  wire [31:0]  _write_w_steerRight_dataOut;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:272:30
  wire         _write_offsetLastQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
  wire         _write_offsetLastQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
  wire [1:0]   _write_offsetLastQueue_io_deq_bits__1;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
  wire         _write_offsetLastQueue_io_deq_bits__2;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
  wire         _write_addressGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
  wire         _write_addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
  wire [3:0]   _write_addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
  wire         _write_addressGenerator_sink_bits_last;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
  wire         _read_r_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire [127:0] _read_r_steerLeft_dataOut;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:182:29
  wire         _read_offsetLastQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33
  wire         _read_offsetLastQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33
  wire [1:0]   _read_offsetLastQueue_io_deq_bits__1;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33
  wire         _read_addressGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
  wire         _read_addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
  wire [3:0]   _read_addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
  wire         _read_addressGenerator_sink_bits_last;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
  wire         _read_ar_T = s_axi_ar_bits_size < 3'h3;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :143:24
  wire [2:0]   read_ar_result_bits_size = _read_ar_T ? s_axi_ar_bits_size : 3'h2;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :143:{24,46}, :144:22, :147:22
  wire [7:0]   read_ar_result_bits_len =
    _read_ar_T ? 8'h0 : (8'h1 << s_axi_ar_bits_size - 3'h2) - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:143:{24,46}, :145:21, :148:{21,29,41,63}
  reg          read_ar_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg          read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire         read_ar_eagerFork_arTransformed_ready_qual1_0 =
    _read_addressGenerator_source_ready | read_ar_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire         read_ar_eagerFork_arTransformed_ready_qual1_1 =
    m_axi_ar_ready | read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire         read_ar_arTransformed_ready =
    read_ar_eagerFork_arTransformed_ready_qual1_0
    & read_ar_eagerFork_arTransformed_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire         read_r_zipped_valid = m_axi_r_valid & _read_offsetLastQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33, src/main/scala/chext/elastic/Join.scala:41:55
  wire         m_axi_r_ready_0 = read_r_zipped_ready & read_r_zipped_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg  [127:0] read_r_dataReg;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:179:28
  reg  [1:0]   read_r_respReg;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:180:28
  assign read_r_zipped_ready =
    _read_r_sinkBuffered__sinkBuffer_io_enq_ready & read_r_zipped_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire         _read_r_T_1 = m_axi_r_bits_resp > read_r_respReg;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:180:28, :192:27
  wire [127:0] read_r_outputData = read_r_dataReg | _read_r_steerLeft_dataOut;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:179:28, :182:29, :199:36
  wire         _write_aw_T = s_axi_aw_bits_size < 3'h3;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :235:24
  wire [2:0]   write_aw_result_bits_size = _write_aw_T ? s_axi_aw_bits_size : 3'h2;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :235:{24,46}, :236:22, :239:22
  wire [7:0]   write_aw_result_bits_len =
    _write_aw_T ? 8'h0 : (8'h1 << s_axi_aw_bits_size - 3'h2) - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:145:21, :148:29, :235:{24,46}, :237:21, :240:{21,29,41,63}
  reg          write_aw_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg          write_aw_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire         write_aw_eagerFork_awTransformed_ready_qual1_0 =
    _write_addressGenerator_source_ready | write_aw_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire         write_aw_eagerFork_awTransformed_ready_qual1_1 =
    m_axi_aw_ready | write_aw_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire         write_aw_awTransformed_ready =
    write_aw_eagerFork_awTransformed_ready_qual1_0
    & write_aw_eagerFork_awTransformed_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire         _write_w_T =
    _write_w_sinkBuffered__sinkBuffer_io_enq_ready & s_axi_w_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30
  wire         _GEN = _write_w_T & _write_offsetLastQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33, :291:42, src/main/scala/chext/elastic/Arrival.scala:65:{28,45}, src/main/scala/chisel3/util/Decoupled.scala:83:20
  always @(posedge clock) begin	// <stdin>:29773:11, :32305:11, :34837:11, :37369:11
    if (reset) begin	// <stdin>:29773:11, :32305:11, :34837:11, :37369:11
      read_ar_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:145:21, src/main/scala/chext/elastic/Fork.scala:75:25
      read_ar_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:145:21, src/main/scala/chext/elastic/Fork.scala:75:25
      read_r_dataReg <= 128'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:179:28
      read_r_respReg <= 2'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:180:28
      write_aw_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:145:21, src/main/scala/chext/elastic/Fork.scala:75:25
      write_aw_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:145:21, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:29773:11, :32305:11, :34837:11, :37369:11
      read_ar_eagerFork_regs_0 <=
        read_ar_eagerFork_arTransformed_ready_qual1_0 & s_axi_ar_valid
        & ~read_ar_arTransformed_ready;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_1 <=
        read_ar_eagerFork_arTransformed_ready_qual1_1 & s_axi_ar_valid
        & ~read_ar_arTransformed_ready;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (read_r_zipped_ready) begin	// src/main/scala/chext/elastic/Arrival.scala:65:28
        if (m_axi_r_bits_last)	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
          read_r_dataReg <= 128'h0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:179:28
        else	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:126:17
          read_r_dataReg <= read_r_outputData;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:179:28, :199:36
      end
      if (read_r_zipped_ready & _read_r_T_1)	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:180:28, :192:{27,38}, :193:21, src/main/scala/chext/elastic/Arrival.scala:65:{28,45}
        read_r_respReg <= m_axi_r_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:180:28
      write_aw_eagerFork_regs_0 <=
        write_aw_eagerFork_awTransformed_ready_qual1_0 & s_axi_aw_valid
        & ~write_aw_awTransformed_ready;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_aw_eagerFork_regs_1 <=
        write_aw_eagerFork_awTransformed_ready_qual1_1 & s_axi_aw_valid
        & ~write_aw_awTransformed_ready;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
      automatic logic [31:0] _RANDOM[0:4];	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
        for (logic [2:0] i = 3'h0; i < 3'h5; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
        end	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
        read_ar_eagerFork_regs_0 = _RANDOM[3'h0][0];	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_ar_eagerFork_regs_1 = _RANDOM[3'h0][1];	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_r_dataReg =
          {_RANDOM[3'h0][31:2],
           _RANDOM[3'h1],
           _RANDOM[3'h2],
           _RANDOM[3'h3],
           _RANDOM[3'h4][1:0]};	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :179:28, src/main/scala/chext/elastic/Fork.scala:75:25
        read_r_respReg = _RANDOM[3'h4][3:2];	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :179:28, :180:28
        write_aw_eagerFork_regs_0 = _RANDOM[3'h4][4];	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :179:28, src/main/scala/chext/elastic/Fork.scala:75:25
        write_aw_eagerFork_regs_1 = _RANDOM[3'h4][5];	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :179:28, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressGenerator_14 read_addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
    .clock            (clock),
    .reset            (reset),
    .source_ready     (_read_addressGenerator_source_ready),
    .source_valid     (s_axi_ar_valid & ~read_ar_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr (s_axi_ar_bits_addr[3:0]),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:157:24
    .source_bits_len  (read_ar_result_bits_len),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:143:46, :145:21, :148:21
    .source_bits_size (read_ar_result_bits_size),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:143:46, :144:22, :147:22
    .sink_ready       (_read_offsetLastQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33
    .sink_valid       (_read_addressGenerator_sink_valid),
    .sink_bits_addr   (_read_addressGenerator_sink_bits_addr),
    .sink_bits_last   (_read_addressGenerator_sink_bits_last)
  );
  Queue16_Bundle2 read_offsetLastQueue (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33
    .clock          (clock),
    .reset          (reset),
    .io_enq_ready   (_read_offsetLastQueue_io_enq_ready),
    .io_enq_valid   (_read_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
    .io_enq_bits__1 (_read_addressGenerator_sink_bits_addr[3:2]),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34, src/main/scala/chext/util/BitOps.scala:82:10
    .io_enq_bits__2 (_read_addressGenerator_sink_bits_last),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:131:34
    .io_deq_ready   (m_axi_r_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid   (_read_offsetLastQueue_io_deq_valid),
    .io_deq_bits__1 (_read_offsetLastQueue_io_deq_bits__1),
    .io_deq_bits__2 (/* unused */)
  );
  SteerLeft read_r_steerLeft (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:182:29
    .dataIn   (m_axi_r_bits_data),
    .offsetIn (_read_offsetLastQueue_io_deq_bits__1),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:132:33
    .dataOut  (_read_r_steerLeft_dataOut)
  );
  Queue2_ReadDataChannel_8 read_r_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_r_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid     (read_r_zipped_ready & m_axi_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:206:28, src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}
    .io_enq_bits_data (read_r_outputData),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:199:36
    .io_enq_bits_resp (_read_r_T_1 ? m_axi_r_bits_resp : read_r_respReg),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:180:28, :192:{27,38}, :194:22, :196:22
    .io_deq_ready     (s_axi_r_ready),
    .io_deq_valid     (s_axi_r_valid),
    .io_deq_bits_data (s_axi_r_bits_data),
    .io_deq_bits_resp (s_axi_r_bits_resp),
    .io_deq_bits_last (s_axi_r_bits_last)
  );
  AddressGenerator_14 write_addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
    .clock            (clock),
    .reset            (reset),
    .source_ready     (_write_addressGenerator_source_ready),
    .source_valid     (s_axi_aw_valid & ~write_aw_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr (s_axi_aw_bits_addr[3:0]),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:249:24
    .source_bits_len  (write_aw_result_bits_len),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:235:46, :237:21, :240:21
    .source_bits_size (write_aw_result_bits_size),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:235:46, :236:22, :239:22
    .sink_ready       (_write_offsetLastQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
    .sink_valid       (_write_addressGenerator_sink_valid),
    .sink_bits_addr   (_write_addressGenerator_sink_bits_addr),
    .sink_bits_last   (_write_addressGenerator_sink_bits_last)
  );
  Queue16_Bundle2 write_offsetLastQueue (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
    .clock          (clock),
    .reset          (reset),
    .io_enq_ready   (_write_offsetLastQueue_io_enq_ready),
    .io_enq_valid   (_write_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
    .io_enq_bits__1 (_write_addressGenerator_sink_bits_addr[3:2]),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34, src/main/scala/chext/util/BitOps.scala:82:10
    .io_enq_bits__2 (_write_addressGenerator_sink_bits_last),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:223:34
    .io_deq_ready   (_GEN),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:291:42, src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid   (_write_offsetLastQueue_io_deq_valid),
    .io_deq_bits__1 (_write_offsetLastQueue_io_deq_bits__1),
    .io_deq_bits__2 (_write_offsetLastQueue_io_deq_bits__2)
  );
  SteerRight write_w_steerRight (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:272:30
    .dataIn   (s_axi_w_bits_data),
    .offsetIn (_write_offsetLastQueue_io_deq_bits__1),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
    .dataOut  (_write_w_steerRight_dataOut)
  );
  SteerRight_1 write_w_steerRightStrobe (	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:273:36
    .dataIn   (s_axi_w_bits_strb),
    .offsetIn (_write_offsetLastQueue_io_deq_bits__1),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
    .dataOut  (_write_w_steerRightStrobe_dataOut)
  );
  Queue2_WriteDataChannel_12 write_w_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_w_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid     (_GEN),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:291:42, src/main/scala/chext/elastic/Arrival.scala:65:45, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_enq_bits_data (_write_w_steerRight_dataOut),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:272:30
    .io_enq_bits_strb (_write_w_steerRightStrobe_dataOut),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:273:36
    .io_enq_bits_last (_write_offsetLastQueue_io_deq_bits__2),	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:224:33
    .io_deq_ready     (m_axi_w_ready),
    .io_deq_valid     (m_axi_w_valid),
    .io_deq_bits_data (m_axi_w_bits_data),
    .io_deq_bits_strb (m_axi_w_bits_strb),
    .io_deq_bits_last (m_axi_w_bits_last)
  );
  assign s_axi_ar_ready = read_ar_arTransformed_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_aw_ready = write_aw_awTransformed_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_w_ready =
    _write_w_T & _write_offsetLastQueue_io_deq_valid
    & _write_offsetLastQueue_io_deq_bits__2;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :224:33, :291:42, :295:58, src/main/scala/chext/elastic/Arrival.scala:35:18, :65:{28,45}
  assign s_axi_b_valid = m_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign s_axi_b_bits_resp = m_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_ar_valid = s_axi_ar_valid & ~read_ar_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
  assign m_axi_ar_bits_addr = s_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_ar_bits_len = read_ar_result_bits_len;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :143:46, :145:21, :148:21
  assign m_axi_ar_bits_size = read_ar_result_bits_size;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :143:46, :144:22, :147:22
  assign m_axi_ar_bits_lock = s_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_ar_bits_cache = s_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_ar_bits_prot = s_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_ar_bits_qos = s_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_ar_bits_region = s_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_r_ready = m_axi_r_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign m_axi_aw_valid = s_axi_aw_valid & ~write_aw_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
  assign m_axi_aw_bits_addr = s_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_aw_bits_len = write_aw_result_bits_len;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :235:46, :237:21, :240:21
  assign m_axi_aw_bits_size = write_aw_result_bits_size;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7, :235:46, :236:22, :239:22
  assign m_axi_aw_bits_lock = s_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_aw_bits_cache = s_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_aw_bits_prot = s_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_aw_bits_qos = s_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_aw_bits_region = s_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
  assign m_axi_b_ready = s_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/Downscale.scala:122:7
endmodule

module protocolConverter(	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:172:7
  input          clock,	// <stdin>:30005:11, :32537:11, :35069:11, :37601:11
                 reset,	// <stdin>:30006:11, :32538:11, :35070:11, :37602:11
  output         s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [15:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [7:0]   s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]   s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]   s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]   s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]   s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [127:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [1:0]   s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [15:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [7:0]   s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]   s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]   s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]   s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]   s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [127:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [15:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [15:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [2:0]   m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [3:0]   m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [2:0]   m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [3:0]   m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
                 m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input          m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input  [31:0]  m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input  [1:0]   m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
                 m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [15:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [2:0]   m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [3:0]   m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [2:0]   m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [3:0]   m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
                 m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input          m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [31:0]  m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [3:0]   m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
                 m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input          m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input  [1:0]   m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
);

  wire         _downscale_0_s_axi_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire         _downscale_0_s_axi_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire [127:0] _downscale_0_s_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire [1:0]   _downscale_0_s_axi_r_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire         _downscale_0_s_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire         _downscale_0_s_axi_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire         _downscale_0_s_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire         _downscale_0_s_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire [1:0]   _downscale_0_s_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  wire         _burstSplitter1_0_m_axi_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [15:0]  _burstSplitter1_0_m_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [2:0]   _burstSplitter1_0_m_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire         _burstSplitter1_0_m_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [3:0]   _burstSplitter1_0_m_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [2:0]   _burstSplitter1_0_m_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [3:0]   _burstSplitter1_0_m_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [3:0]   _burstSplitter1_0_m_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire         _burstSplitter1_0_m_axi_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire         _burstSplitter1_0_m_axi_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [15:0]  _burstSplitter1_0_m_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [2:0]   _burstSplitter1_0_m_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire         _burstSplitter1_0_m_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [3:0]   _burstSplitter1_0_m_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [2:0]   _burstSplitter1_0_m_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [3:0]   _burstSplitter1_0_m_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [3:0]   _burstSplitter1_0_m_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire         _burstSplitter1_0_m_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [127:0] _burstSplitter1_0_m_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire [15:0]  _burstSplitter1_0_m_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  wire         _burstSplitter1_0_m_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
  BurstSplitter burstSplitter1_0 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (s_axi_ar_ready),
    .s_axi_ar_valid       (s_axi_ar_valid),
    .s_axi_ar_bits_addr   (s_axi_ar_bits_addr),
    .s_axi_ar_bits_len    (s_axi_ar_bits_len),
    .s_axi_ar_bits_size   (s_axi_ar_bits_size),
    .s_axi_ar_bits_burst  (s_axi_ar_bits_burst),
    .s_axi_ar_bits_lock   (s_axi_ar_bits_lock),
    .s_axi_ar_bits_cache  (s_axi_ar_bits_cache),
    .s_axi_ar_bits_prot   (s_axi_ar_bits_prot),
    .s_axi_ar_bits_qos    (s_axi_ar_bits_qos),
    .s_axi_ar_bits_region (s_axi_ar_bits_region),
    .s_axi_r_ready        (s_axi_r_ready),
    .s_axi_r_valid        (s_axi_r_valid),
    .s_axi_r_bits_data    (s_axi_r_bits_data),
    .s_axi_r_bits_resp    (s_axi_r_bits_resp),
    .s_axi_r_bits_last    (s_axi_r_bits_last),
    .s_axi_aw_ready       (s_axi_aw_ready),
    .s_axi_aw_valid       (s_axi_aw_valid),
    .s_axi_aw_bits_addr   (s_axi_aw_bits_addr),
    .s_axi_aw_bits_len    (s_axi_aw_bits_len),
    .s_axi_aw_bits_size   (s_axi_aw_bits_size),
    .s_axi_aw_bits_burst  (s_axi_aw_bits_burst),
    .s_axi_aw_bits_lock   (s_axi_aw_bits_lock),
    .s_axi_aw_bits_cache  (s_axi_aw_bits_cache),
    .s_axi_aw_bits_prot   (s_axi_aw_bits_prot),
    .s_axi_aw_bits_qos    (s_axi_aw_bits_qos),
    .s_axi_aw_bits_region (s_axi_aw_bits_region),
    .s_axi_w_ready        (s_axi_w_ready),
    .s_axi_w_valid        (s_axi_w_valid),
    .s_axi_w_bits_data    (s_axi_w_bits_data),
    .s_axi_w_bits_strb    (s_axi_w_bits_strb),
    .s_axi_w_bits_last    (s_axi_w_bits_last),
    .s_axi_b_ready        (s_axi_b_ready),
    .s_axi_b_valid        (s_axi_b_valid),
    .s_axi_b_bits_resp    (/* unused */),
    .m_axi_ar_ready       (_downscale_0_s_axi_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_ar_valid       (_burstSplitter1_0_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_burstSplitter1_0_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (/* unused */),
    .m_axi_ar_bits_size   (_burstSplitter1_0_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (/* unused */),
    .m_axi_ar_bits_lock   (_burstSplitter1_0_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_burstSplitter1_0_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_burstSplitter1_0_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_burstSplitter1_0_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_burstSplitter1_0_m_axi_ar_bits_region),
    .m_axi_r_ready        (_burstSplitter1_0_m_axi_r_ready),
    .m_axi_r_valid        (_downscale_0_s_axi_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_r_bits_data    (_downscale_0_s_axi_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_r_bits_resp    (_downscale_0_s_axi_r_bits_resp),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_r_bits_last    (_downscale_0_s_axi_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_aw_ready       (_downscale_0_s_axi_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_aw_valid       (_burstSplitter1_0_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_burstSplitter1_0_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (/* unused */),
    .m_axi_aw_bits_size   (_burstSplitter1_0_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (/* unused */),
    .m_axi_aw_bits_lock   (_burstSplitter1_0_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_burstSplitter1_0_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_burstSplitter1_0_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_burstSplitter1_0_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_burstSplitter1_0_m_axi_aw_bits_region),
    .m_axi_w_ready        (_downscale_0_s_axi_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_w_valid        (_burstSplitter1_0_m_axi_w_valid),
    .m_axi_w_bits_data    (_burstSplitter1_0_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_burstSplitter1_0_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (/* unused */),
    .m_axi_b_ready        (_burstSplitter1_0_m_axi_b_ready),
    .m_axi_b_valid        (_downscale_0_s_axi_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .m_axi_b_bits_resp    (_downscale_0_s_axi_b_bits_resp)	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
  );
  Downscale downscale_0 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:254:21
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_downscale_0_s_axi_ar_ready),
    .s_axi_ar_valid       (_burstSplitter1_0_m_axi_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_addr   (_burstSplitter1_0_m_axi_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_size   (_burstSplitter1_0_m_axi_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_lock   (_burstSplitter1_0_m_axi_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_cache  (_burstSplitter1_0_m_axi_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_prot   (_burstSplitter1_0_m_axi_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_qos    (_burstSplitter1_0_m_axi_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_ar_bits_region (_burstSplitter1_0_m_axi_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_r_ready        (_burstSplitter1_0_m_axi_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_r_valid        (_downscale_0_s_axi_r_valid),
    .s_axi_r_bits_data    (_downscale_0_s_axi_r_bits_data),
    .s_axi_r_bits_resp    (_downscale_0_s_axi_r_bits_resp),
    .s_axi_r_bits_last    (_downscale_0_s_axi_r_bits_last),
    .s_axi_aw_ready       (_downscale_0_s_axi_aw_ready),
    .s_axi_aw_valid       (_burstSplitter1_0_m_axi_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_addr   (_burstSplitter1_0_m_axi_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_size   (_burstSplitter1_0_m_axi_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_lock   (_burstSplitter1_0_m_axi_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_cache  (_burstSplitter1_0_m_axi_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_prot   (_burstSplitter1_0_m_axi_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_qos    (_burstSplitter1_0_m_axi_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_aw_bits_region (_burstSplitter1_0_m_axi_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_w_ready        (_downscale_0_s_axi_w_ready),
    .s_axi_w_valid        (_burstSplitter1_0_m_axi_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_w_bits_data    (_burstSplitter1_0_m_axi_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_w_bits_strb    (_burstSplitter1_0_m_axi_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_b_ready        (_burstSplitter1_0_m_axi_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:239:21
    .s_axi_b_valid        (_downscale_0_s_axi_b_valid),
    .s_axi_b_bits_resp    (_downscale_0_s_axi_b_bits_resp),
    .m_axi_ar_ready       (m_axi_ar_ready),
    .m_axi_ar_valid       (m_axi_ar_valid),
    .m_axi_ar_bits_addr   (m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (m_axi_ar_bits_size),
    .m_axi_ar_bits_lock   (m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (m_axi_ar_bits_region),
    .m_axi_r_ready        (m_axi_r_ready),
    .m_axi_r_valid        (m_axi_r_valid),
    .m_axi_r_bits_data    (m_axi_r_bits_data),
    .m_axi_r_bits_resp    (m_axi_r_bits_resp),
    .m_axi_r_bits_last    (m_axi_r_bits_last),
    .m_axi_aw_ready       (m_axi_aw_ready),
    .m_axi_aw_valid       (m_axi_aw_valid),
    .m_axi_aw_bits_addr   (m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (m_axi_aw_bits_size),
    .m_axi_aw_bits_lock   (m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (m_axi_aw_bits_region),
    .m_axi_w_ready        (m_axi_w_ready),
    .m_axi_w_valid        (m_axi_w_valid),
    .m_axi_w_bits_data    (m_axi_w_bits_data),
    .m_axi_w_bits_strb    (m_axi_w_bits_strb),
    .m_axi_w_bits_last    (m_axi_w_bits_last),
    .m_axi_b_ready        (m_axi_b_ready),
    .m_axi_b_valid        (m_axi_b_valid),
    .m_axi_b_bits_resp    (m_axi_b_bits_resp)
  );
endmodule

module Queue16_ReadAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:37761:11, :38016:11, :38271:11, :38526:11
                reset,	// <stdin>:37762:11, :38017:11, :38272:11, :38527:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [44:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [3:0]  enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]  deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:37761:11, :38016:11, :38271:11, :38526:11
    if (reset) begin	// <stdin>:37761:11, :38016:11, :38271:11, :38526:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:255:14
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:255:14
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:37761:11, :38016:11, :38271:11, :38526:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x45 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({21'hC, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[15:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[23:16];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[26:24];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[28:27];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[29];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[33:30];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[36:34];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[40:37];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[44:41];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_16x129(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0]   R0_addr,
  input          R0_en,
                 R0_clk,
  output [128:0] R0_data,
  input  [3:0]   W0_addr,
  input          W0_en,
                 W0_clk,
  input  [128:0] W0_data
);

  reg [128:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [159:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'hA0; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[128:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 129'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_ReadDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input          clock,	// <stdin>:37812:11, :38067:11, :38322:11, :38577:11
                 reset,	// <stdin>:37813:11, :38068:11, :38323:11, :38578:11
  output         io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [127:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]   io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                 io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [127:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [128:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [3:0]   enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]   deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire         ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire         empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire         full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire         do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:37812:11, :38067:11, :38322:11, :38577:11
    if (reset) begin	// <stdin>:37812:11, :38067:11, :38322:11, :38577:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:37812:11, :38067:11, :38322:11, :38577:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x129 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[127:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[128];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_16x145(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0]   R0_addr,
  input          R0_en,
                 R0_clk,
  output [144:0] R0_data,
  input  [3:0]   W0_addr,
  input          W0_en,
                 W0_clk,
  input  [144:0] W0_data
);

  reg [144:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [159:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'hA0; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[144:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 145'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_WriteDataChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input          clock,	// <stdin>:37914:11, :38169:11, :38424:11, :38679:11
                 reset,	// <stdin>:37915:11, :38170:11, :38425:11, :38680:11
  output         io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [127:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0]  io_enq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                 io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [127:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0]  io_deq_bits_strb,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [144:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [3:0]   enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]   deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire         ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire         empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire         full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire         do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:37914:11, :38169:11, :38424:11, :38679:11
    if (reset) begin	// <stdin>:37914:11, :38169:11, :38424:11, :38679:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:37914:11, :38169:11, :38424:11, :38679:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x145 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, io_enq_bits_strb, io_enq_bits_data})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_data = _ram_ext_R0_data[127:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_strb = _ram_ext_R0_data[143:128];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[144];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue16_WriteResponseChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:37965:11, :38220:11, :38475:11, :38730:11
         reset,	// <stdin>:37966:11, :38221:11, :38476:11, :38731:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  always @(posedge clock) begin	// <stdin>:37965:11, :38220:11, :38475:11, :38730:11
    if (reset) begin	// <stdin>:37965:11, :38220:11, :38475:11, :38730:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:37965:11, :38220:11, :38475:11, :38730:11
      automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

// VCS coverage exclude_file
module ram_2x47(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [46:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [46:0] W0_data
);

  reg [46:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [63:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [6:0] j = 7'h0; j < 7'h40; j += 7'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[46:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 47'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadAddressChannel_5(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:38781:11
                reset,	// <stdin>:38782:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [46:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:38781:11
    if (reset) begin	// <stdin>:38781:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:38781:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x47 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock,
        io_enq_bits_burst,
        io_enq_bits_size,
        io_enq_bits_len,
        io_enq_bits_addr,
        io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_addr = _ram_ext_R0_data[17:2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[25:18];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[28:26];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[30:29];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[31];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[35:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[38:36];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[42:39];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[46:43];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_ReadDataChannel_12(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:38832:11
                reset,	// <stdin>:38833:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [36:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:38832:11
    if (reset) begin	// <stdin>:38832:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:38832:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x37 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_last, 2'h0, io_enq_bits_data, 2'h0})	// src/main/scala/chisel3/util/Decoupled.scala:255:14, :256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_data = _ram_ext_R0_data[33:2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_resp = _ram_ext_R0_data[35:34];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_last = _ram_ext_R0_data[36];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_WriteAddressChannel_5(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:38883:11
                reset,	// <stdin>:38884:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [15:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_id,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [15:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [46:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:38883:11
    if (reset) begin	// <stdin>:38883:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:38883:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x47 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock,
        io_enq_bits_burst,
        io_enq_bits_size,
        io_enq_bits_len,
        io_enq_bits_addr,
        io_enq_bits_id})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_id = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_addr = _ram_ext_R0_data[17:2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[25:18];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[28:26];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[30:29];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_lock = _ram_ext_R0_data[31];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[35:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[38:36];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[42:39];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[46:43];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module elasticArbiter_2(	// src/main/scala/chext/elastic/Arbiter.scala:11:7
  input         clock,	// <stdin>:39036:11, :39208:11, :43527:11, :43699:11
                reset,	// <stdin>:39037:11, :39209:11, :43528:11, :43700:11
  output        io_sources_0_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_0_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [15:0] io_sources_0_bits_addr,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [7:0]  io_sources_0_bits_len,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_0_bits_size,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0]  io_sources_0_bits_burst,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_0_bits_lock,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_0_bits_cache,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_0_bits_prot,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_0_bits_qos,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sources_0_bits_region,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_1_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_1_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [15:0] io_sources_1_bits_addr,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [7:0]  io_sources_1_bits_len,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_1_bits_size,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0]  io_sources_1_bits_burst,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_1_bits_lock,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_1_bits_cache,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_1_bits_prot,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_1_bits_qos,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sources_1_bits_region,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_2_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_2_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [15:0] io_sources_2_bits_addr,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [7:0]  io_sources_2_bits_len,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_2_bits_size,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0]  io_sources_2_bits_burst,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_2_bits_lock,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_2_bits_cache,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_2_bits_prot,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_2_bits_qos,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sources_2_bits_region,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_3_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_3_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [15:0] io_sources_3_bits_addr,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [7:0]  io_sources_3_bits_len,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_3_bits_size,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [1:0]  io_sources_3_bits_burst,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_3_bits_lock,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_3_bits_cache,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [2:0]  io_sources_3_bits_prot,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [3:0]  io_sources_3_bits_qos,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sources_3_bits_region,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sink_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sink_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [1:0]  io_sink_bits_id,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [15:0] io_sink_bits_addr,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [7:0]  io_sink_bits_len,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [2:0]  io_sink_bits_size,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [1:0]  io_sink_bits_burst,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sink_bits_lock,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [3:0]  io_sink_bits_cache,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [2:0]  io_sink_bits_prot,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [3:0]  io_sink_bits_qos,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sink_bits_region,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_select_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_select_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [1:0]  io_select_bits	// src/main/scala/chext/elastic/Arbiter.scala:21:14
);

  wire             sourceReady;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:44
  wire [3:0][1:0]  _GEN = '{2'h3, 2'h2, 2'h1, 2'h0};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  reg  [1:0]       chooser_lastChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35
  wire             _chooser_rrChoice_T_4 =
    chooser_lastChoice == 2'h0 & io_sources_1_valid;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}
  wire [1:0]       _chooser_rrChoice_T_9 =
    {1'h1, ~(~(chooser_lastChoice[1]) & io_sources_2_valid)};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]       chooser_rrChoice =
    (&chooser_lastChoice) ? 2'h0 : _chooser_rrChoice_T_4 ? 2'h1 : _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35, :33:8, :34:18, :37:26, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]       chooser_priorityChoice =
    io_sources_0_valid ? 2'h0 : io_sources_1_valid ? 2'h1 : {1'h1, ~io_sources_2_valid};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0]       _GEN_0 =
    {{io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Chooser.scala:28:8
  wire [1:0]       io_select_bits_0 =
    _GEN_0[chooser_rrChoice] ? chooser_rrChoice : chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0][15:0] _GEN_1 =
    {{io_sources_3_bits_addr},
     {io_sources_2_bits_addr},
     {io_sources_1_bits_addr},
     {io_sources_0_bits_addr}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][7:0]  _GEN_2 =
    {{io_sources_3_bits_len},
     {io_sources_2_bits_len},
     {io_sources_1_bits_len},
     {io_sources_0_bits_len}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][2:0]  _GEN_3 =
    {{io_sources_3_bits_size},
     {io_sources_2_bits_size},
     {io_sources_1_bits_size},
     {io_sources_0_bits_size}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][1:0]  _GEN_4 =
    {{io_sources_3_bits_burst},
     {io_sources_2_bits_burst},
     {io_sources_1_bits_burst},
     {io_sources_0_bits_burst}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0]       _GEN_5 =
    {{io_sources_3_bits_lock},
     {io_sources_2_bits_lock},
     {io_sources_1_bits_lock},
     {io_sources_0_bits_lock}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][3:0]  _GEN_6 =
    {{io_sources_3_bits_cache},
     {io_sources_2_bits_cache},
     {io_sources_1_bits_cache},
     {io_sources_0_bits_cache}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][2:0]  _GEN_7 =
    {{io_sources_3_bits_prot},
     {io_sources_2_bits_prot},
     {io_sources_1_bits_prot},
     {io_sources_0_bits_prot}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][3:0]  _GEN_8 =
    {{io_sources_3_bits_qos},
     {io_sources_2_bits_qos},
     {io_sources_1_bits_qos},
     {io_sources_0_bits_qos}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0][3:0]  _GEN_9 =
    {{io_sources_3_bits_region},
     {io_sources_2_bits_region},
     {io_sources_1_bits_region},
     {io_sources_0_bits_region}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  reg              sinkSent;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
  reg              selectSent;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:37:29
  assign sourceReady = (sinkSent | io_sink_ready) & (selectSent | io_select_ready);	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :37:29, :49:{30,44}, :50:49
  always @(posedge clock) begin	// <stdin>:39036:11, :39208:11, :43527:11, :43699:11
    if (reset) begin	// <stdin>:39036:11, :39208:11, :43527:11, :43699:11
      chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
      sinkSent <= 1'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
      selectSent <= 1'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:37:29
    end
    else begin	// <stdin>:39036:11, :39208:11, :43527:11, :43699:11
      if (_GEN_0[io_select_bits_0] & sourceReady) begin	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:44, :52:22
        if (_GEN_0[chooser_rrChoice]) begin	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8
          if (&chooser_lastChoice)	// src/main/scala/chext/elastic/Chooser.scala:24:35, :34:18
            chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
          else if (_chooser_rrChoice_T_4)	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= 2'h1;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
          else	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
        end
        else	// src/main/scala/chext/elastic/Chooser.scala:28:8
          chooser_lastChoice <= chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
      end
      sinkSent <= (io_sink_ready | sinkSent) & _GEN_0[io_select_bits_0] & ~sourceReady;	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :40:{30,58,61}, :49:44
      selectSent <=
        (io_select_ready | selectSent) & _GEN_0[io_select_bits_0] & ~sourceReady;	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:37:29, :40:{30,58,61}, :49:44
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        chooser_lastChoice = _RANDOM[/*Zero width*/ 1'b0][2:1];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35
        sinkSent = _RANDOM[/*Zero width*/ 1'b0][5];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
        selectSent = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:37:29
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_sources_0_ready = sourceReady & io_select_bits_0 == 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:44
  assign io_sources_1_ready = sourceReady & io_select_bits_0 == 2'h1;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:44
  assign io_sources_2_ready = sourceReady & io_select_bits_0 == 2'h2;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:44
  assign io_sources_3_ready = sourceReady & (&io_select_bits_0);	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:44
  assign io_sink_valid = _GEN_0[io_select_bits_0] & ~sinkSent;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :47:{30,33}
  assign io_sink_bits_id = _GEN[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_addr = _GEN_1[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_len = _GEN_2[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_size = _GEN_3[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_burst = _GEN_4[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_lock = _GEN_5[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_cache = _GEN_6[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_prot = _GEN_7[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_qos = _GEN_8[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_region = _GEN_9[io_select_bits_0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_select_valid = _GEN_0[io_select_bits_0] & ~selectSent;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:37:29, :46:{32,35}
  assign io_select_bits = io_select_bits_0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:28:8
endmodule

module elasticDemux_9(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [31:0] io_source_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_source_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_0_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_0_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_1_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_1_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_2_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_2_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_3_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_3_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

// VCS coverage exclude_file
module ram_32x2(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [4:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [1:0] R0_data,
  input  [4:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [1:0] W0_data
);

  reg [1:0] Memory[0:31];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[4:0]] = _RANDOM_MEM[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 2'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue32_UInt2(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:39148:11, :43639:11
               reset,	// <stdin>:39149:11, :43640:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire       io_enq_ready_0;	// src/main/scala/chisel3/util/Decoupled.scala:286:16, :306:{24,39}
  wire [1:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [4:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [4:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  wire       do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire       do_enq = ~(empty & io_deq_ready) & io_enq_ready_0 & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :263:27, :286:16, :298:17, :301:{26,35}, :306:{24,39}
  assign io_enq_ready_0 = io_deq_ready | ~(ptr_match & maybe_full);	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24, :286:{16,19}, :306:{24,39}
  always @(posedge clock) begin	// <stdin>:39148:11, :43639:11
    if (reset) begin	// <stdin>:39148:11, :43639:11
      enq_ptr_value <= 5'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 5'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:39148:11, :43639:11
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
        enq_ptr_value <= enq_ptr_value + 5'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:264:27, :298:17, :300:14
        deq_ptr_value <= deq_ptr_value + 5'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :264:27, :276:{15,27}, :277:16, :298:17, :300:14, :301:{26,35}
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :298:17, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][4:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][9:5];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][10];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_32x2 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = io_enq_ready_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :286:16, :306:{24,39}
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits = empty ? io_enq_bits : _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :261:25, :293:17, :298:17, :299:19
endmodule

module elasticMux_4(	// src/main/scala/chext/elastic/Mux.scala:10:7
  output        io_sources_0_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_0_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_0_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [3:0]  io_sources_0_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_0_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_1_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_1_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_1_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [3:0]  io_sources_1_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_1_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_2_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_2_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_2_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [3:0]  io_sources_2_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_2_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_3_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_3_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [31:0] io_sources_3_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [3:0]  io_sources_3_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_3_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
                io_sink_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sink_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [31:0] io_sink_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [3:0]  io_sink_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sink_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
                io_select_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Mux.scala:20:14
);

  wire [3:0]       _GEN =
    {{io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [3:0][31:0] _GEN_0 =
    {{io_sources_3_bits_data},
     {io_sources_2_bits_data},
     {io_sources_1_bits_data},
     {io_sources_0_bits_data}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [3:0][3:0]  _GEN_1 =
    {{io_sources_3_bits_strb},
     {io_sources_2_bits_strb},
     {io_sources_1_bits_strb},
     {io_sources_0_bits_strb}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [3:0]       _GEN_2 =
    {{io_sources_3_bits_last},
     {io_sources_2_bits_last},
     {io_sources_1_bits_last},
     {io_sources_0_bits_last}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire             valid = io_select_valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire             fire = valid & io_sink_ready;	// src/main/scala/chext/elastic/Mux.scala:26:39, :27:28
  assign io_sources_0_ready = fire & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_1_ready = fire & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_2_ready = fire & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_3_ready = fire & (&io_select_bits);	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sink_valid = valid;	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_data = _GEN_0[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_strb = _GEN_1[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_last = _GEN_2[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_select_ready = fire & _GEN_2[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39, :27:28, :38:27
endmodule

module elasticDemux_10(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output       io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input        io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0] io_source_bits_id,	// src/main/scala/chext/elastic/Demux.scala:20:14
               io_source_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input        io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output       io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0] io_sinks_0_bits_id,	// src/main/scala/chext/elastic/Demux.scala:20:14
               io_sinks_0_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input        io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output       io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0] io_sinks_1_bits_id,	// src/main/scala/chext/elastic/Demux.scala:20:14
               io_sinks_1_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input        io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output       io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0] io_sinks_2_bits_id,	// src/main/scala/chext/elastic/Demux.scala:20:14
               io_sinks_2_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input        io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output       io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0] io_sinks_3_bits_id,	// src/main/scala/chext/elastic/Demux.scala:20:14
               io_sinks_3_bits_resp,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output       io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input        io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0] io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_id = io_source_bits_id;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_id = io_source_bits_id;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_id = io_source_bits_id;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_id = io_source_bits_id;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_resp = io_source_bits_resp;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

module axi4FullMux(	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
  input         clock,	// <stdin>:39344:11
                reset,	// <stdin>:39345:11
  output        s_axi_0_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_0_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_0_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_0_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_0_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_0_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_0_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_0_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_0_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [31:0] s_axi_0_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_0_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_0_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_0_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_0_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_0_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_0_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_0_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_0_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_0_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_0_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_0_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [31:0] s_axi_0_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_0_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_0_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_0_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_0_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_0_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_1_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_1_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_1_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_1_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_1_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_1_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_1_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_1_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_1_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [31:0] s_axi_1_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_1_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_1_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_1_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_1_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_1_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_1_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_1_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_1_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_1_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_1_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_1_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [31:0] s_axi_1_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_1_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_1_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_1_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_1_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_1_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_2_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_2_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_2_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_2_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_2_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_2_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_2_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_2_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_2_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [31:0] s_axi_2_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_2_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_2_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_2_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_2_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_2_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_2_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_2_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_2_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_2_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_2_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_2_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [31:0] s_axi_2_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_2_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_2_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_2_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_2_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_2_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_3_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_3_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_3_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_3_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_3_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_3_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_3_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_3_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_3_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [31:0] s_axi_3_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_3_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_3_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_3_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [15:0] s_axi_3_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [7:0]  s_axi_3_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_3_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_3_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [2:0]  s_axi_3_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_3_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_3_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_3_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [31:0] s_axi_3_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input  [3:0]  s_axi_3_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         s_axi_3_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
                s_axi_3_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output        s_axi_3_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  output [1:0]  s_axi_3_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17
  input         m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [1:0]  m_axi_ar_bits_id,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [15:0] m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [7:0]  m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [2:0]  m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [1:0]  m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [3:0]  m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [2:0]  m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [3:0]  m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
                m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  input         m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  input  [31:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  input         m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
                m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [1:0]  m_axi_aw_bits_id,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [15:0] m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [7:0]  m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [2:0]  m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [1:0]  m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [3:0]  m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [2:0]  m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [3:0]  m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
                m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  input         m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [31:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output [3:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  output        m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
                m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  input         m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
  input  [1:0]  m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17
);

  wire        _write_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _write_mux_io_sink_valid;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire [31:0] _write_mux_io_sink_bits_data;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire [3:0]  _write_mux_io_sink_bits_strb;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _write_mux_io_sink_bits_last;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _write_mux_io_select_ready;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire        _write_arbiter_io_sink_valid;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0]  _write_arbiter_io_sink_bits_id;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [15:0] _write_arbiter_io_sink_bits_addr;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [7:0]  _write_arbiter_io_sink_bits_len;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [2:0]  _write_arbiter_io_sink_bits_size;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0]  _write_arbiter_io_sink_bits_burst;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _write_arbiter_io_sink_bits_lock;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [3:0]  _write_arbiter_io_sink_bits_cache;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [2:0]  _write_arbiter_io_sink_bits_prot;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [3:0]  _write_arbiter_io_sink_bits_qos;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [3:0]  _write_arbiter_io_sink_bits_region;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _write_arbiter_io_select_valid;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0]  _write_arbiter_io_select_bits;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _write_portQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
  wire        _write_portQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
  wire [1:0]  _write_portQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
  wire        _read_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _read_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire        _read_arbiter_io_sink_valid;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0]  _read_arbiter_io_sink_bits_id;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [15:0] _read_arbiter_io_sink_bits_addr;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [7:0]  _read_arbiter_io_sink_bits_len;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [2:0]  _read_arbiter_io_sink_bits_size;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0]  _read_arbiter_io_sink_bits_burst;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _read_arbiter_io_sink_bits_lock;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [3:0]  _read_arbiter_io_sink_bits_cache;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [2:0]  _read_arbiter_io_sink_bits_prot;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [3:0]  _read_arbiter_io_sink_bits_qos;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [3:0]  _read_arbiter_io_sink_bits_region;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire        _m_axi__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _m_axi__sinkBuffer_1_io_deq_bits_id;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _m_axi__sinkBuffer_1_io_deq_bits_resp;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _m_axi__sourceBuffer_2_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _m_axi__sourceBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        _m_axi__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _m_axi__sinkBuffer_io_deq_bits_id;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [31:0] _m_axi__sinkBuffer_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [1:0]  _m_axi__sinkBuffer_io_deq_bits_resp;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _m_axi__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _m_axi__sourceBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg         read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire        read_eagerFork_m_axi__r_ready_qual1_0 =
    _read_demux_io_source_ready | read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_eagerFork_m_axi__r_ready_qual1_1 =
    _read_demux_io_select_ready | read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        m_axi__r_ready =
    read_eagerFork_m_axi__r_ready_qual1_0 & read_eagerFork_m_axi__r_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  reg         write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire        write_eagerFork_m_axi__b_ready_qual1_0 =
    _write_demux_io_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_m_axi__b_ready_qual1_1 =
    _write_demux_io_select_ready | write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        m_axi__b_ready =
    write_eagerFork_m_axi__b_ready_qual1_0 & write_eagerFork_m_axi__b_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  always @(posedge clock) begin	// <stdin>:39344:11
    if (reset) begin	// <stdin>:39344:11
      read_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:39344:11
      read_eagerFork_regs_0 <=
        read_eagerFork_m_axi__r_ready_qual1_0 & _m_axi__sinkBuffer_io_deq_valid
        & ~m_axi__r_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_eagerFork_regs_1 <=
        read_eagerFork_m_axi__r_ready_qual1_1 & _m_axi__sinkBuffer_io_deq_valid
        & ~m_axi__r_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_0 <=
        write_eagerFork_m_axi__b_ready_qual1_0 & _m_axi__sinkBuffer_1_io_deq_valid
        & ~m_axi__b_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_m_axi__b_ready_qual1_1 & _m_axi__sinkBuffer_1_io_deq_valid
        & ~m_axi__b_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
        read_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_ReadAddressChannel_5 m_axi__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_m_axi__sourceBuffer_io_enq_ready),
    .io_enq_valid       (_read_arbiter_io_sink_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_id     (_read_arbiter_io_sink_bits_id),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_addr   (_read_arbiter_io_sink_bits_addr),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_len    (_read_arbiter_io_sink_bits_len),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_size   (_read_arbiter_io_sink_bits_size),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_burst  (_read_arbiter_io_sink_bits_burst),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_lock   (_read_arbiter_io_sink_bits_lock),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_cache  (_read_arbiter_io_sink_bits_cache),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_prot   (_read_arbiter_io_sink_bits_prot),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_qos    (_read_arbiter_io_sink_bits_qos),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_region (_read_arbiter_io_sink_bits_region),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_deq_ready       (m_axi_ar_ready),
    .io_deq_valid       (m_axi_ar_valid),
    .io_deq_bits_id     (m_axi_ar_bits_id),
    .io_deq_bits_addr   (m_axi_ar_bits_addr),
    .io_deq_bits_len    (m_axi_ar_bits_len),
    .io_deq_bits_size   (m_axi_ar_bits_size),
    .io_deq_bits_burst  (m_axi_ar_bits_burst),
    .io_deq_bits_lock   (m_axi_ar_bits_lock),
    .io_deq_bits_cache  (m_axi_ar_bits_cache),
    .io_deq_bits_prot   (m_axi_ar_bits_prot),
    .io_deq_bits_qos    (m_axi_ar_bits_qos),
    .io_deq_bits_region (m_axi_ar_bits_region)
  );
  Queue2_ReadDataChannel_12 m_axi__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (m_axi_r_ready),
    .io_enq_valid     (m_axi_r_valid),
    .io_enq_bits_data (m_axi_r_bits_data),
    .io_enq_bits_last (m_axi_r_bits_last),
    .io_deq_ready     (m_axi__r_ready),	// src/main/scala/chext/elastic/Fork.scala:87:23
    .io_deq_valid     (_m_axi__sinkBuffer_io_deq_valid),
    .io_deq_bits_id   (_m_axi__sinkBuffer_io_deq_bits_id),
    .io_deq_bits_data (_m_axi__sinkBuffer_io_deq_bits_data),
    .io_deq_bits_resp (_m_axi__sinkBuffer_io_deq_bits_resp),
    .io_deq_bits_last (_m_axi__sinkBuffer_io_deq_bits_last)
  );
  Queue2_WriteAddressChannel_5 m_axi__sourceBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_m_axi__sourceBuffer_1_io_enq_ready),
    .io_enq_valid       (_write_arbiter_io_sink_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_id     (_write_arbiter_io_sink_bits_id),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_addr   (_write_arbiter_io_sink_bits_addr),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_len    (_write_arbiter_io_sink_bits_len),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_size   (_write_arbiter_io_sink_bits_size),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_burst  (_write_arbiter_io_sink_bits_burst),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_lock   (_write_arbiter_io_sink_bits_lock),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_cache  (_write_arbiter_io_sink_bits_cache),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_prot   (_write_arbiter_io_sink_bits_prot),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_qos    (_write_arbiter_io_sink_bits_qos),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits_region (_write_arbiter_io_sink_bits_region),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_deq_ready       (m_axi_aw_ready),
    .io_deq_valid       (m_axi_aw_valid),
    .io_deq_bits_id     (m_axi_aw_bits_id),
    .io_deq_bits_addr   (m_axi_aw_bits_addr),
    .io_deq_bits_len    (m_axi_aw_bits_len),
    .io_deq_bits_size   (m_axi_aw_bits_size),
    .io_deq_bits_burst  (m_axi_aw_bits_burst),
    .io_deq_bits_lock   (m_axi_aw_bits_lock),
    .io_deq_bits_cache  (m_axi_aw_bits_cache),
    .io_deq_bits_prot   (m_axi_aw_bits_prot),
    .io_deq_bits_qos    (m_axi_aw_bits_qos),
    .io_deq_bits_region (m_axi_aw_bits_region)
  );
  Queue2_WriteDataChannel_12 m_axi__sourceBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_m_axi__sourceBuffer_2_io_enq_ready),
    .io_enq_valid     (_write_mux_io_sink_valid),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_enq_bits_data (_write_mux_io_sink_bits_data),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_enq_bits_strb (_write_mux_io_sink_bits_strb),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_enq_bits_last (_write_mux_io_sink_bits_last),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_ready     (m_axi_w_ready),
    .io_deq_valid     (m_axi_w_valid),
    .io_deq_bits_data (m_axi_w_bits_data),
    .io_deq_bits_strb (m_axi_w_bits_strb),
    .io_deq_bits_last (m_axi_w_bits_last)
  );
  Queue2_WriteResponseChannel m_axi__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (m_axi_b_ready),
    .io_enq_valid     (m_axi_b_valid),
    .io_enq_bits_id   (2'h0),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:39:17, src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_enq_bits_resp (m_axi_b_bits_resp),
    .io_deq_ready     (m_axi__b_ready),	// src/main/scala/chext/elastic/Fork.scala:87:23
    .io_deq_valid     (_m_axi__sinkBuffer_1_io_deq_valid),
    .io_deq_bits_id   (_m_axi__sinkBuffer_1_io_deq_bits_id),
    .io_deq_bits_resp (_m_axi__sinkBuffer_1_io_deq_bits_resp)
  );
  elasticArbiter_2 read_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                    (clock),
    .reset                    (reset),
    .io_sources_0_ready       (s_axi_0_ar_ready),
    .io_sources_0_valid       (s_axi_0_ar_valid),
    .io_sources_0_bits_addr   (s_axi_0_ar_bits_addr),
    .io_sources_0_bits_len    (s_axi_0_ar_bits_len),
    .io_sources_0_bits_size   (s_axi_0_ar_bits_size),
    .io_sources_0_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_0_bits_lock   (s_axi_0_ar_bits_lock),
    .io_sources_0_bits_cache  (s_axi_0_ar_bits_cache),
    .io_sources_0_bits_prot   (s_axi_0_ar_bits_prot),
    .io_sources_0_bits_qos    (s_axi_0_ar_bits_qos),
    .io_sources_0_bits_region (s_axi_0_ar_bits_region),
    .io_sources_1_ready       (s_axi_1_ar_ready),
    .io_sources_1_valid       (s_axi_1_ar_valid),
    .io_sources_1_bits_addr   (s_axi_1_ar_bits_addr),
    .io_sources_1_bits_len    (s_axi_1_ar_bits_len),
    .io_sources_1_bits_size   (s_axi_1_ar_bits_size),
    .io_sources_1_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_1_bits_lock   (s_axi_1_ar_bits_lock),
    .io_sources_1_bits_cache  (s_axi_1_ar_bits_cache),
    .io_sources_1_bits_prot   (s_axi_1_ar_bits_prot),
    .io_sources_1_bits_qos    (s_axi_1_ar_bits_qos),
    .io_sources_1_bits_region (s_axi_1_ar_bits_region),
    .io_sources_2_ready       (s_axi_2_ar_ready),
    .io_sources_2_valid       (s_axi_2_ar_valid),
    .io_sources_2_bits_addr   (s_axi_2_ar_bits_addr),
    .io_sources_2_bits_len    (s_axi_2_ar_bits_len),
    .io_sources_2_bits_size   (s_axi_2_ar_bits_size),
    .io_sources_2_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_2_bits_lock   (s_axi_2_ar_bits_lock),
    .io_sources_2_bits_cache  (s_axi_2_ar_bits_cache),
    .io_sources_2_bits_prot   (s_axi_2_ar_bits_prot),
    .io_sources_2_bits_qos    (s_axi_2_ar_bits_qos),
    .io_sources_2_bits_region (s_axi_2_ar_bits_region),
    .io_sources_3_ready       (s_axi_3_ar_ready),
    .io_sources_3_valid       (s_axi_3_ar_valid),
    .io_sources_3_bits_addr   (s_axi_3_ar_bits_addr),
    .io_sources_3_bits_len    (s_axi_3_ar_bits_len),
    .io_sources_3_bits_size   (s_axi_3_ar_bits_size),
    .io_sources_3_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_3_bits_lock   (s_axi_3_ar_bits_lock),
    .io_sources_3_bits_cache  (s_axi_3_ar_bits_cache),
    .io_sources_3_bits_prot   (s_axi_3_ar_bits_prot),
    .io_sources_3_bits_qos    (s_axi_3_ar_bits_qos),
    .io_sources_3_bits_region (s_axi_3_ar_bits_region),
    .io_sink_ready            (_m_axi__sourceBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sink_valid            (_read_arbiter_io_sink_valid),
    .io_sink_bits_id          (_read_arbiter_io_sink_bits_id),
    .io_sink_bits_addr        (_read_arbiter_io_sink_bits_addr),
    .io_sink_bits_len         (_read_arbiter_io_sink_bits_len),
    .io_sink_bits_size        (_read_arbiter_io_sink_bits_size),
    .io_sink_bits_burst       (_read_arbiter_io_sink_bits_burst),
    .io_sink_bits_lock        (_read_arbiter_io_sink_bits_lock),
    .io_sink_bits_cache       (_read_arbiter_io_sink_bits_cache),
    .io_sink_bits_prot        (_read_arbiter_io_sink_bits_prot),
    .io_sink_bits_qos         (_read_arbiter_io_sink_bits_qos),
    .io_sink_bits_region      (_read_arbiter_io_sink_bits_region),
    .io_select_ready          (1'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:31:7
    .io_select_valid          (/* unused */),
    .io_select_bits           (/* unused */)
  );
  elasticDemux_9 read_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_read_demux_io_source_ready),
    .io_source_valid      (_m_axi__sinkBuffer_io_deq_valid & ~read_eagerFork_regs_0),	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_data  (_m_axi__sinkBuffer_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_source_bits_resp  (_m_axi__sinkBuffer_io_deq_bits_resp),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_source_bits_last  (_m_axi__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_sinks_0_ready     (s_axi_0_r_ready),
    .io_sinks_0_valid     (s_axi_0_r_valid),
    .io_sinks_0_bits_data (s_axi_0_r_bits_data),
    .io_sinks_0_bits_resp (s_axi_0_r_bits_resp),
    .io_sinks_0_bits_last (s_axi_0_r_bits_last),
    .io_sinks_1_ready     (s_axi_1_r_ready),
    .io_sinks_1_valid     (s_axi_1_r_valid),
    .io_sinks_1_bits_data (s_axi_1_r_bits_data),
    .io_sinks_1_bits_resp (s_axi_1_r_bits_resp),
    .io_sinks_1_bits_last (s_axi_1_r_bits_last),
    .io_sinks_2_ready     (s_axi_2_r_ready),
    .io_sinks_2_valid     (s_axi_2_r_valid),
    .io_sinks_2_bits_data (s_axi_2_r_bits_data),
    .io_sinks_2_bits_resp (s_axi_2_r_bits_resp),
    .io_sinks_2_bits_last (s_axi_2_r_bits_last),
    .io_sinks_3_ready     (s_axi_3_r_ready),
    .io_sinks_3_valid     (s_axi_3_r_valid),
    .io_sinks_3_bits_data (s_axi_3_r_bits_data),
    .io_sinks_3_bits_resp (s_axi_3_r_bits_resp),
    .io_sinks_3_bits_last (s_axi_3_r_bits_last),
    .io_select_ready      (_read_demux_io_select_ready),
    .io_select_valid      (_m_axi__sinkBuffer_io_deq_valid & ~read_eagerFork_regs_1),	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits       (_m_axi__sinkBuffer_io_deq_bits_id)	// src/main/scala/chext/elastic/Buffer.scala:148:30
  );
  Queue32_UInt2 write_portQueue (	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_portQueue_io_enq_ready),
    .io_enq_valid (_write_arbiter_io_select_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits  (_write_arbiter_io_select_bits),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_deq_ready (_write_mux_io_select_ready),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_valid (_write_portQueue_io_deq_valid),
    .io_deq_bits  (_write_portQueue_io_deq_bits)
  );
  elasticArbiter_2 write_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                    (clock),
    .reset                    (reset),
    .io_sources_0_ready       (s_axi_0_aw_ready),
    .io_sources_0_valid       (s_axi_0_aw_valid),
    .io_sources_0_bits_addr   (s_axi_0_aw_bits_addr),
    .io_sources_0_bits_len    (s_axi_0_aw_bits_len),
    .io_sources_0_bits_size   (s_axi_0_aw_bits_size),
    .io_sources_0_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_0_bits_lock   (s_axi_0_aw_bits_lock),
    .io_sources_0_bits_cache  (s_axi_0_aw_bits_cache),
    .io_sources_0_bits_prot   (s_axi_0_aw_bits_prot),
    .io_sources_0_bits_qos    (s_axi_0_aw_bits_qos),
    .io_sources_0_bits_region (s_axi_0_aw_bits_region),
    .io_sources_1_ready       (s_axi_1_aw_ready),
    .io_sources_1_valid       (s_axi_1_aw_valid),
    .io_sources_1_bits_addr   (s_axi_1_aw_bits_addr),
    .io_sources_1_bits_len    (s_axi_1_aw_bits_len),
    .io_sources_1_bits_size   (s_axi_1_aw_bits_size),
    .io_sources_1_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_1_bits_lock   (s_axi_1_aw_bits_lock),
    .io_sources_1_bits_cache  (s_axi_1_aw_bits_cache),
    .io_sources_1_bits_prot   (s_axi_1_aw_bits_prot),
    .io_sources_1_bits_qos    (s_axi_1_aw_bits_qos),
    .io_sources_1_bits_region (s_axi_1_aw_bits_region),
    .io_sources_2_ready       (s_axi_2_aw_ready),
    .io_sources_2_valid       (s_axi_2_aw_valid),
    .io_sources_2_bits_addr   (s_axi_2_aw_bits_addr),
    .io_sources_2_bits_len    (s_axi_2_aw_bits_len),
    .io_sources_2_bits_size   (s_axi_2_aw_bits_size),
    .io_sources_2_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_2_bits_lock   (s_axi_2_aw_bits_lock),
    .io_sources_2_bits_cache  (s_axi_2_aw_bits_cache),
    .io_sources_2_bits_prot   (s_axi_2_aw_bits_prot),
    .io_sources_2_bits_qos    (s_axi_2_aw_bits_qos),
    .io_sources_2_bits_region (s_axi_2_aw_bits_region),
    .io_sources_3_ready       (s_axi_3_aw_ready),
    .io_sources_3_valid       (s_axi_3_aw_valid),
    .io_sources_3_bits_addr   (s_axi_3_aw_bits_addr),
    .io_sources_3_bits_len    (s_axi_3_aw_bits_len),
    .io_sources_3_bits_size   (s_axi_3_aw_bits_size),
    .io_sources_3_bits_burst  (2'h1),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:38:17, src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_sources_3_bits_lock   (s_axi_3_aw_bits_lock),
    .io_sources_3_bits_cache  (s_axi_3_aw_bits_cache),
    .io_sources_3_bits_prot   (s_axi_3_aw_bits_prot),
    .io_sources_3_bits_qos    (s_axi_3_aw_bits_qos),
    .io_sources_3_bits_region (s_axi_3_aw_bits_region),
    .io_sink_ready            (_m_axi__sourceBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sink_valid            (_write_arbiter_io_sink_valid),
    .io_sink_bits_id          (_write_arbiter_io_sink_bits_id),
    .io_sink_bits_addr        (_write_arbiter_io_sink_bits_addr),
    .io_sink_bits_len         (_write_arbiter_io_sink_bits_len),
    .io_sink_bits_size        (_write_arbiter_io_sink_bits_size),
    .io_sink_bits_burst       (_write_arbiter_io_sink_bits_burst),
    .io_sink_bits_lock        (_write_arbiter_io_sink_bits_lock),
    .io_sink_bits_cache       (_write_arbiter_io_sink_bits_cache),
    .io_sink_bits_prot        (_write_arbiter_io_sink_bits_prot),
    .io_sink_bits_qos         (_write_arbiter_io_sink_bits_qos),
    .io_sink_bits_region      (_write_arbiter_io_sink_bits_region),
    .io_select_ready          (_write_portQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
    .io_select_valid          (_write_arbiter_io_select_valid),
    .io_select_bits           (_write_arbiter_io_select_bits)
  );
  elasticMux_4 write_mux (	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_sources_0_ready     (s_axi_0_w_ready),
    .io_sources_0_valid     (s_axi_0_w_valid),
    .io_sources_0_bits_data (s_axi_0_w_bits_data),
    .io_sources_0_bits_strb (s_axi_0_w_bits_strb),
    .io_sources_0_bits_last (s_axi_0_w_bits_last),
    .io_sources_1_ready     (s_axi_1_w_ready),
    .io_sources_1_valid     (s_axi_1_w_valid),
    .io_sources_1_bits_data (s_axi_1_w_bits_data),
    .io_sources_1_bits_strb (s_axi_1_w_bits_strb),
    .io_sources_1_bits_last (s_axi_1_w_bits_last),
    .io_sources_2_ready     (s_axi_2_w_ready),
    .io_sources_2_valid     (s_axi_2_w_valid),
    .io_sources_2_bits_data (s_axi_2_w_bits_data),
    .io_sources_2_bits_strb (s_axi_2_w_bits_strb),
    .io_sources_2_bits_last (s_axi_2_w_bits_last),
    .io_sources_3_ready     (s_axi_3_w_ready),
    .io_sources_3_valid     (s_axi_3_w_valid),
    .io_sources_3_bits_data (s_axi_3_w_bits_data),
    .io_sources_3_bits_strb (s_axi_3_w_bits_strb),
    .io_sources_3_bits_last (s_axi_3_w_bits_last),
    .io_sink_ready          (_m_axi__sourceBuffer_2_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_sink_valid          (_write_mux_io_sink_valid),
    .io_sink_bits_data      (_write_mux_io_sink_bits_data),
    .io_sink_bits_strb      (_write_mux_io_sink_bits_strb),
    .io_sink_bits_last      (_write_mux_io_sink_bits_last),
    .io_select_ready        (_write_mux_io_select_ready),
    .io_select_valid        (_write_portQueue_io_deq_valid),	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
    .io_select_bits         (_write_portQueue_io_deq_bits)	// src/main/scala/chext/amba/axi4/full/components/Mux.scala:83:27
  );
  elasticDemux_10 write_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_write_demux_io_source_ready),
    .io_source_valid      (_m_axi__sinkBuffer_1_io_deq_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_id    (_m_axi__sinkBuffer_1_io_deq_bits_id),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_source_bits_resp  (_m_axi__sinkBuffer_1_io_deq_bits_resp),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_sinks_0_ready     (s_axi_0_b_ready),
    .io_sinks_0_valid     (s_axi_0_b_valid),
    .io_sinks_0_bits_id   (/* unused */),
    .io_sinks_0_bits_resp (s_axi_0_b_bits_resp),
    .io_sinks_1_ready     (s_axi_1_b_ready),
    .io_sinks_1_valid     (s_axi_1_b_valid),
    .io_sinks_1_bits_id   (/* unused */),
    .io_sinks_1_bits_resp (s_axi_1_b_bits_resp),
    .io_sinks_2_ready     (s_axi_2_b_ready),
    .io_sinks_2_valid     (s_axi_2_b_valid),
    .io_sinks_2_bits_id   (/* unused */),
    .io_sinks_2_bits_resp (s_axi_2_b_bits_resp),
    .io_sinks_3_ready     (s_axi_3_b_ready),
    .io_sinks_3_valid     (s_axi_3_b_valid),
    .io_sinks_3_bits_id   (/* unused */),
    .io_sinks_3_bits_resp (s_axi_3_b_bits_resp),
    .io_select_ready      (_write_demux_io_select_ready),
    .io_select_valid      (_m_axi__sinkBuffer_1_io_deq_valid & ~write_eagerFork_regs_1),	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits       (_m_axi__sinkBuffer_1_io_deq_bits_id)	// src/main/scala/chext/elastic/Buffer.scala:148:30
  );
endmodule

module elasticDemux_11(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [15:0] io_source_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [7:0]  io_source_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [2:0]  io_source_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_source_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_bits_lock,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [3:0]  io_source_bits_cache,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [2:0]  io_source_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [3:0]  io_source_bits_qos,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_source_bits_region,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [15:0] io_sinks_0_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_0_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_0_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_0_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_bits_lock,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_0_bits_cache,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_0_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_0_bits_qos,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_0_bits_region,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [15:0] io_sinks_1_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_1_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_1_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_1_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_bits_lock,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_1_bits_cache,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_1_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_1_bits_qos,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_1_bits_region,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [15:0] io_sinks_2_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_2_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_2_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_2_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_bits_lock,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_2_bits_cache,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_2_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_2_bits_qos,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_2_bits_region,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [15:0] io_sinks_3_bits_addr,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [7:0]  io_sinks_3_bits_len,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_3_bits_size,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [1:0]  io_sinks_3_bits_burst,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_bits_lock,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_3_bits_cache,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [2:0]  io_sinks_3_bits_prot,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_3_bits_qos,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_3_bits_region,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_lock = io_source_bits_lock;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_cache = io_source_bits_cache;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_qos = io_source_bits_qos;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_region = io_source_bits_region;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_lock = io_source_bits_lock;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_cache = io_source_bits_cache;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_qos = io_source_bits_qos;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_region = io_source_bits_region;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_lock = io_source_bits_lock;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_cache = io_source_bits_cache;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_qos = io_source_bits_qos;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_region = io_source_bits_region;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_addr = io_source_bits_addr;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_len = io_source_bits_len;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_size = io_source_bits_size;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_burst = io_source_bits_burst;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_lock = io_source_bits_lock;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_cache = io_source_bits_cache;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_prot = io_source_bits_prot;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_qos = io_source_bits_qos;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_region = io_source_bits_region;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

module elasticArbiter_4(	// src/main/scala/chext/elastic/Arbiter.scala:11:7
  input         clock,	// <stdin>:40100:11
                reset,	// <stdin>:40101:11
  output        io_sources_0_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_0_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [31:0] io_sources_0_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_0_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_1_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_1_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [31:0] io_sources_1_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_1_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_2_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_2_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [31:0] io_sources_2_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_2_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sources_3_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_3_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input  [31:0] io_sources_3_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  input         io_sources_3_bits_last,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
                io_sink_ready,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sink_valid,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output [31:0] io_sink_bits_data,	// src/main/scala/chext/elastic/Arbiter.scala:21:14
  output        io_sink_bits_last	// src/main/scala/chext/elastic/Arbiter.scala:21:14
);

  wire             sourceReady;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  reg  [1:0]       chooser_lastChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35
  wire             _chooser_rrChoice_T_4 =
    chooser_lastChoice == 2'h0 & io_sources_1_valid;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}
  wire [1:0]       _chooser_rrChoice_T_9 =
    {1'h1, ~(~(chooser_lastChoice[1]) & io_sources_2_valid)};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, :37:{13,26}, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]       chooser_rrChoice =
    (&chooser_lastChoice) ? 2'h0 : _chooser_rrChoice_T_4 ? 2'h1 : _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35, :33:8, :34:18, :37:26, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [1:0]       chooser_priorityChoice =
    io_sources_0_valid ? 2'h0 : io_sources_1_valid ? 2'h1 : {1'h1, ~io_sources_2_valid};	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0]       _GEN =
    {{io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Chooser.scala:28:8
  wire [1:0]       _lastChoice_T =
    _GEN[chooser_rrChoice] ? chooser_rrChoice : chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0][31:0] _GEN_0 =
    {{io_sources_3_bits_data},
     {io_sources_2_bits_data},
     {io_sources_1_bits_data},
     {io_sources_0_bits_data}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  wire [3:0]       _GEN_1 =
    {{io_sources_3_bits_last},
     {io_sources_2_bits_last},
     {io_sources_1_bits_last},
     {io_sources_0_bits_last}};	// src/main/scala/chext/elastic/Arbiter.scala:44:15
  reg              sinkSent;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
  assign sourceReady = sinkSent | io_sink_ready;	// src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :49:30
  always @(posedge clock) begin	// <stdin>:40100:11
    if (reset) begin	// <stdin>:40100:11
      chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
      sinkSent <= 1'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
    end
    else begin	// <stdin>:40100:11
      if (_GEN[_lastChoice_T] & sourceReady) begin	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30, :52:22
        if (_GEN[chooser_rrChoice]) begin	// src/main/scala/chext/elastic/Chooser.scala:28:8, :33:8
          if (&chooser_lastChoice)	// src/main/scala/chext/elastic/Chooser.scala:24:35, :34:18
            chooser_lastChoice <= 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:21:14, src/main/scala/chext/elastic/Chooser.scala:24:35
          else if (_chooser_rrChoice_T_4)	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= 2'h1;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
          else	// src/main/scala/chext/elastic/Chooser.scala:37:26
            chooser_lastChoice <= _chooser_rrChoice_T_9;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
        end
        else	// src/main/scala/chext/elastic/Chooser.scala:28:8
          chooser_lastChoice <= chooser_priorityChoice;	// src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chisel3/util/Mux.scala:50:70
      end
      sinkSent <= (io_sink_ready | sinkSent) & _GEN[_lastChoice_T] & ~sourceReady;	// src/main/scala/chext/elastic/Arbiter.scala:44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :40:{30,58,61}, :49:30
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/elastic/Arbiter.scala:11:7
        chooser_lastChoice = _RANDOM[/*Zero width*/ 1'b0][2:1];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35
        sinkSent = _RANDOM[/*Zero width*/ 1'b0][5];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, src/main/scala/chext/elastic/Chooser.scala:24:35, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/elastic/Arbiter.scala:11:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_sources_0_ready = sourceReady & _lastChoice_T == 2'h0;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :21:14, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sources_1_ready = sourceReady & _lastChoice_T == 2'h1;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30, src/main/scala/chisel3/util/Mux.scala:50:70
  assign io_sources_2_ready = sourceReady & _lastChoice_T == 2'h2;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, :37:13, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sources_3_ready = sourceReady & (&_lastChoice_T);	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :48:{30,37}, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:49:30
  assign io_sink_valid = _GEN[_lastChoice_T] & ~sinkSent;	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8, src/main/scala/chext/elastic/internal/InputToOutputSelectModule.scala:36:27, :47:{30,33}
  assign io_sink_bits_data = _GEN_0[_lastChoice_T];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
  assign io_sink_bits_last = _GEN_1[_lastChoice_T];	// src/main/scala/chext/elastic/Arbiter.scala:11:7, :44:15, src/main/scala/chext/elastic/Chooser.scala:28:8
endmodule

module elasticDemux_13(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [31:0] io_source_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [3:0]  io_source_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_0_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_0_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_1_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_1_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_2_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_2_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [31:0] io_sinks_3_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [3:0]  io_sinks_3_bits_strb,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_strb = io_source_bits_strb;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire & io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28, :36:27
endmodule

module IdDemux(	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
  input         clock,	// <stdin>:40384:11
                reset,	// <stdin>:40385:11
  output        s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [1:0]  s_axi_ar_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [15:0] s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [3:0]  s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [2:0]  s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [3:0]  s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
                s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  output        s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  output [31:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
                s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [1:0]  s_axi_aw_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [15:0] s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [3:0]  s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [2:0]  s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [3:0]  s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
                s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  output        s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [31:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input  [3:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
                s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  output        s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  output [1:0]  s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:41:17
  input         m_axi_0_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_0_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_0_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_0_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_0_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_0_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_0_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_0_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_0_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_0_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [31:0] m_axi_0_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_0_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_0_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_0_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_0_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_0_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_0_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_0_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_0_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_0_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_0_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_0_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [31:0] m_axi_0_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_0_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_0_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_0_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_0_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [1:0]  m_axi_0_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_1_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_1_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_1_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_1_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_1_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_1_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_1_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_1_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_1_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_1_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [31:0] m_axi_1_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_1_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_1_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_1_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_1_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_1_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_1_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_1_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_1_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_1_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_1_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_1_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [31:0] m_axi_1_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_1_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_1_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_1_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_1_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [1:0]  m_axi_1_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_2_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_2_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_2_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_2_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_2_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_2_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_2_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_2_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_2_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_2_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [31:0] m_axi_2_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_2_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_2_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_2_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_2_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_2_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_2_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_2_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_2_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_2_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_2_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_2_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [31:0] m_axi_2_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_2_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_2_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_2_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_2_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [1:0]  m_axi_2_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_3_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_3_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_3_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_3_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_3_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_3_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_3_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_3_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_3_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_3_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [31:0] m_axi_3_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_3_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_3_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [15:0] m_axi_3_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [7:0]  m_axi_3_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_3_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [1:0]  m_axi_3_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_3_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [2:0]  m_axi_3_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_3_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_3_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_3_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [31:0] m_axi_3_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output [3:0]  m_axi_3_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  output        m_axi_3_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
                m_axi_3_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input         m_axi_3_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
  input  [1:0]  m_axi_3_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:42:17
);

  wire       _write_demux_1_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _write_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _write_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _write_portQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27
  wire       _write_portQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27
  wire [1:0] _write_portQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27
  wire       _read_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _read_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  reg        read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       read_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_demux_io_source_ready | read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       read_eagerFork_s_axi_ar_ready_qual1_1 =
    _read_demux_io_select_ready | read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       s_axi_ar_ready_0 =
    read_eagerFork_s_axi_ar_ready_qual1_0 & read_eagerFork_s_axi_ar_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  reg        write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        write_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       write_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_demux_io_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       write_eagerFork_s_axi_aw_ready_qual1_1 =
    _write_demux_io_select_ready | write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       write_eagerFork_s_axi_aw_ready_qual1_2 =
    _write_portQueue_io_enq_ready | write_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       s_axi_aw_ready_0 =
    write_eagerFork_s_axi_aw_ready_qual1_0 & write_eagerFork_s_axi_aw_ready_qual1_1
    & write_eagerFork_s_axi_aw_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  always @(posedge clock) begin	// <stdin>:40384:11
    if (reset) begin	// <stdin>:40384:11
      read_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:40384:11
      read_eagerFork_regs_0 <=
        read_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_eagerFork_regs_1 <=
        read_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_0 <=
        write_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_2 <=
        write_eagerFork_s_axi_aw_ready_qual1_2 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
        read_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_2 = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  elasticDemux_11 read_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready        (_read_demux_io_source_ready),
    .io_source_valid        (s_axi_ar_valid & ~read_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_addr    (s_axi_ar_bits_addr),
    .io_source_bits_len     (s_axi_ar_bits_len),
    .io_source_bits_size    (s_axi_ar_bits_size),
    .io_source_bits_burst   (s_axi_ar_bits_burst),
    .io_source_bits_lock    (s_axi_ar_bits_lock),
    .io_source_bits_cache   (s_axi_ar_bits_cache),
    .io_source_bits_prot    (s_axi_ar_bits_prot),
    .io_source_bits_qos     (s_axi_ar_bits_qos),
    .io_source_bits_region  (s_axi_ar_bits_region),
    .io_sinks_0_ready       (m_axi_0_ar_ready),
    .io_sinks_0_valid       (m_axi_0_ar_valid),
    .io_sinks_0_bits_addr   (m_axi_0_ar_bits_addr),
    .io_sinks_0_bits_len    (m_axi_0_ar_bits_len),
    .io_sinks_0_bits_size   (m_axi_0_ar_bits_size),
    .io_sinks_0_bits_burst  (m_axi_0_ar_bits_burst),
    .io_sinks_0_bits_lock   (m_axi_0_ar_bits_lock),
    .io_sinks_0_bits_cache  (m_axi_0_ar_bits_cache),
    .io_sinks_0_bits_prot   (m_axi_0_ar_bits_prot),
    .io_sinks_0_bits_qos    (m_axi_0_ar_bits_qos),
    .io_sinks_0_bits_region (m_axi_0_ar_bits_region),
    .io_sinks_1_ready       (m_axi_1_ar_ready),
    .io_sinks_1_valid       (m_axi_1_ar_valid),
    .io_sinks_1_bits_addr   (m_axi_1_ar_bits_addr),
    .io_sinks_1_bits_len    (m_axi_1_ar_bits_len),
    .io_sinks_1_bits_size   (m_axi_1_ar_bits_size),
    .io_sinks_1_bits_burst  (m_axi_1_ar_bits_burst),
    .io_sinks_1_bits_lock   (m_axi_1_ar_bits_lock),
    .io_sinks_1_bits_cache  (m_axi_1_ar_bits_cache),
    .io_sinks_1_bits_prot   (m_axi_1_ar_bits_prot),
    .io_sinks_1_bits_qos    (m_axi_1_ar_bits_qos),
    .io_sinks_1_bits_region (m_axi_1_ar_bits_region),
    .io_sinks_2_ready       (m_axi_2_ar_ready),
    .io_sinks_2_valid       (m_axi_2_ar_valid),
    .io_sinks_2_bits_addr   (m_axi_2_ar_bits_addr),
    .io_sinks_2_bits_len    (m_axi_2_ar_bits_len),
    .io_sinks_2_bits_size   (m_axi_2_ar_bits_size),
    .io_sinks_2_bits_burst  (m_axi_2_ar_bits_burst),
    .io_sinks_2_bits_lock   (m_axi_2_ar_bits_lock),
    .io_sinks_2_bits_cache  (m_axi_2_ar_bits_cache),
    .io_sinks_2_bits_prot   (m_axi_2_ar_bits_prot),
    .io_sinks_2_bits_qos    (m_axi_2_ar_bits_qos),
    .io_sinks_2_bits_region (m_axi_2_ar_bits_region),
    .io_sinks_3_ready       (m_axi_3_ar_ready),
    .io_sinks_3_valid       (m_axi_3_ar_valid),
    .io_sinks_3_bits_addr   (m_axi_3_ar_bits_addr),
    .io_sinks_3_bits_len    (m_axi_3_ar_bits_len),
    .io_sinks_3_bits_size   (m_axi_3_ar_bits_size),
    .io_sinks_3_bits_burst  (m_axi_3_ar_bits_burst),
    .io_sinks_3_bits_lock   (m_axi_3_ar_bits_lock),
    .io_sinks_3_bits_cache  (m_axi_3_ar_bits_cache),
    .io_sinks_3_bits_prot   (m_axi_3_ar_bits_prot),
    .io_sinks_3_bits_qos    (m_axi_3_ar_bits_qos),
    .io_sinks_3_bits_region (m_axi_3_ar_bits_region),
    .io_select_ready        (_read_demux_io_select_ready),
    .io_select_valid        (s_axi_ar_valid & ~read_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits         (s_axi_ar_bits_id)
  );
  elasticArbiter_4 read_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                  (clock),
    .reset                  (reset),
    .io_sources_0_ready     (m_axi_0_r_ready),
    .io_sources_0_valid     (m_axi_0_r_valid),
    .io_sources_0_bits_data (m_axi_0_r_bits_data),
    .io_sources_0_bits_last (m_axi_0_r_bits_last),
    .io_sources_1_ready     (m_axi_1_r_ready),
    .io_sources_1_valid     (m_axi_1_r_valid),
    .io_sources_1_bits_data (m_axi_1_r_bits_data),
    .io_sources_1_bits_last (m_axi_1_r_bits_last),
    .io_sources_2_ready     (m_axi_2_r_ready),
    .io_sources_2_valid     (m_axi_2_r_valid),
    .io_sources_2_bits_data (m_axi_2_r_bits_data),
    .io_sources_2_bits_last (m_axi_2_r_bits_last),
    .io_sources_3_ready     (m_axi_3_r_ready),
    .io_sources_3_valid     (m_axi_3_r_valid),
    .io_sources_3_bits_data (m_axi_3_r_bits_data),
    .io_sources_3_bits_last (m_axi_3_r_bits_last),
    .io_sink_ready          (s_axi_r_ready),
    .io_sink_valid          (s_axi_r_valid),
    .io_sink_bits_data      (s_axi_r_bits_data),
    .io_sink_bits_last      (s_axi_r_bits_last)
  );
  Queue8_UInt2 write_portQueue (	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_portQueue_io_enq_ready),
    .io_enq_valid (s_axi_aw_valid & ~write_eagerFork_regs_2),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (s_axi_aw_bits_id),
    .io_deq_ready (_write_demux_1_io_select_ready),	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_deq_valid (_write_portQueue_io_deq_valid),
    .io_deq_bits  (_write_portQueue_io_deq_bits)
  );
  elasticDemux_11 write_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready        (_write_demux_io_source_ready),
    .io_source_valid        (s_axi_aw_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_addr    (s_axi_aw_bits_addr),
    .io_source_bits_len     (s_axi_aw_bits_len),
    .io_source_bits_size    (s_axi_aw_bits_size),
    .io_source_bits_burst   (s_axi_aw_bits_burst),
    .io_source_bits_lock    (s_axi_aw_bits_lock),
    .io_source_bits_cache   (s_axi_aw_bits_cache),
    .io_source_bits_prot    (s_axi_aw_bits_prot),
    .io_source_bits_qos     (s_axi_aw_bits_qos),
    .io_source_bits_region  (s_axi_aw_bits_region),
    .io_sinks_0_ready       (m_axi_0_aw_ready),
    .io_sinks_0_valid       (m_axi_0_aw_valid),
    .io_sinks_0_bits_addr   (m_axi_0_aw_bits_addr),
    .io_sinks_0_bits_len    (m_axi_0_aw_bits_len),
    .io_sinks_0_bits_size   (m_axi_0_aw_bits_size),
    .io_sinks_0_bits_burst  (m_axi_0_aw_bits_burst),
    .io_sinks_0_bits_lock   (m_axi_0_aw_bits_lock),
    .io_sinks_0_bits_cache  (m_axi_0_aw_bits_cache),
    .io_sinks_0_bits_prot   (m_axi_0_aw_bits_prot),
    .io_sinks_0_bits_qos    (m_axi_0_aw_bits_qos),
    .io_sinks_0_bits_region (m_axi_0_aw_bits_region),
    .io_sinks_1_ready       (m_axi_1_aw_ready),
    .io_sinks_1_valid       (m_axi_1_aw_valid),
    .io_sinks_1_bits_addr   (m_axi_1_aw_bits_addr),
    .io_sinks_1_bits_len    (m_axi_1_aw_bits_len),
    .io_sinks_1_bits_size   (m_axi_1_aw_bits_size),
    .io_sinks_1_bits_burst  (m_axi_1_aw_bits_burst),
    .io_sinks_1_bits_lock   (m_axi_1_aw_bits_lock),
    .io_sinks_1_bits_cache  (m_axi_1_aw_bits_cache),
    .io_sinks_1_bits_prot   (m_axi_1_aw_bits_prot),
    .io_sinks_1_bits_qos    (m_axi_1_aw_bits_qos),
    .io_sinks_1_bits_region (m_axi_1_aw_bits_region),
    .io_sinks_2_ready       (m_axi_2_aw_ready),
    .io_sinks_2_valid       (m_axi_2_aw_valid),
    .io_sinks_2_bits_addr   (m_axi_2_aw_bits_addr),
    .io_sinks_2_bits_len    (m_axi_2_aw_bits_len),
    .io_sinks_2_bits_size   (m_axi_2_aw_bits_size),
    .io_sinks_2_bits_burst  (m_axi_2_aw_bits_burst),
    .io_sinks_2_bits_lock   (m_axi_2_aw_bits_lock),
    .io_sinks_2_bits_cache  (m_axi_2_aw_bits_cache),
    .io_sinks_2_bits_prot   (m_axi_2_aw_bits_prot),
    .io_sinks_2_bits_qos    (m_axi_2_aw_bits_qos),
    .io_sinks_2_bits_region (m_axi_2_aw_bits_region),
    .io_sinks_3_ready       (m_axi_3_aw_ready),
    .io_sinks_3_valid       (m_axi_3_aw_valid),
    .io_sinks_3_bits_addr   (m_axi_3_aw_bits_addr),
    .io_sinks_3_bits_len    (m_axi_3_aw_bits_len),
    .io_sinks_3_bits_size   (m_axi_3_aw_bits_size),
    .io_sinks_3_bits_burst  (m_axi_3_aw_bits_burst),
    .io_sinks_3_bits_lock   (m_axi_3_aw_bits_lock),
    .io_sinks_3_bits_cache  (m_axi_3_aw_bits_cache),
    .io_sinks_3_bits_prot   (m_axi_3_aw_bits_prot),
    .io_sinks_3_bits_qos    (m_axi_3_aw_bits_qos),
    .io_sinks_3_bits_region (m_axi_3_aw_bits_region),
    .io_select_ready        (_write_demux_io_select_ready),
    .io_select_valid        (s_axi_aw_valid & ~write_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits         (s_axi_aw_bits_id)
  );
  elasticDemux_13 write_demux_1 (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (s_axi_w_ready),
    .io_source_valid      (s_axi_w_valid),
    .io_source_bits_data  (s_axi_w_bits_data),
    .io_source_bits_strb  (s_axi_w_bits_strb),
    .io_source_bits_last  (s_axi_w_bits_last),
    .io_sinks_0_ready     (m_axi_0_w_ready),
    .io_sinks_0_valid     (m_axi_0_w_valid),
    .io_sinks_0_bits_data (m_axi_0_w_bits_data),
    .io_sinks_0_bits_strb (m_axi_0_w_bits_strb),
    .io_sinks_0_bits_last (m_axi_0_w_bits_last),
    .io_sinks_1_ready     (m_axi_1_w_ready),
    .io_sinks_1_valid     (m_axi_1_w_valid),
    .io_sinks_1_bits_data (m_axi_1_w_bits_data),
    .io_sinks_1_bits_strb (m_axi_1_w_bits_strb),
    .io_sinks_1_bits_last (m_axi_1_w_bits_last),
    .io_sinks_2_ready     (m_axi_2_w_ready),
    .io_sinks_2_valid     (m_axi_2_w_valid),
    .io_sinks_2_bits_data (m_axi_2_w_bits_data),
    .io_sinks_2_bits_strb (m_axi_2_w_bits_strb),
    .io_sinks_2_bits_last (m_axi_2_w_bits_last),
    .io_sinks_3_ready     (m_axi_3_w_ready),
    .io_sinks_3_valid     (m_axi_3_w_valid),
    .io_sinks_3_bits_data (m_axi_3_w_bits_data),
    .io_sinks_3_bits_strb (m_axi_3_w_bits_strb),
    .io_sinks_3_bits_last (m_axi_3_w_bits_last),
    .io_select_ready      (_write_demux_1_io_select_ready),
    .io_select_valid      (_write_portQueue_io_deq_valid),	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27
    .io_select_bits       (_write_portQueue_io_deq_bits)	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:101:27
  );
  elasticArbiter_1 write_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                  (clock),
    .reset                  (reset),
    .io_sources_0_ready     (m_axi_0_b_ready),
    .io_sources_0_valid     (m_axi_0_b_valid),
    .io_sources_0_bits_resp (m_axi_0_b_bits_resp),
    .io_sources_1_ready     (m_axi_1_b_ready),
    .io_sources_1_valid     (m_axi_1_b_valid),
    .io_sources_1_bits_resp (m_axi_1_b_bits_resp),
    .io_sources_2_ready     (m_axi_2_b_ready),
    .io_sources_2_valid     (m_axi_2_b_valid),
    .io_sources_2_bits_resp (m_axi_2_b_bits_resp),
    .io_sources_3_ready     (m_axi_3_b_ready),
    .io_sources_3_valid     (m_axi_3_b_valid),
    .io_sources_3_bits_resp (m_axi_3_b_bits_resp),
    .io_sink_ready          (s_axi_b_ready),
    .io_sink_valid          (s_axi_b_valid),
    .io_sink_bits_resp      (s_axi_b_bits_resp)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/amba/axi4/full/components/IdDemux.scala:38:7, src/main/scala/chext/elastic/Fork.scala:87:23
endmodule

module Queue2_AddrLenSizeBurstBundle_28(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:40687:11, :40958:11, :41397:11, :41668:11, :42107:11, :42378:11, :42817:11, :43088:11
               reset,	// <stdin>:40688:11, :40959:11, :41398:11, :41669:11, :42108:11, :42379:11, :42818:11, :43089:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_burst	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [15:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:40687:11, :40958:11, :41397:11, :41668:11, :42107:11, :42378:11, :42817:11, :43088:11
    if (reset) begin	// <stdin>:40687:11, :40958:11, :41397:11, :41668:11, :42107:11, :42378:11, :42817:11, :43088:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:40687:11, :40958:11, :41397:11, :41668:11, :42107:11, :42378:11, :42817:11, :43088:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x16 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_burst, io_enq_bits_size, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[10:3];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[13:11];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[15:14];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_AddrSizeLastBundle_28(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:40738:11, :41009:11, :41448:11, :41719:11, :42158:11, :42429:11, :42868:11, :43139:11
               reset,	// <stdin>:40739:11, :41010:11, :41449:11, :41720:11, :42159:11, :42430:11, :42869:11, :43140:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits_addr	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:40738:11, :41009:11, :41448:11, :41719:11, :42158:11, :42429:11, :42868:11, :43139:11
    if (reset) begin	// <stdin>:40738:11, :41009:11, :41448:11, :41719:11, :42158:11, :42429:11, :42868:11, :43139:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:40738:11, :41009:11, :41448:11, :41719:11, :42158:11, :42429:11, :42868:11, :43139:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x3 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_addr),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_addr)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module AddressGenerator_28(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
  input        clock,	// <stdin>:40789:11, :41060:11, :41499:11, :41770:11, :42209:11, :42480:11, :42919:11, :43190:11
               reset,	// <stdin>:40790:11, :41061:11, :41500:11, :41771:11, :42210:11, :42481:11, :42920:11, :43191:11
  output       source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input        source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [2:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [7:0] source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [2:0] source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input  [1:0] source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:18
  input        sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output       sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
  output [2:0] sink_bits_addr	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:56:16
);

  wire       _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire       _source__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0] _source__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0] _source__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0] _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0] _source__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg  [2:0] addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25
  reg  [7:0] ctr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24
  reg        generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
  wire       sink__valid =
    _source__sourceBuffer_io_deq_valid & _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22, src/main/scala/chext/elastic/Buffer.scala:93:32, :148:30
  wire       last = ctr == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :77:22
  wire [9:0] _result_addr_T = {7'h0, addr} << _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :106:31, src/main/scala/chext/elastic/Buffer.scala:93:32
  wire       last_1 = _source__sourceBuffer_io_deq_bits_len == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:77:22, :114:30, src/main/scala/chext/elastic/Buffer.scala:93:32
  always @(posedge clock) begin	// <stdin>:40789:11, :41060:11, :41499:11, :41770:11, :42209:11, :42480:11, :42919:11, :43190:11
    if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        if (~last) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
          if (_source__sourceBuffer_io_deq_bits_burst == 2'h1)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:85:28, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <= addr + 3'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24
          else if (_source__sourceBuffer_io_deq_bits_burst == 2'h2)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:87:34, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <=
              ~(_source__sourceBuffer_io_deq_bits_len[2:0]) & addr
              | _source__sourceBuffer_io_deq_bits_len[2:0] & addr + 3'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :89:23, :90:{25,34,44,51}, src/main/scala/chext/elastic/Buffer.scala:93:32
          ctr <= ctr - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :83:20
        end
      end
      else if (~last_1) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
        addr <=
          (_source__sourceBuffer_io_deq_bits_addr
           >> _source__sourceBuffer_io_deq_bits_size) + 3'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:64:25, :86:24, :120:{32,49}, src/main/scala/chext/elastic/Buffer.scala:93:32
        ctr <= _source__sourceBuffer_io_deq_bits_len - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:67:24, :121:28, src/main/scala/chext/elastic/Buffer.scala:93:32
      end
    end
    if (reset)	// <stdin>:40789:11, :41060:11, :41499:11, :41770:11, :42209:11, :42480:11, :42919:11, :43190:11
      generating <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :70:35
    else if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
      if (generating)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last & generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :77:22, :79:18, :80:20
      else	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35
        generating <= ~last_1 | generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :114:30, :116:18, :119:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        addr = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25
        ctr = _RANDOM[/*Zero width*/ 1'b0][10:3];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :67:24
        generating = _RANDOM[/*Zero width*/ 1'b0][11];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :64:25, :70:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddrLenSizeBurstBundle_28 source__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (source_ready),
    .io_enq_valid      (source_valid),
    .io_enq_bits_addr  (source_bits_addr),
    .io_enq_bits_len   (source_bits_len),
    .io_enq_bits_size  (source_bits_size),
    .io_enq_bits_burst (source_bits_burst),
    .io_deq_ready      (sink__valid & (generating ? last : last_1)),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :75:{22,38}, :76:22, :77:22, :79:18, :114:30, :116:18, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid      (_source__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr  (_source__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_source__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size  (_source__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst (_source__sourceBuffer_io_deq_bits_burst)
  );
  Queue2_AddrSizeLastBundle_28 sink__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sink__sinkBuffer_io_enq_ready),
    .io_enq_valid     (sink__valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:75:22
    .io_enq_bits_addr
      (~generating | _source__sourceBuffer_io_deq_bits_burst == 2'h0
         ? _source__sourceBuffer_io_deq_bits_addr
         : _result_addr_T[2:0]),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :94:{26,47}, :106:{23,31}, src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_enq_bits_size (_source__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_last (generating ? last : last_1),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:70:35, :76:22, :77:22, :94:47, :114:30, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_deq_ready     (sink_ready),
    .io_deq_valid     (sink_valid),
    .io_deq_bits_addr (sink_bits_addr)
  );
endmodule

// VCS coverage exclude_file
module ram_16x1(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output       R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
               W0_data
);

  reg Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_UInt1(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:40893:11, :41164:11, :41603:11, :41874:11, :42313:11, :42584:11, :43023:11, :43294:11
         reset,	// <stdin>:40894:11, :41165:11, :41604:11, :41875:11, :42314:11, :42585:11, :43024:11, :43295:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:40893:11, :41164:11, :41603:11, :41874:11, :42313:11, :42584:11, :43023:11, :43294:11
    if (reset) begin	// <stdin>:40893:11, :41164:11, :41603:11, :41874:11, :42313:11, :42584:11, :43023:11, :43294:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:40893:11, :41164:11, :41603:11, :41874:11, :42313:11, :42584:11, :43023:11, :43294:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module SteerRight_8(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7
  input  [63:0] dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:34:18
  input         offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:35:20
  output [31:0] dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:36:19
);

  assign dataOut = offsetIn ? dataIn[63:32] : dataIn[31:0];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7, :42:13, :46:11
endmodule

module SteerLeft_4(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7
  input  [31:0] dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:13:18
  input         offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:14:20
  output [63:0] dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:15:19
);

  assign dataOut = offsetIn ? {dataIn, 32'h0} : {32'h0, dataIn};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7, :21:10, :25:11
endmodule

module SteerLeft_5(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7
  input  [3:0] dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:13:18
  input        offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:14:20
  output [7:0] dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:15:19
);

  assign dataOut = offsetIn ? {dataIn, 4'h0} : {4'h0, dataIn};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7, :21:10, :25:11
endmodule

module Upscale(	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  input         clock,	// <stdin>:41247:11, :41957:11, :42667:11, :43377:11
                reset,	// <stdin>:41248:11, :41958:11, :42668:11, :43378:11
  output        s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [15:0] s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [3:0]  s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [2:0]  s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [3:0]  s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output        s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [31:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [15:0] s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [3:0]  s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [2:0]  s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [3:0]  s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output        s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [31:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [3:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output        s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [1:0]  s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input         m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [15:0] m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [7:0]  m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [2:0]  m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [1:0]  m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [3:0]  m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [2:0]  m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [3:0]  m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
                m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  input         m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  input  [63:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  input         m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
                m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [15:0] m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [7:0]  m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [2:0]  m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [1:0]  m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [3:0]  m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [2:0]  m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [3:0]  m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
                m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  input         m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [63:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output [7:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  output        m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
                m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  input         m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
  input  [1:0]  m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:42:17
);

  wire       _write_offsetQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
  wire       _write_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
  wire       _write_offsetQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
  wire       _write_addressGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34
  wire       _write_addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34
  wire [2:0] _write_addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34
  wire       _read_offsetQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29
  wire       _read_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29
  wire       _read_offsetQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29
  wire       _read_addressGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34
  wire       _read_addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34
  wire [2:0] _read_addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34
  reg        read_ar_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       read_ar_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_addressGenerator_source_ready | read_ar_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       read_ar_eagerFork_s_axi_ar_ready_qual1_1 =
    m_axi_ar_ready | read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       s_axi_ar_ready_0 =
    read_ar_eagerFork_s_axi_ar_ready_qual1_0 & read_ar_eagerFork_s_axi_ar_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire       s_axi_r_valid_0 = m_axi_r_valid & _read_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29, src/main/scala/chext/elastic/Join.scala:41:55
  wire       m_axi_r_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg        write_aw_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        write_aw_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       write_aw_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_addressGenerator_source_ready | write_aw_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       write_aw_eagerFork_s_axi_aw_ready_qual1_1 =
    m_axi_aw_ready | write_aw_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       s_axi_aw_ready_0 =
    write_aw_eagerFork_s_axi_aw_ready_qual1_0 & write_aw_eagerFork_s_axi_aw_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire       m_axi_w_valid_0 = s_axi_w_valid & _write_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29, src/main/scala/chext/elastic/Join.scala:41:55
  wire       s_axi_w_ready_0 = m_axi_w_ready & m_axi_w_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  always @(posedge clock) begin	// <stdin>:41247:11, :41957:11, :42667:11, :43377:11
    if (reset) begin	// <stdin>:41247:11, :41957:11, :42667:11, :43377:11
      read_ar_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_ar_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_aw_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_aw_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:41247:11, :41957:11, :42667:11, :43377:11
      read_ar_eagerFork_regs_0 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_1 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_aw_eagerFork_regs_0 <=
        write_aw_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_aw_eagerFork_regs_1 <=
        write_aw_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
        read_ar_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_ar_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_aw_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_aw_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressGenerator_28 read_addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_ar_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr[2:0]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:53:24
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (_read_offsetQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29
    .sink_valid        (_read_addressGenerator_sink_valid),
    .sink_bits_addr    (_read_addressGenerator_sink_bits_addr)
  );
  Queue16_UInt1 read_offsetQueue (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_offsetQueue_io_enq_ready),
    .io_enq_valid (_read_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34
    .io_enq_bits  (_read_addressGenerator_sink_bits_addr[2]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:34, src/main/scala/chext/util/BitOps.scala:82:10
    .io_deq_ready (m_axi_r_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_read_offsetQueue_io_deq_valid),
    .io_deq_bits  (_read_offsetQueue_io_deq_bits)
  );
  SteerRight_8 read_r_steerRight (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:72:30
    .dataIn   (m_axi_r_bits_data),
    .offsetIn (_read_offsetQueue_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:46:29
    .dataOut  (s_axi_r_bits_data)
  );
  AddressGenerator_28 write_addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_aw_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr[2:0]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:105:24
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (_write_offsetQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
    .sink_valid        (_write_addressGenerator_sink_valid),
    .sink_bits_addr    (_write_addressGenerator_sink_bits_addr)
  );
  Queue16_UInt1 write_offsetQueue (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_offsetQueue_io_enq_ready),
    .io_enq_valid (_write_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34
    .io_enq_bits  (_write_addressGenerator_sink_bits_addr[2]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:34, src/main/scala/chext/util/BitOps.scala:82:10
    .io_deq_ready (s_axi_w_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_write_offsetQueue_io_deq_valid),
    .io_deq_bits  (_write_offsetQueue_io_deq_bits)
  );
  SteerLeft_4 write_w_steerLeft (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:124:29
    .dataIn   (s_axi_w_bits_data),
    .offsetIn (_write_offsetQueue_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
    .dataOut  (m_axi_w_bits_data)
  );
  SteerLeft_5 write_w_steerLeftStrobe (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:125:35
    .dataIn   (s_axi_w_bits_strb),
    .offsetIn (_write_offsetQueue_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:98:29
    .dataOut  (m_axi_w_bits_strb)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign s_axi_r_bits_last = m_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_w_ready = s_axi_w_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign s_axi_b_valid = m_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign s_axi_b_bits_resp = m_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_valid = s_axi_ar_valid & ~read_ar_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
  assign m_axi_ar_bits_addr = s_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_len = s_axi_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_size = s_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_burst = s_axi_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_lock = s_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_cache = s_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_prot = s_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_qos = s_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_ar_bits_region = s_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_r_ready = m_axi_r_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign m_axi_aw_valid = s_axi_aw_valid & ~write_aw_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
  assign m_axi_aw_bits_addr = s_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_len = s_axi_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_size = s_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_burst = s_axi_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_lock = s_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_cache = s_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_prot = s_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_qos = s_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_aw_bits_region = s_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_w_valid = m_axi_w_valid_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign m_axi_w_bits_last = s_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
  assign m_axi_b_ready = s_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:38:7
endmodule

module elasticDemux_14(	// src/main/scala/chext/elastic/Demux.scala:10:7
  output        io_source_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [63:0] io_source_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_source_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_sinks_0_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_0_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_0_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_1_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_1_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_1_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_2_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_2_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_2_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_sinks_3_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output [63:0] io_sinks_3_bits_data,	// src/main/scala/chext/elastic/Demux.scala:20:14
  output        io_sinks_3_bits_last,	// src/main/scala/chext/elastic/Demux.scala:20:14
                io_select_ready,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Demux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Demux.scala:20:14
);

  wire       valid = io_select_valid & io_source_valid;	// src/main/scala/chext/elastic/Demux.scala:26:39
  wire [3:0] _GEN =
    {{io_sinks_3_ready}, {io_sinks_2_ready}, {io_sinks_1_ready}, {io_sinks_0_ready}};	// src/main/scala/chext/elastic/Demux.scala:27:28
  wire       fire = valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Demux.scala:26:39, :27:28
  assign io_source_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
  assign io_sinks_0_valid = valid & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_0_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_0_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_valid = valid & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_1_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_1_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_valid = valid & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_2_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_2_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_valid = valid & (&io_select_bits);	// src/main/scala/chext/elastic/Demux.scala:10:7, :26:39, :34:{22,30}
  assign io_sinks_3_bits_data = io_source_bits_data;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_sinks_3_bits_last = io_source_bits_last;	// src/main/scala/chext/elastic/Demux.scala:10:7
  assign io_select_ready = fire;	// src/main/scala/chext/elastic/Demux.scala:10:7, :27:28
endmodule

module elasticMux_5(	// src/main/scala/chext/elastic/Mux.scala:10:7
  output        io_sources_0_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_0_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [63:0] io_sources_0_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [7:0]  io_sources_0_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_0_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_1_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_1_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [63:0] io_sources_1_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [7:0]  io_sources_1_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_1_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_2_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_2_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [63:0] io_sources_2_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [7:0]  io_sources_2_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_2_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sources_3_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_3_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [63:0] io_sources_3_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [7:0]  io_sources_3_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_sources_3_bits_last,	// src/main/scala/chext/elastic/Mux.scala:20:14
                io_sink_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_sink_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [63:0] io_sink_bits_data,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output [7:0]  io_sink_bits_strb,	// src/main/scala/chext/elastic/Mux.scala:20:14
  output        io_select_ready,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input         io_select_valid,	// src/main/scala/chext/elastic/Mux.scala:20:14
  input  [1:0]  io_select_bits	// src/main/scala/chext/elastic/Mux.scala:20:14
);

  wire [3:0]       _GEN =
    {{io_sources_3_valid},
     {io_sources_2_valid},
     {io_sources_1_valid},
     {io_sources_0_valid}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [3:0][63:0] _GEN_0 =
    {{io_sources_3_bits_data},
     {io_sources_2_bits_data},
     {io_sources_1_bits_data},
     {io_sources_0_bits_data}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [3:0][7:0]  _GEN_1 =
    {{io_sources_3_bits_strb},
     {io_sources_2_bits_strb},
     {io_sources_1_bits_strb},
     {io_sources_0_bits_strb}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire [3:0]       _GEN_2 =
    {{io_sources_3_bits_last},
     {io_sources_2_bits_last},
     {io_sources_1_bits_last},
     {io_sources_0_bits_last}};	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire             valid = io_select_valid & _GEN[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:26:39
  wire             fire = valid & io_sink_ready;	// src/main/scala/chext/elastic/Mux.scala:26:39, :27:28
  assign io_sources_0_ready = fire & io_select_bits == 2'h0;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_1_ready = fire & io_select_bits == 2'h1;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_2_ready = fire & io_select_bits == 2'h2;	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sources_3_ready = fire & (&io_select_bits);	// src/main/scala/chext/elastic/Mux.scala:10:7, :27:28, :31:{21,28}
  assign io_sink_valid = valid;	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_data = _GEN_0[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_sink_bits_strb = _GEN_1[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39
  assign io_select_ready = fire & _GEN_2[io_select_bits];	// src/main/scala/chext/elastic/Mux.scala:10:7, :26:39, :27:28, :38:27
endmodule

module IdMux(	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
  input         clock,	// <stdin>:43835:11
                reset,	// <stdin>:43836:11
  output        s_axi_0_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_0_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_0_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_0_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_0_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_0_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_0_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_0_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_0_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_0_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [63:0] s_axi_0_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_0_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_0_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_0_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_0_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_0_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_0_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_0_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_0_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_0_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_0_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_0_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [63:0] s_axi_0_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_0_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_0_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_0_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_0_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [1:0]  s_axi_0_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_1_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_1_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_1_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_1_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_1_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_1_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_1_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_1_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_1_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_1_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [63:0] s_axi_1_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_1_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_1_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_1_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_1_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_1_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_1_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_1_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_1_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_1_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_1_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_1_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [63:0] s_axi_1_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_1_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_1_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_1_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_1_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [1:0]  s_axi_1_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_2_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_2_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_2_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_2_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_2_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_2_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_2_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_2_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_2_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_2_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [63:0] s_axi_2_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_2_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_2_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_2_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_2_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_2_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_2_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_2_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_2_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_2_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_2_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_2_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [63:0] s_axi_2_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_2_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_2_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_2_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_2_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [1:0]  s_axi_2_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_3_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_3_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_3_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_3_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_3_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_3_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_3_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_3_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_3_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_3_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [63:0] s_axi_3_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_3_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_3_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [15:0] s_axi_3_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_3_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_3_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [1:0]  s_axi_3_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_3_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [2:0]  s_axi_3_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [3:0]  s_axi_3_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_3_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_3_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [63:0] s_axi_3_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input  [7:0]  s_axi_3_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         s_axi_3_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
                s_axi_3_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output        s_axi_3_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  output [1:0]  s_axi_3_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:32:17
  input         m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output        m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [1:0]  m_axi_ar_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [15:0] m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [7:0]  m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [2:0]  m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [1:0]  m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output        m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input         m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input  [1:0]  m_axi_r_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input  [63:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input         m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
                m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output        m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [1:0]  m_axi_aw_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [15:0] m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [7:0]  m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [2:0]  m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [1:0]  m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input         m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output        m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [63:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output [7:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  output        m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input         m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
  input  [1:0]  m_axi_b_bits_id,	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
                m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:33:17
);

  wire       _write_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _write_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _write_mux_io_select_ready;	// src/main/scala/chext/elastic/Mux.scala:50:21
  wire       _write_arbiter_io_select_valid;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire [1:0] _write_arbiter_io_select_bits;	// src/main/scala/chext/elastic/Arbiter.scala:65:25
  wire       _write_portQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
  wire       _write_portQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
  wire [1:0] _write_portQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
  wire       _read_demux_io_source_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  wire       _read_demux_io_select_ready;	// src/main/scala/chext/elastic/Demux.scala:48:23
  reg        read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       read_eagerFork_m_axi_r_ready_qual1_0 =
    _read_demux_io_source_ready | read_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       read_eagerFork_m_axi_r_ready_qual1_1 =
    _read_demux_io_select_ready | read_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       m_axi_r_ready_0 =
    read_eagerFork_m_axi_r_ready_qual1_0 & read_eagerFork_m_axi_r_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  reg        write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       write_eagerFork_m_axi_b_ready_qual1_0 =
    _write_demux_io_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       write_eagerFork_m_axi_b_ready_qual1_1 =
    _write_demux_io_select_ready | write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Demux.scala:48:23, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       m_axi_b_ready_0 =
    write_eagerFork_m_axi_b_ready_qual1_0 & write_eagerFork_m_axi_b_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  always @(posedge clock) begin	// <stdin>:43835:11
    if (reset) begin	// <stdin>:43835:11
      read_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:43835:11
      read_eagerFork_regs_0 <=
        read_eagerFork_m_axi_r_ready_qual1_0 & m_axi_r_valid & ~m_axi_r_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_eagerFork_regs_1 <=
        read_eagerFork_m_axi_r_ready_qual1_1 & m_axi_r_valid & ~m_axi_r_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_0 <=
        write_eagerFork_m_axi_b_ready_qual1_0 & m_axi_b_valid & ~m_axi_b_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_m_axi_b_ready_qual1_1 & m_axi_b_valid & ~m_axi_b_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
        read_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  elasticArbiter_2 read_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                    (clock),
    .reset                    (reset),
    .io_sources_0_ready       (s_axi_0_ar_ready),
    .io_sources_0_valid       (s_axi_0_ar_valid),
    .io_sources_0_bits_addr   (s_axi_0_ar_bits_addr),
    .io_sources_0_bits_len    (s_axi_0_ar_bits_len),
    .io_sources_0_bits_size   (s_axi_0_ar_bits_size),
    .io_sources_0_bits_burst  (s_axi_0_ar_bits_burst),
    .io_sources_0_bits_lock   (s_axi_0_ar_bits_lock),
    .io_sources_0_bits_cache  (s_axi_0_ar_bits_cache),
    .io_sources_0_bits_prot   (s_axi_0_ar_bits_prot),
    .io_sources_0_bits_qos    (s_axi_0_ar_bits_qos),
    .io_sources_0_bits_region (s_axi_0_ar_bits_region),
    .io_sources_1_ready       (s_axi_1_ar_ready),
    .io_sources_1_valid       (s_axi_1_ar_valid),
    .io_sources_1_bits_addr   (s_axi_1_ar_bits_addr),
    .io_sources_1_bits_len    (s_axi_1_ar_bits_len),
    .io_sources_1_bits_size   (s_axi_1_ar_bits_size),
    .io_sources_1_bits_burst  (s_axi_1_ar_bits_burst),
    .io_sources_1_bits_lock   (s_axi_1_ar_bits_lock),
    .io_sources_1_bits_cache  (s_axi_1_ar_bits_cache),
    .io_sources_1_bits_prot   (s_axi_1_ar_bits_prot),
    .io_sources_1_bits_qos    (s_axi_1_ar_bits_qos),
    .io_sources_1_bits_region (s_axi_1_ar_bits_region),
    .io_sources_2_ready       (s_axi_2_ar_ready),
    .io_sources_2_valid       (s_axi_2_ar_valid),
    .io_sources_2_bits_addr   (s_axi_2_ar_bits_addr),
    .io_sources_2_bits_len    (s_axi_2_ar_bits_len),
    .io_sources_2_bits_size   (s_axi_2_ar_bits_size),
    .io_sources_2_bits_burst  (s_axi_2_ar_bits_burst),
    .io_sources_2_bits_lock   (s_axi_2_ar_bits_lock),
    .io_sources_2_bits_cache  (s_axi_2_ar_bits_cache),
    .io_sources_2_bits_prot   (s_axi_2_ar_bits_prot),
    .io_sources_2_bits_qos    (s_axi_2_ar_bits_qos),
    .io_sources_2_bits_region (s_axi_2_ar_bits_region),
    .io_sources_3_ready       (s_axi_3_ar_ready),
    .io_sources_3_valid       (s_axi_3_ar_valid),
    .io_sources_3_bits_addr   (s_axi_3_ar_bits_addr),
    .io_sources_3_bits_len    (s_axi_3_ar_bits_len),
    .io_sources_3_bits_size   (s_axi_3_ar_bits_size),
    .io_sources_3_bits_burst  (s_axi_3_ar_bits_burst),
    .io_sources_3_bits_lock   (s_axi_3_ar_bits_lock),
    .io_sources_3_bits_cache  (s_axi_3_ar_bits_cache),
    .io_sources_3_bits_prot   (s_axi_3_ar_bits_prot),
    .io_sources_3_bits_qos    (s_axi_3_ar_bits_qos),
    .io_sources_3_bits_region (s_axi_3_ar_bits_region),
    .io_sink_ready            (m_axi_ar_ready),
    .io_sink_valid            (m_axi_ar_valid),
    .io_sink_bits_id          (m_axi_ar_bits_id),
    .io_sink_bits_addr        (m_axi_ar_bits_addr),
    .io_sink_bits_len         (m_axi_ar_bits_len),
    .io_sink_bits_size        (m_axi_ar_bits_size),
    .io_sink_bits_burst       (m_axi_ar_bits_burst),
    .io_sink_bits_lock        (/* unused */),
    .io_sink_bits_cache       (/* unused */),
    .io_sink_bits_prot        (/* unused */),
    .io_sink_bits_qos         (/* unused */),
    .io_sink_bits_region      (/* unused */),
    .io_select_ready          (1'h1),	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7
    .io_select_valid          (/* unused */),
    .io_select_bits           (/* unused */)
  );
  elasticDemux_14 read_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_read_demux_io_source_ready),
    .io_source_valid      (m_axi_r_valid & ~read_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_data  (m_axi_r_bits_data),
    .io_source_bits_last  (m_axi_r_bits_last),
    .io_sinks_0_ready     (s_axi_0_r_ready),
    .io_sinks_0_valid     (s_axi_0_r_valid),
    .io_sinks_0_bits_data (s_axi_0_r_bits_data),
    .io_sinks_0_bits_last (s_axi_0_r_bits_last),
    .io_sinks_1_ready     (s_axi_1_r_ready),
    .io_sinks_1_valid     (s_axi_1_r_valid),
    .io_sinks_1_bits_data (s_axi_1_r_bits_data),
    .io_sinks_1_bits_last (s_axi_1_r_bits_last),
    .io_sinks_2_ready     (s_axi_2_r_ready),
    .io_sinks_2_valid     (s_axi_2_r_valid),
    .io_sinks_2_bits_data (s_axi_2_r_bits_data),
    .io_sinks_2_bits_last (s_axi_2_r_bits_last),
    .io_sinks_3_ready     (s_axi_3_r_ready),
    .io_sinks_3_valid     (s_axi_3_r_valid),
    .io_sinks_3_bits_data (s_axi_3_r_bits_data),
    .io_sinks_3_bits_last (s_axi_3_r_bits_last),
    .io_select_ready      (_read_demux_io_select_ready),
    .io_select_valid      (m_axi_r_valid & ~read_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits       (m_axi_r_bits_id)
  );
  Queue32_UInt2 write_portQueue (	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_portQueue_io_enq_ready),
    .io_enq_valid (_write_arbiter_io_select_valid),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_enq_bits  (_write_arbiter_io_select_bits),	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .io_deq_ready (_write_mux_io_select_ready),	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_deq_valid (_write_portQueue_io_deq_valid),
    .io_deq_bits  (_write_portQueue_io_deq_bits)
  );
  elasticArbiter_2 write_arbiter (	// src/main/scala/chext/elastic/Arbiter.scala:65:25
    .clock                    (clock),
    .reset                    (reset),
    .io_sources_0_ready       (s_axi_0_aw_ready),
    .io_sources_0_valid       (s_axi_0_aw_valid),
    .io_sources_0_bits_addr   (s_axi_0_aw_bits_addr),
    .io_sources_0_bits_len    (s_axi_0_aw_bits_len),
    .io_sources_0_bits_size   (s_axi_0_aw_bits_size),
    .io_sources_0_bits_burst  (s_axi_0_aw_bits_burst),
    .io_sources_0_bits_lock   (s_axi_0_aw_bits_lock),
    .io_sources_0_bits_cache  (s_axi_0_aw_bits_cache),
    .io_sources_0_bits_prot   (s_axi_0_aw_bits_prot),
    .io_sources_0_bits_qos    (s_axi_0_aw_bits_qos),
    .io_sources_0_bits_region (s_axi_0_aw_bits_region),
    .io_sources_1_ready       (s_axi_1_aw_ready),
    .io_sources_1_valid       (s_axi_1_aw_valid),
    .io_sources_1_bits_addr   (s_axi_1_aw_bits_addr),
    .io_sources_1_bits_len    (s_axi_1_aw_bits_len),
    .io_sources_1_bits_size   (s_axi_1_aw_bits_size),
    .io_sources_1_bits_burst  (s_axi_1_aw_bits_burst),
    .io_sources_1_bits_lock   (s_axi_1_aw_bits_lock),
    .io_sources_1_bits_cache  (s_axi_1_aw_bits_cache),
    .io_sources_1_bits_prot   (s_axi_1_aw_bits_prot),
    .io_sources_1_bits_qos    (s_axi_1_aw_bits_qos),
    .io_sources_1_bits_region (s_axi_1_aw_bits_region),
    .io_sources_2_ready       (s_axi_2_aw_ready),
    .io_sources_2_valid       (s_axi_2_aw_valid),
    .io_sources_2_bits_addr   (s_axi_2_aw_bits_addr),
    .io_sources_2_bits_len    (s_axi_2_aw_bits_len),
    .io_sources_2_bits_size   (s_axi_2_aw_bits_size),
    .io_sources_2_bits_burst  (s_axi_2_aw_bits_burst),
    .io_sources_2_bits_lock   (s_axi_2_aw_bits_lock),
    .io_sources_2_bits_cache  (s_axi_2_aw_bits_cache),
    .io_sources_2_bits_prot   (s_axi_2_aw_bits_prot),
    .io_sources_2_bits_qos    (s_axi_2_aw_bits_qos),
    .io_sources_2_bits_region (s_axi_2_aw_bits_region),
    .io_sources_3_ready       (s_axi_3_aw_ready),
    .io_sources_3_valid       (s_axi_3_aw_valid),
    .io_sources_3_bits_addr   (s_axi_3_aw_bits_addr),
    .io_sources_3_bits_len    (s_axi_3_aw_bits_len),
    .io_sources_3_bits_size   (s_axi_3_aw_bits_size),
    .io_sources_3_bits_burst  (s_axi_3_aw_bits_burst),
    .io_sources_3_bits_lock   (s_axi_3_aw_bits_lock),
    .io_sources_3_bits_cache  (s_axi_3_aw_bits_cache),
    .io_sources_3_bits_prot   (s_axi_3_aw_bits_prot),
    .io_sources_3_bits_qos    (s_axi_3_aw_bits_qos),
    .io_sources_3_bits_region (s_axi_3_aw_bits_region),
    .io_sink_ready            (m_axi_aw_ready),
    .io_sink_valid            (m_axi_aw_valid),
    .io_sink_bits_id          (m_axi_aw_bits_id),
    .io_sink_bits_addr        (m_axi_aw_bits_addr),
    .io_sink_bits_len         (m_axi_aw_bits_len),
    .io_sink_bits_size        (m_axi_aw_bits_size),
    .io_sink_bits_burst       (m_axi_aw_bits_burst),
    .io_sink_bits_lock        (/* unused */),
    .io_sink_bits_cache       (/* unused */),
    .io_sink_bits_prot        (/* unused */),
    .io_sink_bits_qos         (/* unused */),
    .io_sink_bits_region      (/* unused */),
    .io_select_ready          (_write_portQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
    .io_select_valid          (_write_arbiter_io_select_valid),
    .io_select_bits           (_write_arbiter_io_select_bits)
  );
  elasticMux_5 write_mux (	// src/main/scala/chext/elastic/Mux.scala:50:21
    .io_sources_0_ready     (s_axi_0_w_ready),
    .io_sources_0_valid     (s_axi_0_w_valid),
    .io_sources_0_bits_data (s_axi_0_w_bits_data),
    .io_sources_0_bits_strb (s_axi_0_w_bits_strb),
    .io_sources_0_bits_last (s_axi_0_w_bits_last),
    .io_sources_1_ready     (s_axi_1_w_ready),
    .io_sources_1_valid     (s_axi_1_w_valid),
    .io_sources_1_bits_data (s_axi_1_w_bits_data),
    .io_sources_1_bits_strb (s_axi_1_w_bits_strb),
    .io_sources_1_bits_last (s_axi_1_w_bits_last),
    .io_sources_2_ready     (s_axi_2_w_ready),
    .io_sources_2_valid     (s_axi_2_w_valid),
    .io_sources_2_bits_data (s_axi_2_w_bits_data),
    .io_sources_2_bits_strb (s_axi_2_w_bits_strb),
    .io_sources_2_bits_last (s_axi_2_w_bits_last),
    .io_sources_3_ready     (s_axi_3_w_ready),
    .io_sources_3_valid     (s_axi_3_w_valid),
    .io_sources_3_bits_data (s_axi_3_w_bits_data),
    .io_sources_3_bits_strb (s_axi_3_w_bits_strb),
    .io_sources_3_bits_last (s_axi_3_w_bits_last),
    .io_sink_ready          (m_axi_w_ready),
    .io_sink_valid          (m_axi_w_valid),
    .io_sink_bits_data      (m_axi_w_bits_data),
    .io_sink_bits_strb      (m_axi_w_bits_strb),
    .io_select_ready        (_write_mux_io_select_ready),
    .io_select_valid        (_write_portQueue_io_deq_valid),	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
    .io_select_bits         (_write_portQueue_io_deq_bits)	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:75:27
  );
  elasticDemux_10 write_demux (	// src/main/scala/chext/elastic/Demux.scala:48:23
    .io_source_ready      (_write_demux_io_source_ready),
    .io_source_valid      (m_axi_b_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_source_bits_id    (m_axi_b_bits_id),
    .io_source_bits_resp  (m_axi_b_bits_resp),
    .io_sinks_0_ready     (s_axi_0_b_ready),
    .io_sinks_0_valid     (s_axi_0_b_valid),
    .io_sinks_0_bits_id   (/* unused */),
    .io_sinks_0_bits_resp (s_axi_0_b_bits_resp),
    .io_sinks_1_ready     (s_axi_1_b_ready),
    .io_sinks_1_valid     (s_axi_1_b_valid),
    .io_sinks_1_bits_id   (/* unused */),
    .io_sinks_1_bits_resp (s_axi_1_b_bits_resp),
    .io_sinks_2_ready     (s_axi_2_b_ready),
    .io_sinks_2_valid     (s_axi_2_b_valid),
    .io_sinks_2_bits_id   (/* unused */),
    .io_sinks_2_bits_resp (s_axi_2_b_bits_resp),
    .io_sinks_3_ready     (s_axi_3_b_ready),
    .io_sinks_3_valid     (s_axi_3_b_valid),
    .io_sinks_3_bits_id   (/* unused */),
    .io_sinks_3_bits_resp (s_axi_3_b_bits_resp),
    .io_select_ready      (_write_demux_io_select_ready),
    .io_select_valid      (m_axi_b_valid & ~write_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_select_bits       (m_axi_b_bits_id)
  );
  assign m_axi_r_ready = m_axi_r_ready_0;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign m_axi_b_ready = m_axi_b_ready_0;	// src/main/scala/chext/amba/axi4/full/components/IdMux.scala:29:7, src/main/scala/chext/elastic/Fork.scala:87:23
endmodule

module protocolConverter_4(	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:172:7
  input         clock,	// <stdin>:44227:11
                reset,	// <stdin>:44228:11
  output        s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]  s_axi_ar_bits_id,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [15:0] s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [7:0]  s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]  s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]  s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]  s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]  s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]  s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output        s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [31:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output        s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]  s_axi_aw_bits_id,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [15:0] s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [7:0]  s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]  s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]  s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]  s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [2:0]  s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]  s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output        s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [31:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [3:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output        s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [1:0]  s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input         m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output        m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [1:0]  m_axi_ar_bits_id,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [15:0] m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [7:0]  m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [2:0]  m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [1:0]  m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output        m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input         m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input  [1:0]  m_axi_r_bits_id,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input  [63:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input         m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
                m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output        m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [1:0]  m_axi_aw_bits_id,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [15:0] m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [7:0]  m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [2:0]  m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [1:0]  m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input         m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output        m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [63:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output [7:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  output        m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input         m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
  input  [1:0]  m_axi_b_bits_id,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
                m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:176:17
);

  wire        _module_s_axi_0_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_0_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [63:0] _module_s_axi_0_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_0_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_0_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_0_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_0_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [1:0]  _module_s_axi_0_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_1_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_1_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [63:0] _module_s_axi_1_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_1_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_1_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_1_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_1_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [1:0]  _module_s_axi_1_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_2_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_2_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [63:0] _module_s_axi_2_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_2_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_2_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_2_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_2_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [1:0]  _module_s_axi_2_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_3_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_3_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [63:0] _module_s_axi_3_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_3_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_3_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_3_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _module_s_axi_3_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire [1:0]  _module_s_axi_3_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  wire        _upscale_3_s_axi_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_s_axi_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [31:0] _upscale_3_s_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_s_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_s_axi_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_s_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_s_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_3_s_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_3_m_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_3_m_axi_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_3_m_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_3_m_axi_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_3_m_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_3_m_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_3_m_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_3_m_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_3_m_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_3_m_axi_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_3_m_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_3_m_axi_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_3_m_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_3_m_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_3_m_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_3_m_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [63:0] _upscale_3_m_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_3_m_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_3_m_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_s_axi_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_s_axi_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [31:0] _upscale_2_s_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_s_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_s_axi_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_s_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_s_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_2_s_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_2_m_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_2_m_axi_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_2_m_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_2_m_axi_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_2_m_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_2_m_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_2_m_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_2_m_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_2_m_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_2_m_axi_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_2_m_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_2_m_axi_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_2_m_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_2_m_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_2_m_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_2_m_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [63:0] _upscale_2_m_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_2_m_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_2_m_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_s_axi_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_s_axi_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [31:0] _upscale_1_s_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_s_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_s_axi_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_s_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_s_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_1_s_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_1_m_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_1_m_axi_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_1_m_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_1_m_axi_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_1_m_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_1_m_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_1_m_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_1_m_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_1_m_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_1_m_axi_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_1_m_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_1_m_axi_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_1_m_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_1_m_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_1_m_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_1_m_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [63:0] _upscale_1_m_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_1_m_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_1_m_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_s_axi_ar_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_s_axi_r_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [31:0] _upscale_0_s_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_s_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_s_axi_aw_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_s_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_s_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_0_s_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_0_m_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_0_m_axi_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_0_m_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_0_m_axi_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_0_m_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_0_m_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_0_m_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_0_m_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [15:0] _upscale_0_m_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_0_m_axi_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_0_m_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [1:0]  _upscale_0_m_axi_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_0_m_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [2:0]  _upscale_0_m_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_0_m_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [3:0]  _upscale_0_m_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [63:0] _upscale_0_m_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire [7:0]  _upscale_0_m_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _upscale_0_m_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  wire        _idDemux_m_axi_0_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_0_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_0_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_0_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_0_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_0_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_0_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_0_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_0_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_0_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_0_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [31:0] _idDemux_m_axi_0_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_0_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_0_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_1_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_1_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_1_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_1_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_1_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_1_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_1_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_1_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_1_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_1_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [31:0] _idDemux_m_axi_1_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_1_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_1_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_2_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_2_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_2_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_2_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_2_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_2_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_2_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_2_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_2_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_2_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [31:0] _idDemux_m_axi_2_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_2_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_2_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_ar_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_3_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_3_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_3_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_3_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_3_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_r_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_aw_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [15:0] _idDemux_m_axi_3_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [7:0]  _idDemux_m_axi_3_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_3_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [1:0]  _idDemux_m_axi_3_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [2:0]  _idDemux_m_axi_3_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_w_valid;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [31:0] _idDemux_m_axi_3_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire [3:0]  _idDemux_m_axi_3_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  wire        _idDemux_m_axi_3_b_ready;	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
  IdDemux idDemux (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .clock                  (clock),
    .reset                  (reset),
    .s_axi_ar_ready         (s_axi_ar_ready),
    .s_axi_ar_valid         (s_axi_ar_valid),
    .s_axi_ar_bits_id       (s_axi_ar_bits_id),
    .s_axi_ar_bits_addr     (s_axi_ar_bits_addr),
    .s_axi_ar_bits_len      (s_axi_ar_bits_len),
    .s_axi_ar_bits_size     (s_axi_ar_bits_size),
    .s_axi_ar_bits_burst    (s_axi_ar_bits_burst),
    .s_axi_ar_bits_lock     (s_axi_ar_bits_lock),
    .s_axi_ar_bits_cache    (s_axi_ar_bits_cache),
    .s_axi_ar_bits_prot     (s_axi_ar_bits_prot),
    .s_axi_ar_bits_qos      (s_axi_ar_bits_qos),
    .s_axi_ar_bits_region   (s_axi_ar_bits_region),
    .s_axi_r_ready          (s_axi_r_ready),
    .s_axi_r_valid          (s_axi_r_valid),
    .s_axi_r_bits_data      (s_axi_r_bits_data),
    .s_axi_r_bits_last      (s_axi_r_bits_last),
    .s_axi_aw_ready         (s_axi_aw_ready),
    .s_axi_aw_valid         (s_axi_aw_valid),
    .s_axi_aw_bits_id       (s_axi_aw_bits_id),
    .s_axi_aw_bits_addr     (s_axi_aw_bits_addr),
    .s_axi_aw_bits_len      (s_axi_aw_bits_len),
    .s_axi_aw_bits_size     (s_axi_aw_bits_size),
    .s_axi_aw_bits_burst    (s_axi_aw_bits_burst),
    .s_axi_aw_bits_lock     (s_axi_aw_bits_lock),
    .s_axi_aw_bits_cache    (s_axi_aw_bits_cache),
    .s_axi_aw_bits_prot     (s_axi_aw_bits_prot),
    .s_axi_aw_bits_qos      (s_axi_aw_bits_qos),
    .s_axi_aw_bits_region   (s_axi_aw_bits_region),
    .s_axi_w_ready          (s_axi_w_ready),
    .s_axi_w_valid          (s_axi_w_valid),
    .s_axi_w_bits_data      (s_axi_w_bits_data),
    .s_axi_w_bits_strb      (s_axi_w_bits_strb),
    .s_axi_w_bits_last      (s_axi_w_bits_last),
    .s_axi_b_ready          (s_axi_b_ready),
    .s_axi_b_valid          (s_axi_b_valid),
    .s_axi_b_bits_resp      (s_axi_b_bits_resp),
    .m_axi_0_ar_ready       (_upscale_0_s_axi_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_ar_valid       (_idDemux_m_axi_0_ar_valid),
    .m_axi_0_ar_bits_addr   (_idDemux_m_axi_0_ar_bits_addr),
    .m_axi_0_ar_bits_len    (_idDemux_m_axi_0_ar_bits_len),
    .m_axi_0_ar_bits_size   (_idDemux_m_axi_0_ar_bits_size),
    .m_axi_0_ar_bits_burst  (_idDemux_m_axi_0_ar_bits_burst),
    .m_axi_0_ar_bits_lock   (_idDemux_m_axi_0_ar_bits_lock),
    .m_axi_0_ar_bits_cache  (_idDemux_m_axi_0_ar_bits_cache),
    .m_axi_0_ar_bits_prot   (_idDemux_m_axi_0_ar_bits_prot),
    .m_axi_0_ar_bits_qos    (_idDemux_m_axi_0_ar_bits_qos),
    .m_axi_0_ar_bits_region (_idDemux_m_axi_0_ar_bits_region),
    .m_axi_0_r_ready        (_idDemux_m_axi_0_r_ready),
    .m_axi_0_r_valid        (_upscale_0_s_axi_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_r_bits_data    (_upscale_0_s_axi_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_r_bits_last    (_upscale_0_s_axi_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_aw_ready       (_upscale_0_s_axi_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_aw_valid       (_idDemux_m_axi_0_aw_valid),
    .m_axi_0_aw_bits_addr   (_idDemux_m_axi_0_aw_bits_addr),
    .m_axi_0_aw_bits_len    (_idDemux_m_axi_0_aw_bits_len),
    .m_axi_0_aw_bits_size   (_idDemux_m_axi_0_aw_bits_size),
    .m_axi_0_aw_bits_burst  (_idDemux_m_axi_0_aw_bits_burst),
    .m_axi_0_aw_bits_lock   (_idDemux_m_axi_0_aw_bits_lock),
    .m_axi_0_aw_bits_cache  (_idDemux_m_axi_0_aw_bits_cache),
    .m_axi_0_aw_bits_prot   (_idDemux_m_axi_0_aw_bits_prot),
    .m_axi_0_aw_bits_qos    (_idDemux_m_axi_0_aw_bits_qos),
    .m_axi_0_aw_bits_region (_idDemux_m_axi_0_aw_bits_region),
    .m_axi_0_w_ready        (_upscale_0_s_axi_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_w_valid        (_idDemux_m_axi_0_w_valid),
    .m_axi_0_w_bits_data    (_idDemux_m_axi_0_w_bits_data),
    .m_axi_0_w_bits_strb    (_idDemux_m_axi_0_w_bits_strb),
    .m_axi_0_w_bits_last    (_idDemux_m_axi_0_w_bits_last),
    .m_axi_0_b_ready        (_idDemux_m_axi_0_b_ready),
    .m_axi_0_b_valid        (_upscale_0_s_axi_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_0_b_bits_resp    (_upscale_0_s_axi_b_bits_resp),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_ar_ready       (_upscale_1_s_axi_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_ar_valid       (_idDemux_m_axi_1_ar_valid),
    .m_axi_1_ar_bits_addr   (_idDemux_m_axi_1_ar_bits_addr),
    .m_axi_1_ar_bits_len    (_idDemux_m_axi_1_ar_bits_len),
    .m_axi_1_ar_bits_size   (_idDemux_m_axi_1_ar_bits_size),
    .m_axi_1_ar_bits_burst  (_idDemux_m_axi_1_ar_bits_burst),
    .m_axi_1_ar_bits_lock   (_idDemux_m_axi_1_ar_bits_lock),
    .m_axi_1_ar_bits_cache  (_idDemux_m_axi_1_ar_bits_cache),
    .m_axi_1_ar_bits_prot   (_idDemux_m_axi_1_ar_bits_prot),
    .m_axi_1_ar_bits_qos    (_idDemux_m_axi_1_ar_bits_qos),
    .m_axi_1_ar_bits_region (_idDemux_m_axi_1_ar_bits_region),
    .m_axi_1_r_ready        (_idDemux_m_axi_1_r_ready),
    .m_axi_1_r_valid        (_upscale_1_s_axi_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_r_bits_data    (_upscale_1_s_axi_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_r_bits_last    (_upscale_1_s_axi_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_aw_ready       (_upscale_1_s_axi_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_aw_valid       (_idDemux_m_axi_1_aw_valid),
    .m_axi_1_aw_bits_addr   (_idDemux_m_axi_1_aw_bits_addr),
    .m_axi_1_aw_bits_len    (_idDemux_m_axi_1_aw_bits_len),
    .m_axi_1_aw_bits_size   (_idDemux_m_axi_1_aw_bits_size),
    .m_axi_1_aw_bits_burst  (_idDemux_m_axi_1_aw_bits_burst),
    .m_axi_1_aw_bits_lock   (_idDemux_m_axi_1_aw_bits_lock),
    .m_axi_1_aw_bits_cache  (_idDemux_m_axi_1_aw_bits_cache),
    .m_axi_1_aw_bits_prot   (_idDemux_m_axi_1_aw_bits_prot),
    .m_axi_1_aw_bits_qos    (_idDemux_m_axi_1_aw_bits_qos),
    .m_axi_1_aw_bits_region (_idDemux_m_axi_1_aw_bits_region),
    .m_axi_1_w_ready        (_upscale_1_s_axi_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_w_valid        (_idDemux_m_axi_1_w_valid),
    .m_axi_1_w_bits_data    (_idDemux_m_axi_1_w_bits_data),
    .m_axi_1_w_bits_strb    (_idDemux_m_axi_1_w_bits_strb),
    .m_axi_1_w_bits_last    (_idDemux_m_axi_1_w_bits_last),
    .m_axi_1_b_ready        (_idDemux_m_axi_1_b_ready),
    .m_axi_1_b_valid        (_upscale_1_s_axi_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_1_b_bits_resp    (_upscale_1_s_axi_b_bits_resp),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_ar_ready       (_upscale_2_s_axi_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_ar_valid       (_idDemux_m_axi_2_ar_valid),
    .m_axi_2_ar_bits_addr   (_idDemux_m_axi_2_ar_bits_addr),
    .m_axi_2_ar_bits_len    (_idDemux_m_axi_2_ar_bits_len),
    .m_axi_2_ar_bits_size   (_idDemux_m_axi_2_ar_bits_size),
    .m_axi_2_ar_bits_burst  (_idDemux_m_axi_2_ar_bits_burst),
    .m_axi_2_ar_bits_lock   (_idDemux_m_axi_2_ar_bits_lock),
    .m_axi_2_ar_bits_cache  (_idDemux_m_axi_2_ar_bits_cache),
    .m_axi_2_ar_bits_prot   (_idDemux_m_axi_2_ar_bits_prot),
    .m_axi_2_ar_bits_qos    (_idDemux_m_axi_2_ar_bits_qos),
    .m_axi_2_ar_bits_region (_idDemux_m_axi_2_ar_bits_region),
    .m_axi_2_r_ready        (_idDemux_m_axi_2_r_ready),
    .m_axi_2_r_valid        (_upscale_2_s_axi_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_r_bits_data    (_upscale_2_s_axi_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_r_bits_last    (_upscale_2_s_axi_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_aw_ready       (_upscale_2_s_axi_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_aw_valid       (_idDemux_m_axi_2_aw_valid),
    .m_axi_2_aw_bits_addr   (_idDemux_m_axi_2_aw_bits_addr),
    .m_axi_2_aw_bits_len    (_idDemux_m_axi_2_aw_bits_len),
    .m_axi_2_aw_bits_size   (_idDemux_m_axi_2_aw_bits_size),
    .m_axi_2_aw_bits_burst  (_idDemux_m_axi_2_aw_bits_burst),
    .m_axi_2_aw_bits_lock   (_idDemux_m_axi_2_aw_bits_lock),
    .m_axi_2_aw_bits_cache  (_idDemux_m_axi_2_aw_bits_cache),
    .m_axi_2_aw_bits_prot   (_idDemux_m_axi_2_aw_bits_prot),
    .m_axi_2_aw_bits_qos    (_idDemux_m_axi_2_aw_bits_qos),
    .m_axi_2_aw_bits_region (_idDemux_m_axi_2_aw_bits_region),
    .m_axi_2_w_ready        (_upscale_2_s_axi_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_w_valid        (_idDemux_m_axi_2_w_valid),
    .m_axi_2_w_bits_data    (_idDemux_m_axi_2_w_bits_data),
    .m_axi_2_w_bits_strb    (_idDemux_m_axi_2_w_bits_strb),
    .m_axi_2_w_bits_last    (_idDemux_m_axi_2_w_bits_last),
    .m_axi_2_b_ready        (_idDemux_m_axi_2_b_ready),
    .m_axi_2_b_valid        (_upscale_2_s_axi_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_2_b_bits_resp    (_upscale_2_s_axi_b_bits_resp),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_ar_ready       (_upscale_3_s_axi_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_ar_valid       (_idDemux_m_axi_3_ar_valid),
    .m_axi_3_ar_bits_addr   (_idDemux_m_axi_3_ar_bits_addr),
    .m_axi_3_ar_bits_len    (_idDemux_m_axi_3_ar_bits_len),
    .m_axi_3_ar_bits_size   (_idDemux_m_axi_3_ar_bits_size),
    .m_axi_3_ar_bits_burst  (_idDemux_m_axi_3_ar_bits_burst),
    .m_axi_3_ar_bits_lock   (_idDemux_m_axi_3_ar_bits_lock),
    .m_axi_3_ar_bits_cache  (_idDemux_m_axi_3_ar_bits_cache),
    .m_axi_3_ar_bits_prot   (_idDemux_m_axi_3_ar_bits_prot),
    .m_axi_3_ar_bits_qos    (_idDemux_m_axi_3_ar_bits_qos),
    .m_axi_3_ar_bits_region (_idDemux_m_axi_3_ar_bits_region),
    .m_axi_3_r_ready        (_idDemux_m_axi_3_r_ready),
    .m_axi_3_r_valid        (_upscale_3_s_axi_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_r_bits_data    (_upscale_3_s_axi_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_r_bits_last    (_upscale_3_s_axi_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_aw_ready       (_upscale_3_s_axi_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_aw_valid       (_idDemux_m_axi_3_aw_valid),
    .m_axi_3_aw_bits_addr   (_idDemux_m_axi_3_aw_bits_addr),
    .m_axi_3_aw_bits_len    (_idDemux_m_axi_3_aw_bits_len),
    .m_axi_3_aw_bits_size   (_idDemux_m_axi_3_aw_bits_size),
    .m_axi_3_aw_bits_burst  (_idDemux_m_axi_3_aw_bits_burst),
    .m_axi_3_aw_bits_lock   (_idDemux_m_axi_3_aw_bits_lock),
    .m_axi_3_aw_bits_cache  (_idDemux_m_axi_3_aw_bits_cache),
    .m_axi_3_aw_bits_prot   (_idDemux_m_axi_3_aw_bits_prot),
    .m_axi_3_aw_bits_qos    (_idDemux_m_axi_3_aw_bits_qos),
    .m_axi_3_aw_bits_region (_idDemux_m_axi_3_aw_bits_region),
    .m_axi_3_w_ready        (_upscale_3_s_axi_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_w_valid        (_idDemux_m_axi_3_w_valid),
    .m_axi_3_w_bits_data    (_idDemux_m_axi_3_w_bits_data),
    .m_axi_3_w_bits_strb    (_idDemux_m_axi_3_w_bits_strb),
    .m_axi_3_w_bits_last    (_idDemux_m_axi_3_w_bits_last),
    .m_axi_3_b_ready        (_idDemux_m_axi_3_b_ready),
    .m_axi_3_b_valid        (_upscale_3_s_axi_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .m_axi_3_b_bits_resp    (_upscale_3_s_axi_b_bits_resp)	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
  );
  Upscale upscale_0 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_upscale_0_s_axi_ar_ready),
    .s_axi_ar_valid       (_idDemux_m_axi_0_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_addr   (_idDemux_m_axi_0_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_len    (_idDemux_m_axi_0_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_size   (_idDemux_m_axi_0_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_burst  (_idDemux_m_axi_0_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_lock   (_idDemux_m_axi_0_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_cache  (_idDemux_m_axi_0_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_prot   (_idDemux_m_axi_0_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_qos    (_idDemux_m_axi_0_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_region (_idDemux_m_axi_0_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_ready        (_idDemux_m_axi_0_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_valid        (_upscale_0_s_axi_r_valid),
    .s_axi_r_bits_data    (_upscale_0_s_axi_r_bits_data),
    .s_axi_r_bits_last    (_upscale_0_s_axi_r_bits_last),
    .s_axi_aw_ready       (_upscale_0_s_axi_aw_ready),
    .s_axi_aw_valid       (_idDemux_m_axi_0_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_addr   (_idDemux_m_axi_0_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_len    (_idDemux_m_axi_0_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_size   (_idDemux_m_axi_0_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_burst  (_idDemux_m_axi_0_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_lock   (_idDemux_m_axi_0_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_cache  (_idDemux_m_axi_0_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_prot   (_idDemux_m_axi_0_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_qos    (_idDemux_m_axi_0_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_region (_idDemux_m_axi_0_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_ready        (_upscale_0_s_axi_w_ready),
    .s_axi_w_valid        (_idDemux_m_axi_0_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_data    (_idDemux_m_axi_0_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_strb    (_idDemux_m_axi_0_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_last    (_idDemux_m_axi_0_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_ready        (_idDemux_m_axi_0_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_valid        (_upscale_0_s_axi_b_valid),
    .s_axi_b_bits_resp    (_upscale_0_s_axi_b_bits_resp),
    .m_axi_ar_ready       (_module_s_axi_0_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_ar_valid       (_upscale_0_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_upscale_0_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_upscale_0_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_upscale_0_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (_upscale_0_m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock   (_upscale_0_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_upscale_0_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_upscale_0_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_upscale_0_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_upscale_0_m_axi_ar_bits_region),
    .m_axi_r_ready        (_upscale_0_m_axi_r_ready),
    .m_axi_r_valid        (_module_s_axi_0_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_data    (_module_s_axi_0_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_last    (_module_s_axi_0_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_ready       (_module_s_axi_0_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_valid       (_upscale_0_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_upscale_0_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_upscale_0_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_upscale_0_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (_upscale_0_m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock   (_upscale_0_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_upscale_0_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_upscale_0_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_upscale_0_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_upscale_0_m_axi_aw_bits_region),
    .m_axi_w_ready        (_module_s_axi_0_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_w_valid        (_upscale_0_m_axi_w_valid),
    .m_axi_w_bits_data    (_upscale_0_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_upscale_0_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_upscale_0_m_axi_w_bits_last),
    .m_axi_b_ready        (_upscale_0_m_axi_b_ready),
    .m_axi_b_valid        (_module_s_axi_0_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_b_bits_resp    (_module_s_axi_0_b_bits_resp)	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  );
  Upscale upscale_1 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_upscale_1_s_axi_ar_ready),
    .s_axi_ar_valid       (_idDemux_m_axi_1_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_addr   (_idDemux_m_axi_1_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_len    (_idDemux_m_axi_1_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_size   (_idDemux_m_axi_1_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_burst  (_idDemux_m_axi_1_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_lock   (_idDemux_m_axi_1_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_cache  (_idDemux_m_axi_1_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_prot   (_idDemux_m_axi_1_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_qos    (_idDemux_m_axi_1_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_region (_idDemux_m_axi_1_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_ready        (_idDemux_m_axi_1_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_valid        (_upscale_1_s_axi_r_valid),
    .s_axi_r_bits_data    (_upscale_1_s_axi_r_bits_data),
    .s_axi_r_bits_last    (_upscale_1_s_axi_r_bits_last),
    .s_axi_aw_ready       (_upscale_1_s_axi_aw_ready),
    .s_axi_aw_valid       (_idDemux_m_axi_1_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_addr   (_idDemux_m_axi_1_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_len    (_idDemux_m_axi_1_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_size   (_idDemux_m_axi_1_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_burst  (_idDemux_m_axi_1_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_lock   (_idDemux_m_axi_1_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_cache  (_idDemux_m_axi_1_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_prot   (_idDemux_m_axi_1_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_qos    (_idDemux_m_axi_1_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_region (_idDemux_m_axi_1_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_ready        (_upscale_1_s_axi_w_ready),
    .s_axi_w_valid        (_idDemux_m_axi_1_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_data    (_idDemux_m_axi_1_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_strb    (_idDemux_m_axi_1_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_last    (_idDemux_m_axi_1_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_ready        (_idDemux_m_axi_1_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_valid        (_upscale_1_s_axi_b_valid),
    .s_axi_b_bits_resp    (_upscale_1_s_axi_b_bits_resp),
    .m_axi_ar_ready       (_module_s_axi_1_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_ar_valid       (_upscale_1_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_upscale_1_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_upscale_1_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_upscale_1_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (_upscale_1_m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock   (_upscale_1_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_upscale_1_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_upscale_1_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_upscale_1_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_upscale_1_m_axi_ar_bits_region),
    .m_axi_r_ready        (_upscale_1_m_axi_r_ready),
    .m_axi_r_valid        (_module_s_axi_1_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_data    (_module_s_axi_1_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_last    (_module_s_axi_1_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_ready       (_module_s_axi_1_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_valid       (_upscale_1_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_upscale_1_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_upscale_1_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_upscale_1_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (_upscale_1_m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock   (_upscale_1_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_upscale_1_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_upscale_1_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_upscale_1_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_upscale_1_m_axi_aw_bits_region),
    .m_axi_w_ready        (_module_s_axi_1_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_w_valid        (_upscale_1_m_axi_w_valid),
    .m_axi_w_bits_data    (_upscale_1_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_upscale_1_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_upscale_1_m_axi_w_bits_last),
    .m_axi_b_ready        (_upscale_1_m_axi_b_ready),
    .m_axi_b_valid        (_module_s_axi_1_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_b_bits_resp    (_module_s_axi_1_b_bits_resp)	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  );
  Upscale upscale_2 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_upscale_2_s_axi_ar_ready),
    .s_axi_ar_valid       (_idDemux_m_axi_2_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_addr   (_idDemux_m_axi_2_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_len    (_idDemux_m_axi_2_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_size   (_idDemux_m_axi_2_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_burst  (_idDemux_m_axi_2_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_lock   (_idDemux_m_axi_2_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_cache  (_idDemux_m_axi_2_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_prot   (_idDemux_m_axi_2_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_qos    (_idDemux_m_axi_2_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_region (_idDemux_m_axi_2_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_ready        (_idDemux_m_axi_2_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_valid        (_upscale_2_s_axi_r_valid),
    .s_axi_r_bits_data    (_upscale_2_s_axi_r_bits_data),
    .s_axi_r_bits_last    (_upscale_2_s_axi_r_bits_last),
    .s_axi_aw_ready       (_upscale_2_s_axi_aw_ready),
    .s_axi_aw_valid       (_idDemux_m_axi_2_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_addr   (_idDemux_m_axi_2_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_len    (_idDemux_m_axi_2_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_size   (_idDemux_m_axi_2_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_burst  (_idDemux_m_axi_2_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_lock   (_idDemux_m_axi_2_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_cache  (_idDemux_m_axi_2_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_prot   (_idDemux_m_axi_2_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_qos    (_idDemux_m_axi_2_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_region (_idDemux_m_axi_2_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_ready        (_upscale_2_s_axi_w_ready),
    .s_axi_w_valid        (_idDemux_m_axi_2_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_data    (_idDemux_m_axi_2_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_strb    (_idDemux_m_axi_2_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_last    (_idDemux_m_axi_2_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_ready        (_idDemux_m_axi_2_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_valid        (_upscale_2_s_axi_b_valid),
    .s_axi_b_bits_resp    (_upscale_2_s_axi_b_bits_resp),
    .m_axi_ar_ready       (_module_s_axi_2_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_ar_valid       (_upscale_2_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_upscale_2_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_upscale_2_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_upscale_2_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (_upscale_2_m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock   (_upscale_2_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_upscale_2_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_upscale_2_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_upscale_2_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_upscale_2_m_axi_ar_bits_region),
    .m_axi_r_ready        (_upscale_2_m_axi_r_ready),
    .m_axi_r_valid        (_module_s_axi_2_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_data    (_module_s_axi_2_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_last    (_module_s_axi_2_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_ready       (_module_s_axi_2_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_valid       (_upscale_2_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_upscale_2_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_upscale_2_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_upscale_2_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (_upscale_2_m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock   (_upscale_2_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_upscale_2_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_upscale_2_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_upscale_2_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_upscale_2_m_axi_aw_bits_region),
    .m_axi_w_ready        (_module_s_axi_2_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_w_valid        (_upscale_2_m_axi_w_valid),
    .m_axi_w_bits_data    (_upscale_2_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_upscale_2_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_upscale_2_m_axi_w_bits_last),
    .m_axi_b_ready        (_upscale_2_m_axi_b_ready),
    .m_axi_b_valid        (_module_s_axi_2_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_b_bits_resp    (_module_s_axi_2_b_bits_resp)	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  );
  Upscale upscale_3 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_upscale_3_s_axi_ar_ready),
    .s_axi_ar_valid       (_idDemux_m_axi_3_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_addr   (_idDemux_m_axi_3_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_len    (_idDemux_m_axi_3_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_size   (_idDemux_m_axi_3_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_burst  (_idDemux_m_axi_3_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_lock   (_idDemux_m_axi_3_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_cache  (_idDemux_m_axi_3_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_prot   (_idDemux_m_axi_3_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_qos    (_idDemux_m_axi_3_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_ar_bits_region (_idDemux_m_axi_3_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_ready        (_idDemux_m_axi_3_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_r_valid        (_upscale_3_s_axi_r_valid),
    .s_axi_r_bits_data    (_upscale_3_s_axi_r_bits_data),
    .s_axi_r_bits_last    (_upscale_3_s_axi_r_bits_last),
    .s_axi_aw_ready       (_upscale_3_s_axi_aw_ready),
    .s_axi_aw_valid       (_idDemux_m_axi_3_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_addr   (_idDemux_m_axi_3_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_len    (_idDemux_m_axi_3_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_size   (_idDemux_m_axi_3_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_burst  (_idDemux_m_axi_3_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_lock   (_idDemux_m_axi_3_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_cache  (_idDemux_m_axi_3_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_prot   (_idDemux_m_axi_3_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_qos    (_idDemux_m_axi_3_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_aw_bits_region (_idDemux_m_axi_3_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_ready        (_upscale_3_s_axi_w_ready),
    .s_axi_w_valid        (_idDemux_m_axi_3_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_data    (_idDemux_m_axi_3_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_strb    (_idDemux_m_axi_3_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_w_bits_last    (_idDemux_m_axi_3_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_ready        (_idDemux_m_axi_3_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:198:28
    .s_axi_b_valid        (_upscale_3_s_axi_b_valid),
    .s_axi_b_bits_resp    (_upscale_3_s_axi_b_bits_resp),
    .m_axi_ar_ready       (_module_s_axi_3_ar_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_ar_valid       (_upscale_3_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_upscale_3_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_upscale_3_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_upscale_3_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (_upscale_3_m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock   (_upscale_3_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_upscale_3_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_upscale_3_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_upscale_3_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_upscale_3_m_axi_ar_bits_region),
    .m_axi_r_ready        (_upscale_3_m_axi_r_ready),
    .m_axi_r_valid        (_module_s_axi_3_r_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_data    (_module_s_axi_3_r_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_r_bits_last    (_module_s_axi_3_r_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_ready       (_module_s_axi_3_aw_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_aw_valid       (_upscale_3_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_upscale_3_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_upscale_3_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_upscale_3_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (_upscale_3_m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock   (_upscale_3_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_upscale_3_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_upscale_3_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_upscale_3_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_upscale_3_m_axi_aw_bits_region),
    .m_axi_w_ready        (_module_s_axi_3_w_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_w_valid        (_upscale_3_m_axi_w_valid),
    .m_axi_w_bits_data    (_upscale_3_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_upscale_3_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_upscale_3_m_axi_w_bits_last),
    .m_axi_b_ready        (_upscale_3_m_axi_b_ready),
    .m_axi_b_valid        (_module_s_axi_3_b_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .m_axi_b_bits_resp    (_module_s_axi_3_b_bits_resp)	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
  );
  IdMux module_0 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:280:28
    .clock                  (clock),
    .reset                  (reset),
    .s_axi_0_ar_ready       (_module_s_axi_0_ar_ready),
    .s_axi_0_ar_valid       (_upscale_0_m_axi_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_addr   (_upscale_0_m_axi_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_len    (_upscale_0_m_axi_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_size   (_upscale_0_m_axi_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_burst  (_upscale_0_m_axi_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_lock   (_upscale_0_m_axi_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_cache  (_upscale_0_m_axi_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_prot   (_upscale_0_m_axi_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_qos    (_upscale_0_m_axi_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_ar_bits_region (_upscale_0_m_axi_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_r_ready        (_upscale_0_m_axi_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_r_valid        (_module_s_axi_0_r_valid),
    .s_axi_0_r_bits_data    (_module_s_axi_0_r_bits_data),
    .s_axi_0_r_bits_last    (_module_s_axi_0_r_bits_last),
    .s_axi_0_aw_ready       (_module_s_axi_0_aw_ready),
    .s_axi_0_aw_valid       (_upscale_0_m_axi_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_addr   (_upscale_0_m_axi_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_len    (_upscale_0_m_axi_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_size   (_upscale_0_m_axi_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_burst  (_upscale_0_m_axi_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_lock   (_upscale_0_m_axi_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_cache  (_upscale_0_m_axi_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_prot   (_upscale_0_m_axi_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_qos    (_upscale_0_m_axi_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_aw_bits_region (_upscale_0_m_axi_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_w_ready        (_module_s_axi_0_w_ready),
    .s_axi_0_w_valid        (_upscale_0_m_axi_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_w_bits_data    (_upscale_0_m_axi_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_w_bits_strb    (_upscale_0_m_axi_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_w_bits_last    (_upscale_0_m_axi_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_b_ready        (_upscale_0_m_axi_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_0_b_valid        (_module_s_axi_0_b_valid),
    .s_axi_0_b_bits_resp    (_module_s_axi_0_b_bits_resp),
    .s_axi_1_ar_ready       (_module_s_axi_1_ar_ready),
    .s_axi_1_ar_valid       (_upscale_1_m_axi_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_addr   (_upscale_1_m_axi_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_len    (_upscale_1_m_axi_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_size   (_upscale_1_m_axi_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_burst  (_upscale_1_m_axi_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_lock   (_upscale_1_m_axi_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_cache  (_upscale_1_m_axi_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_prot   (_upscale_1_m_axi_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_qos    (_upscale_1_m_axi_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_ar_bits_region (_upscale_1_m_axi_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_r_ready        (_upscale_1_m_axi_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_r_valid        (_module_s_axi_1_r_valid),
    .s_axi_1_r_bits_data    (_module_s_axi_1_r_bits_data),
    .s_axi_1_r_bits_last    (_module_s_axi_1_r_bits_last),
    .s_axi_1_aw_ready       (_module_s_axi_1_aw_ready),
    .s_axi_1_aw_valid       (_upscale_1_m_axi_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_addr   (_upscale_1_m_axi_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_len    (_upscale_1_m_axi_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_size   (_upscale_1_m_axi_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_burst  (_upscale_1_m_axi_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_lock   (_upscale_1_m_axi_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_cache  (_upscale_1_m_axi_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_prot   (_upscale_1_m_axi_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_qos    (_upscale_1_m_axi_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_aw_bits_region (_upscale_1_m_axi_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_w_ready        (_module_s_axi_1_w_ready),
    .s_axi_1_w_valid        (_upscale_1_m_axi_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_w_bits_data    (_upscale_1_m_axi_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_w_bits_strb    (_upscale_1_m_axi_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_w_bits_last    (_upscale_1_m_axi_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_b_ready        (_upscale_1_m_axi_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_1_b_valid        (_module_s_axi_1_b_valid),
    .s_axi_1_b_bits_resp    (_module_s_axi_1_b_bits_resp),
    .s_axi_2_ar_ready       (_module_s_axi_2_ar_ready),
    .s_axi_2_ar_valid       (_upscale_2_m_axi_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_addr   (_upscale_2_m_axi_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_len    (_upscale_2_m_axi_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_size   (_upscale_2_m_axi_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_burst  (_upscale_2_m_axi_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_lock   (_upscale_2_m_axi_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_cache  (_upscale_2_m_axi_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_prot   (_upscale_2_m_axi_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_qos    (_upscale_2_m_axi_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_ar_bits_region (_upscale_2_m_axi_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_r_ready        (_upscale_2_m_axi_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_r_valid        (_module_s_axi_2_r_valid),
    .s_axi_2_r_bits_data    (_module_s_axi_2_r_bits_data),
    .s_axi_2_r_bits_last    (_module_s_axi_2_r_bits_last),
    .s_axi_2_aw_ready       (_module_s_axi_2_aw_ready),
    .s_axi_2_aw_valid       (_upscale_2_m_axi_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_addr   (_upscale_2_m_axi_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_len    (_upscale_2_m_axi_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_size   (_upscale_2_m_axi_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_burst  (_upscale_2_m_axi_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_lock   (_upscale_2_m_axi_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_cache  (_upscale_2_m_axi_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_prot   (_upscale_2_m_axi_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_qos    (_upscale_2_m_axi_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_aw_bits_region (_upscale_2_m_axi_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_w_ready        (_module_s_axi_2_w_ready),
    .s_axi_2_w_valid        (_upscale_2_m_axi_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_w_bits_data    (_upscale_2_m_axi_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_w_bits_strb    (_upscale_2_m_axi_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_w_bits_last    (_upscale_2_m_axi_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_b_ready        (_upscale_2_m_axi_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_2_b_valid        (_module_s_axi_2_b_valid),
    .s_axi_2_b_bits_resp    (_module_s_axi_2_b_bits_resp),
    .s_axi_3_ar_ready       (_module_s_axi_3_ar_ready),
    .s_axi_3_ar_valid       (_upscale_3_m_axi_ar_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_addr   (_upscale_3_m_axi_ar_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_len    (_upscale_3_m_axi_ar_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_size   (_upscale_3_m_axi_ar_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_burst  (_upscale_3_m_axi_ar_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_lock   (_upscale_3_m_axi_ar_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_cache  (_upscale_3_m_axi_ar_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_prot   (_upscale_3_m_axi_ar_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_qos    (_upscale_3_m_axi_ar_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_ar_bits_region (_upscale_3_m_axi_ar_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_r_ready        (_upscale_3_m_axi_r_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_r_valid        (_module_s_axi_3_r_valid),
    .s_axi_3_r_bits_data    (_module_s_axi_3_r_bits_data),
    .s_axi_3_r_bits_last    (_module_s_axi_3_r_bits_last),
    .s_axi_3_aw_ready       (_module_s_axi_3_aw_ready),
    .s_axi_3_aw_valid       (_upscale_3_m_axi_aw_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_addr   (_upscale_3_m_axi_aw_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_len    (_upscale_3_m_axi_aw_bits_len),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_size   (_upscale_3_m_axi_aw_bits_size),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_burst  (_upscale_3_m_axi_aw_bits_burst),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_lock   (_upscale_3_m_axi_aw_bits_lock),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_cache  (_upscale_3_m_axi_aw_bits_cache),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_prot   (_upscale_3_m_axi_aw_bits_prot),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_qos    (_upscale_3_m_axi_aw_bits_qos),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_aw_bits_region (_upscale_3_m_axi_aw_bits_region),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_w_ready        (_module_s_axi_3_w_ready),
    .s_axi_3_w_valid        (_upscale_3_m_axi_w_valid),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_w_bits_data    (_upscale_3_m_axi_w_bits_data),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_w_bits_strb    (_upscale_3_m_axi_w_bits_strb),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_w_bits_last    (_upscale_3_m_axi_w_bits_last),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_b_ready        (_upscale_3_m_axi_b_ready),	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:224:32
    .s_axi_3_b_valid        (_module_s_axi_3_b_valid),
    .s_axi_3_b_bits_resp    (_module_s_axi_3_b_bits_resp),
    .m_axi_ar_ready         (m_axi_ar_ready),
    .m_axi_ar_valid         (m_axi_ar_valid),
    .m_axi_ar_bits_id       (m_axi_ar_bits_id),
    .m_axi_ar_bits_addr     (m_axi_ar_bits_addr),
    .m_axi_ar_bits_len      (m_axi_ar_bits_len),
    .m_axi_ar_bits_size     (m_axi_ar_bits_size),
    .m_axi_ar_bits_burst    (m_axi_ar_bits_burst),
    .m_axi_r_ready          (m_axi_r_ready),
    .m_axi_r_valid          (m_axi_r_valid),
    .m_axi_r_bits_id        (m_axi_r_bits_id),
    .m_axi_r_bits_data      (m_axi_r_bits_data),
    .m_axi_r_bits_last      (m_axi_r_bits_last),
    .m_axi_aw_ready         (m_axi_aw_ready),
    .m_axi_aw_valid         (m_axi_aw_valid),
    .m_axi_aw_bits_id       (m_axi_aw_bits_id),
    .m_axi_aw_bits_addr     (m_axi_aw_bits_addr),
    .m_axi_aw_bits_len      (m_axi_aw_bits_len),
    .m_axi_aw_bits_size     (m_axi_aw_bits_size),
    .m_axi_aw_bits_burst    (m_axi_aw_bits_burst),
    .m_axi_w_ready          (m_axi_w_ready),
    .m_axi_w_valid          (m_axi_w_valid),
    .m_axi_w_bits_data      (m_axi_w_bits_data),
    .m_axi_w_bits_strb      (m_axi_w_bits_strb),
    .m_axi_b_ready          (m_axi_b_ready),
    .m_axi_b_valid          (m_axi_b_valid),
    .m_axi_b_bits_id        (m_axi_b_bits_id),
    .m_axi_b_bits_resp      (m_axi_b_bits_resp)
  );
endmodule

module ProtocolConverterTest1(	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:110:9
  input         clock,	// <stdin>:44707:11
                reset,	// <stdin>:44708:11
  output        S_AXI_MEM_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [1:0]  S_AXI_MEM_ARID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [15:0] S_AXI_MEM_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [7:0]  S_AXI_MEM_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [2:0]  S_AXI_MEM_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [1:0]  S_AXI_MEM_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [3:0]  S_AXI_MEM_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [2:0]  S_AXI_MEM_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [3:0]  S_AXI_MEM_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
                S_AXI_MEM_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_RREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output        S_AXI_MEM_RVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output [1:0]  S_AXI_MEM_RID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output [63:0] S_AXI_MEM_RDATA,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output [1:0]  S_AXI_MEM_RRESP,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output        S_AXI_MEM_RLAST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
                S_AXI_MEM_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [1:0]  S_AXI_MEM_AWID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [15:0] S_AXI_MEM_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [7:0]  S_AXI_MEM_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [2:0]  S_AXI_MEM_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [1:0]  S_AXI_MEM_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [3:0]  S_AXI_MEM_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [2:0]  S_AXI_MEM_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [3:0]  S_AXI_MEM_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
                S_AXI_MEM_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output        S_AXI_MEM_WREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_WVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [63:0] S_AXI_MEM_WDATA,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input  [7:0]  S_AXI_MEM_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  input         S_AXI_MEM_WLAST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
                S_AXI_MEM_BREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output        S_AXI_MEM_BVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output [1:0]  S_AXI_MEM_BID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
                S_AXI_MEM_BRESP,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:113:23
  output        S_AXIL_CTRL_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input         S_AXIL_CTRL_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input  [10:0] S_AXIL_CTRL_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input  [2:0]  S_AXIL_CTRL_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input         S_AXIL_CTRL_RREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output        S_AXIL_CTRL_RVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output [31:0] S_AXIL_CTRL_RDATA,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output [1:0]  S_AXIL_CTRL_RRESP,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output        S_AXIL_CTRL_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input         S_AXIL_CTRL_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input  [10:0] S_AXIL_CTRL_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input  [2:0]  S_AXIL_CTRL_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output        S_AXIL_CTRL_WREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input         S_AXIL_CTRL_WVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input  [31:0] S_AXIL_CTRL_WDATA,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input  [3:0]  S_AXIL_CTRL_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  input         S_AXIL_CTRL_BREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output        S_AXIL_CTRL_BVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output [1:0]  S_AXIL_CTRL_BRESP,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:115:25
  output        S_AXI_DESC_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [18:0] S_AXI_DESC_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [7:0]  S_AXI_DESC_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [2:0]  S_AXI_DESC_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [1:0]  S_AXI_DESC_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [3:0]  S_AXI_DESC_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [2:0]  S_AXI_DESC_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [3:0]  S_AXI_DESC_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
                S_AXI_DESC_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_RREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output        S_AXI_DESC_RVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output [63:0] S_AXI_DESC_RDATA,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output [1:0]  S_AXI_DESC_RRESP,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output        S_AXI_DESC_RLAST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
                S_AXI_DESC_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [18:0] S_AXI_DESC_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [7:0]  S_AXI_DESC_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [2:0]  S_AXI_DESC_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [1:0]  S_AXI_DESC_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [3:0]  S_AXI_DESC_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [2:0]  S_AXI_DESC_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [3:0]  S_AXI_DESC_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
                S_AXI_DESC_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output        S_AXI_DESC_WREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_WVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [63:0] S_AXI_DESC_WDATA,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input  [7:0]  S_AXI_DESC_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  input         S_AXI_DESC_WLAST,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
                S_AXI_DESC_BREADY,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output        S_AXI_DESC_BVALID,	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
  output [1:0]  S_AXI_DESC_BRESP	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:116:24
);

  wire         _protocolConverter2_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [31:0]  _protocolConverter2_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [1:0]   _protocolConverter2_s_axi_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [1:0]   _protocolConverter2_m_axi_ar_bits_id;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [15:0]  _protocolConverter2_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [7:0]   _protocolConverter2_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [2:0]   _protocolConverter2_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [1:0]   _protocolConverter2_m_axi_ar_bits_burst;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [1:0]   _protocolConverter2_m_axi_aw_bits_id;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [15:0]  _protocolConverter2_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [7:0]   _protocolConverter2_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [2:0]   _protocolConverter2_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [1:0]   _protocolConverter2_m_axi_aw_bits_burst;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [63:0]  _protocolConverter2_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire [7:0]   _protocolConverter2_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _protocolConverter2_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  wire         _mux_s_axi_0_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_0_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [31:0]  _mux_s_axi_0_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_0_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_0_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_0_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_0_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_0_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_0_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_1_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_1_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [31:0]  _mux_s_axi_1_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_1_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_1_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_1_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_1_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_1_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_1_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_2_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_2_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [31:0]  _mux_s_axi_2_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_2_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_2_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_2_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_2_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_2_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_2_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_3_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_3_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [31:0]  _mux_s_axi_3_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_3_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_3_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_3_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_3_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_s_axi_3_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_s_axi_3_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_m_axi_ar_bits_id;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [15:0]  _mux_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [7:0]   _mux_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [2:0]   _mux_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_m_axi_ar_bits_burst;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_ar_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_ar_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [2:0]   _mux_m_axi_ar_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_ar_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_ar_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_m_axi_aw_bits_id;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [15:0]  _mux_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [7:0]   _mux_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [2:0]   _mux_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [1:0]   _mux_m_axi_aw_bits_burst;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_aw_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_aw_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [2:0]   _mux_m_axi_aw_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_aw_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_aw_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [31:0]  _mux_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire [3:0]   _mux_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _mux_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  wire         _sinkBuffer_7_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_7_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_11_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_11_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [127:0] _sourceBuffer_11_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_11_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_11_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_10_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_10_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_10_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_10_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_10_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_10_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_10_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_10_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_10_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_10_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_10_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_6_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_6_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [127:0] _sinkBuffer_6_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_6_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_9_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_9_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_9_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_9_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_9_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_9_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_9_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_9_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_9_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_9_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_9_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_5_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_5_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_8_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_8_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [127:0] _sourceBuffer_8_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_8_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_8_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_7_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_7_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_7_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_7_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_7_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_7_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_7_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_7_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_7_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_7_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_7_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_4_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_4_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [127:0] _sinkBuffer_4_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_4_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_6_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_6_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_6_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_6_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_6_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_6_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_6_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_6_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_6_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_6_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_6_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_3_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_3_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_5_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_5_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [127:0] _sourceBuffer_5_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_5_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_5_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_4_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_4_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_4_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_4_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_4_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_4_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_4_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_4_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_4_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_4_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_4_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_2_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_2_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [127:0] _sinkBuffer_2_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_2_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_3_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_3_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_3_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_3_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_3_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_3_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_3_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_3_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_3_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_3_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_3_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_2_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_2_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [127:0] _sourceBuffer_2_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_2_io_deq_bits_strb;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_2_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_1_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_1_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_1_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_1_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_1_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_1_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_1_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_1_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_1_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire [127:0] _sinkBuffer_io_deq_bits_data;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _sourceBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [15:0]  _sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]   _sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]   _sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _sourceBuffer_io_deq_bits_lock;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_io_deq_bits_cache;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]   _sourceBuffer_io_deq_bits_prot;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_io_deq_bits_qos;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [3:0]   _sourceBuffer_io_deq_bits_region;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire         _protocolConverter1_3_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [127:0] _protocolConverter1_3_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [1:0]   _protocolConverter1_3_s_axi_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_3_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_3_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_3_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_ar_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_ar_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_3_m_axi_ar_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_ar_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_ar_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_3_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_3_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_3_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_aw_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_aw_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_3_m_axi_aw_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_aw_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_aw_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [31:0]  _protocolConverter1_3_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_3_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_3_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [127:0] _protocolConverter1_2_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [1:0]   _protocolConverter1_2_s_axi_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_2_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_2_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_2_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_ar_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_ar_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_2_m_axi_ar_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_ar_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_ar_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_2_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_2_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_2_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_aw_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_aw_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_2_m_axi_aw_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_aw_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_aw_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [31:0]  _protocolConverter1_2_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_2_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_2_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [127:0] _protocolConverter1_1_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [1:0]   _protocolConverter1_1_s_axi_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_1_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_1_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_1_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_ar_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_ar_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_1_m_axi_ar_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_ar_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_ar_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_1_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_1_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_1_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_aw_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_aw_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_1_m_axi_aw_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_aw_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_aw_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [31:0]  _protocolConverter1_1_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_1_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_1_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [127:0] _protocolConverter1_0_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [1:0]   _protocolConverter1_0_s_axi_r_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_0_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_0_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_0_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_ar_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_ar_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_0_m_axi_ar_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_ar_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_ar_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [15:0]  _protocolConverter1_0_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [7:0]   _protocolConverter1_0_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_0_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_aw_bits_lock;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_aw_bits_cache;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [2:0]   _protocolConverter1_0_m_axi_aw_bits_prot;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_aw_bits_qos;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_aw_bits_region;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [31:0]  _protocolConverter1_0_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire [3:0]   _protocolConverter1_0_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _protocolConverter1_0_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
  wire         _sgdmaMulti_m_axiN_0_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_0_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_0_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_0_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_0_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_0_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_0_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_0_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [127:0] _sgdmaMulti_m_axiN_0_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_0_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_0_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_0_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_1_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_1_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_1_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_1_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_1_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_1_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_1_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_1_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [127:0] _sgdmaMulti_m_axiN_1_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_1_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_1_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_1_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_2_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_2_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_2_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_2_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_2_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_2_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_2_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_2_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [127:0] _sgdmaMulti_m_axiN_2_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_2_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_2_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_2_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_3_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_3_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_3_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_3_r_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_3_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_3_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [7:0]   _sgdmaMulti_m_axiN_3_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_3_w_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [127:0] _sgdmaMulti_m_axiN_3_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire [15:0]  _sgdmaMulti_m_axiN_3_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_3_w_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _sgdmaMulti_m_axiN_3_b_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
  wire         _bridge2_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [1:0]   _bridge2_s_axi_r_bits_id;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [63:0]  _bridge2_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [1:0]   _bridge2_s_axi_b_bits_id;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [1:0]   _bridge2_s_axi_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_read_req_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [12:0]  _bridge2_read_req_bits;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_read_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_write_req_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [12:0]  _bridge2_write_req_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [63:0]  _bridge2_write_req_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire [7:0]   _bridge2_write_req_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge2_write_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  wire         _bridge1_read_req_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire [12:0]  _bridge1_read_req_bits;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire         _bridge1_read_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire         _bridge1_write_req_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire [12:0]  _bridge1_write_req_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire [63:0]  _bridge1_write_req_bits_data;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire [7:0]   _bridge1_write_req_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire         _bridge1_write_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
  wire         _mem_read1_req_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_read1_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire [63:0]  _mem_read1_resp_bits;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_read2_req_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_read2_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire [63:0]  _mem_read2_resp_bits;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_write1_req_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_write1_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_write2_req_ready;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  wire         _mem_write2_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  ChiselTrueDualPortRAM mem (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .clock                (clock),
    .reset                (reset),
    .read1_req_ready      (_mem_read1_req_ready),
    .read1_req_valid      (_bridge2_read_req_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .read1_req_bits       (_bridge2_read_req_bits),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .read1_resp_ready     (_bridge2_read_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .read1_resp_valid     (_mem_read1_resp_valid),
    .read1_resp_bits      (_mem_read1_resp_bits),
    .read2_req_ready      (_mem_read2_req_ready),
    .read2_req_valid      (_bridge1_read_req_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .read2_req_bits       (_bridge1_read_req_bits),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .read2_resp_ready     (_bridge1_read_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .read2_resp_valid     (_mem_read2_resp_valid),
    .read2_resp_bits      (_mem_read2_resp_bits),
    .write1_req_ready     (_mem_write1_req_ready),
    .write1_req_valid     (_bridge1_write_req_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .write1_req_bits_addr (_bridge1_write_req_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .write1_req_bits_data (_bridge1_write_req_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .write1_req_bits_strb (_bridge1_write_req_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .write1_resp_ready    (_bridge1_write_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .write1_resp_valid    (_mem_write1_resp_valid),
    .write2_req_ready     (_mem_write2_req_ready),
    .write2_req_valid     (_bridge2_write_req_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .write2_req_bits_addr (_bridge2_write_req_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .write2_req_bits_data (_bridge2_write_req_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .write2_req_bits_strb (_bridge2_write_req_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .write2_resp_ready    (_bridge2_write_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .write2_resp_valid    (_mem_write2_resp_valid)
  );
  Axi4FullToReadWriteBridge bridge1 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:122:33
    .clock               (clock),
    .reset               (reset),
    .s_axi_ar_ready      (S_AXI_MEM_ARREADY),
    .s_axi_ar_valid      (S_AXI_MEM_ARVALID),
    .s_axi_ar_bits_id    (S_AXI_MEM_ARID),
    .s_axi_ar_bits_addr  (S_AXI_MEM_ARADDR),
    .s_axi_ar_bits_len   (S_AXI_MEM_ARLEN),
    .s_axi_ar_bits_size  (S_AXI_MEM_ARSIZE),
    .s_axi_ar_bits_burst (S_AXI_MEM_ARBURST),
    .s_axi_r_ready       (S_AXI_MEM_RREADY),
    .s_axi_r_valid       (S_AXI_MEM_RVALID),
    .s_axi_r_bits_id     (S_AXI_MEM_RID),
    .s_axi_r_bits_data   (S_AXI_MEM_RDATA),
    .s_axi_r_bits_last   (S_AXI_MEM_RLAST),
    .s_axi_aw_ready      (S_AXI_MEM_AWREADY),
    .s_axi_aw_valid      (S_AXI_MEM_AWVALID),
    .s_axi_aw_bits_id    (S_AXI_MEM_AWID),
    .s_axi_aw_bits_addr  (S_AXI_MEM_AWADDR),
    .s_axi_aw_bits_len   (S_AXI_MEM_AWLEN),
    .s_axi_aw_bits_size  (S_AXI_MEM_AWSIZE),
    .s_axi_aw_bits_burst (S_AXI_MEM_AWBURST),
    .s_axi_w_ready       (S_AXI_MEM_WREADY),
    .s_axi_w_valid       (S_AXI_MEM_WVALID),
    .s_axi_w_bits_data   (S_AXI_MEM_WDATA),
    .s_axi_w_bits_strb   (S_AXI_MEM_WSTRB),
    .s_axi_b_ready       (S_AXI_MEM_BREADY),
    .s_axi_b_valid       (S_AXI_MEM_BVALID),
    .s_axi_b_bits_id     (S_AXI_MEM_BID),
    .s_axi_b_bits_resp   (S_AXI_MEM_BRESP),
    .read_req_ready      (_mem_read2_req_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .read_req_valid      (_bridge1_read_req_valid),
    .read_req_bits       (_bridge1_read_req_bits),
    .read_resp_ready     (_bridge1_read_resp_ready),
    .read_resp_valid     (_mem_read2_resp_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .read_resp_bits      (_mem_read2_resp_bits),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .write_req_ready     (_mem_write1_req_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .write_req_valid     (_bridge1_write_req_valid),
    .write_req_bits_addr (_bridge1_write_req_bits_addr),
    .write_req_bits_data (_bridge1_write_req_bits_data),
    .write_req_bits_strb (_bridge1_write_req_bits_strb),
    .write_resp_ready    (_bridge1_write_resp_ready),
    .write_resp_valid    (_mem_write1_resp_valid)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  );
  Axi4FullToReadWriteBridge bridge2 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .clock               (clock),
    .reset               (reset),
    .s_axi_ar_ready      (_bridge2_s_axi_ar_ready),
    .s_axi_ar_valid      (_protocolConverter2_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_ar_bits_id    (_protocolConverter2_m_axi_ar_bits_id),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_ar_bits_addr  (_protocolConverter2_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_ar_bits_len   (_protocolConverter2_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_ar_bits_size  (_protocolConverter2_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_ar_bits_burst (_protocolConverter2_m_axi_ar_bits_burst),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_r_ready       (_protocolConverter2_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_r_valid       (_bridge2_s_axi_r_valid),
    .s_axi_r_bits_id     (_bridge2_s_axi_r_bits_id),
    .s_axi_r_bits_data   (_bridge2_s_axi_r_bits_data),
    .s_axi_r_bits_last   (_bridge2_s_axi_r_bits_last),
    .s_axi_aw_ready      (_bridge2_s_axi_aw_ready),
    .s_axi_aw_valid      (_protocolConverter2_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_aw_bits_id    (_protocolConverter2_m_axi_aw_bits_id),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_aw_bits_addr  (_protocolConverter2_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_aw_bits_len   (_protocolConverter2_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_aw_bits_size  (_protocolConverter2_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_aw_bits_burst (_protocolConverter2_m_axi_aw_bits_burst),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_w_ready       (_bridge2_s_axi_w_ready),
    .s_axi_w_valid       (_protocolConverter2_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_w_bits_data   (_protocolConverter2_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_w_bits_strb   (_protocolConverter2_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_b_ready       (_protocolConverter2_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .s_axi_b_valid       (_bridge2_s_axi_b_valid),
    .s_axi_b_bits_id     (_bridge2_s_axi_b_bits_id),
    .s_axi_b_bits_resp   (_bridge2_s_axi_b_bits_resp),
    .read_req_ready      (_mem_read1_req_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .read_req_valid      (_bridge2_read_req_valid),
    .read_req_bits       (_bridge2_read_req_bits),
    .read_resp_ready     (_bridge2_read_resp_ready),
    .read_resp_valid     (_mem_read1_resp_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .read_resp_bits      (_mem_read1_resp_bits),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .write_req_ready     (_mem_write2_req_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
    .write_req_valid     (_bridge2_write_req_valid),
    .write_req_bits_addr (_bridge2_write_req_bits_addr),
    .write_req_bits_data (_bridge2_write_req_bits_data),
    .write_req_bits_strb (_bridge2_write_req_bits_strb),
    .write_resp_ready    (_bridge2_write_resp_ready),
    .write_resp_valid    (_mem_write2_resp_valid)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:120:29
  );
  SgdmaMulti sgdmaMulti (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .clock                     (clock),
    .reset                     (reset),
    .s_axi_desc_ar_ready       (S_AXI_DESC_ARREADY),
    .s_axi_desc_ar_valid       (S_AXI_DESC_ARVALID),
    .s_axi_desc_ar_bits_addr   (S_AXI_DESC_ARADDR),
    .s_axi_desc_ar_bits_len    (S_AXI_DESC_ARLEN),
    .s_axi_desc_ar_bits_size   (S_AXI_DESC_ARSIZE),
    .s_axi_desc_ar_bits_burst  (S_AXI_DESC_ARBURST),
    .s_axi_desc_ar_bits_lock   (S_AXI_DESC_ARLOCK),
    .s_axi_desc_ar_bits_cache  (S_AXI_DESC_ARCACHE),
    .s_axi_desc_ar_bits_prot   (S_AXI_DESC_ARPROT),
    .s_axi_desc_ar_bits_qos    (S_AXI_DESC_ARQOS),
    .s_axi_desc_ar_bits_region (S_AXI_DESC_ARREGION),
    .s_axi_desc_r_ready        (S_AXI_DESC_RREADY),
    .s_axi_desc_r_valid        (S_AXI_DESC_RVALID),
    .s_axi_desc_r_bits_data    (S_AXI_DESC_RDATA),
    .s_axi_desc_r_bits_resp    (S_AXI_DESC_RRESP),
    .s_axi_desc_r_bits_last    (S_AXI_DESC_RLAST),
    .s_axi_desc_aw_ready       (S_AXI_DESC_AWREADY),
    .s_axi_desc_aw_valid       (S_AXI_DESC_AWVALID),
    .s_axi_desc_aw_bits_addr   (S_AXI_DESC_AWADDR),
    .s_axi_desc_aw_bits_len    (S_AXI_DESC_AWLEN),
    .s_axi_desc_aw_bits_size   (S_AXI_DESC_AWSIZE),
    .s_axi_desc_aw_bits_burst  (S_AXI_DESC_AWBURST),
    .s_axi_desc_aw_bits_lock   (S_AXI_DESC_AWLOCK),
    .s_axi_desc_aw_bits_cache  (S_AXI_DESC_AWCACHE),
    .s_axi_desc_aw_bits_prot   (S_AXI_DESC_AWPROT),
    .s_axi_desc_aw_bits_qos    (S_AXI_DESC_AWQOS),
    .s_axi_desc_aw_bits_region (S_AXI_DESC_AWREGION),
    .s_axi_desc_w_ready        (S_AXI_DESC_WREADY),
    .s_axi_desc_w_valid        (S_AXI_DESC_WVALID),
    .s_axi_desc_w_bits_data    (S_AXI_DESC_WDATA),
    .s_axi_desc_w_bits_strb    (S_AXI_DESC_WSTRB),
    .s_axi_desc_w_bits_last    (S_AXI_DESC_WLAST),
    .s_axi_desc_b_ready        (S_AXI_DESC_BREADY),
    .s_axi_desc_b_valid        (S_AXI_DESC_BVALID),
    .s_axi_desc_b_bits_resp    (S_AXI_DESC_BRESP),
    .s_axil_ctrl_ar_ready      (S_AXIL_CTRL_ARREADY),
    .s_axil_ctrl_ar_valid      (S_AXIL_CTRL_ARVALID),
    .s_axil_ctrl_ar_bits_addr  (S_AXIL_CTRL_ARADDR),
    .s_axil_ctrl_ar_bits_prot  (S_AXIL_CTRL_ARPROT),
    .s_axil_ctrl_r_ready       (S_AXIL_CTRL_RREADY),
    .s_axil_ctrl_r_valid       (S_AXIL_CTRL_RVALID),
    .s_axil_ctrl_r_bits_data   (S_AXIL_CTRL_RDATA),
    .s_axil_ctrl_r_bits_resp   (S_AXIL_CTRL_RRESP),
    .s_axil_ctrl_aw_ready      (S_AXIL_CTRL_AWREADY),
    .s_axil_ctrl_aw_valid      (S_AXIL_CTRL_AWVALID),
    .s_axil_ctrl_aw_bits_addr  (S_AXIL_CTRL_AWADDR),
    .s_axil_ctrl_aw_bits_prot  (S_AXIL_CTRL_AWPROT),
    .s_axil_ctrl_w_ready       (S_AXIL_CTRL_WREADY),
    .s_axil_ctrl_w_valid       (S_AXIL_CTRL_WVALID),
    .s_axil_ctrl_w_bits_data   (S_AXIL_CTRL_WDATA),
    .s_axil_ctrl_w_bits_strb   (S_AXIL_CTRL_WSTRB),
    .s_axil_ctrl_b_ready       (S_AXIL_CTRL_BREADY),
    .s_axil_ctrl_b_valid       (S_AXIL_CTRL_BVALID),
    .s_axil_ctrl_b_bits_resp   (S_AXIL_CTRL_BRESP),
    .m_axiN_0_ar_ready         (_sourceBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_0_ar_valid         (_sgdmaMulti_m_axiN_0_ar_valid),
    .m_axiN_0_ar_bits_addr     (_sgdmaMulti_m_axiN_0_ar_bits_addr),
    .m_axiN_0_ar_bits_len      (_sgdmaMulti_m_axiN_0_ar_bits_len),
    .m_axiN_0_r_ready          (_sgdmaMulti_m_axiN_0_r_ready),
    .m_axiN_0_r_valid          (_sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_0_r_bits_data      (_sinkBuffer_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_0_r_bits_last      (_sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_0_aw_ready         (_sourceBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_0_aw_valid         (_sgdmaMulti_m_axiN_0_aw_valid),
    .m_axiN_0_aw_bits_addr     (_sgdmaMulti_m_axiN_0_aw_bits_addr),
    .m_axiN_0_aw_bits_len      (_sgdmaMulti_m_axiN_0_aw_bits_len),
    .m_axiN_0_w_ready          (_sourceBuffer_2_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_0_w_valid          (_sgdmaMulti_m_axiN_0_w_valid),
    .m_axiN_0_w_bits_data      (_sgdmaMulti_m_axiN_0_w_bits_data),
    .m_axiN_0_w_bits_strb      (_sgdmaMulti_m_axiN_0_w_bits_strb),
    .m_axiN_0_w_bits_last      (_sgdmaMulti_m_axiN_0_w_bits_last),
    .m_axiN_0_b_ready          (_sgdmaMulti_m_axiN_0_b_ready),
    .m_axiN_0_b_valid          (_sinkBuffer_1_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_1_ar_ready         (_sourceBuffer_3_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_1_ar_valid         (_sgdmaMulti_m_axiN_1_ar_valid),
    .m_axiN_1_ar_bits_addr     (_sgdmaMulti_m_axiN_1_ar_bits_addr),
    .m_axiN_1_ar_bits_len      (_sgdmaMulti_m_axiN_1_ar_bits_len),
    .m_axiN_1_r_ready          (_sgdmaMulti_m_axiN_1_r_ready),
    .m_axiN_1_r_valid          (_sinkBuffer_2_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_1_r_bits_data      (_sinkBuffer_2_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_1_r_bits_last      (_sinkBuffer_2_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_1_aw_ready         (_sourceBuffer_4_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_1_aw_valid         (_sgdmaMulti_m_axiN_1_aw_valid),
    .m_axiN_1_aw_bits_addr     (_sgdmaMulti_m_axiN_1_aw_bits_addr),
    .m_axiN_1_aw_bits_len      (_sgdmaMulti_m_axiN_1_aw_bits_len),
    .m_axiN_1_w_ready          (_sourceBuffer_5_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_1_w_valid          (_sgdmaMulti_m_axiN_1_w_valid),
    .m_axiN_1_w_bits_data      (_sgdmaMulti_m_axiN_1_w_bits_data),
    .m_axiN_1_w_bits_strb      (_sgdmaMulti_m_axiN_1_w_bits_strb),
    .m_axiN_1_w_bits_last      (_sgdmaMulti_m_axiN_1_w_bits_last),
    .m_axiN_1_b_ready          (_sgdmaMulti_m_axiN_1_b_ready),
    .m_axiN_1_b_valid          (_sinkBuffer_3_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_2_ar_ready         (_sourceBuffer_6_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_2_ar_valid         (_sgdmaMulti_m_axiN_2_ar_valid),
    .m_axiN_2_ar_bits_addr     (_sgdmaMulti_m_axiN_2_ar_bits_addr),
    .m_axiN_2_ar_bits_len      (_sgdmaMulti_m_axiN_2_ar_bits_len),
    .m_axiN_2_r_ready          (_sgdmaMulti_m_axiN_2_r_ready),
    .m_axiN_2_r_valid          (_sinkBuffer_4_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_2_r_bits_data      (_sinkBuffer_4_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_2_r_bits_last      (_sinkBuffer_4_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_2_aw_ready         (_sourceBuffer_7_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_2_aw_valid         (_sgdmaMulti_m_axiN_2_aw_valid),
    .m_axiN_2_aw_bits_addr     (_sgdmaMulti_m_axiN_2_aw_bits_addr),
    .m_axiN_2_aw_bits_len      (_sgdmaMulti_m_axiN_2_aw_bits_len),
    .m_axiN_2_w_ready          (_sourceBuffer_8_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_2_w_valid          (_sgdmaMulti_m_axiN_2_w_valid),
    .m_axiN_2_w_bits_data      (_sgdmaMulti_m_axiN_2_w_bits_data),
    .m_axiN_2_w_bits_strb      (_sgdmaMulti_m_axiN_2_w_bits_strb),
    .m_axiN_2_w_bits_last      (_sgdmaMulti_m_axiN_2_w_bits_last),
    .m_axiN_2_b_ready          (_sgdmaMulti_m_axiN_2_b_ready),
    .m_axiN_2_b_valid          (_sinkBuffer_5_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_3_ar_ready         (_sourceBuffer_9_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_3_ar_valid         (_sgdmaMulti_m_axiN_3_ar_valid),
    .m_axiN_3_ar_bits_addr     (_sgdmaMulti_m_axiN_3_ar_bits_addr),
    .m_axiN_3_ar_bits_len      (_sgdmaMulti_m_axiN_3_ar_bits_len),
    .m_axiN_3_r_ready          (_sgdmaMulti_m_axiN_3_r_ready),
    .m_axiN_3_r_valid          (_sinkBuffer_6_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_3_r_bits_data      (_sinkBuffer_6_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_3_r_bits_last      (_sinkBuffer_6_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .m_axiN_3_aw_ready         (_sourceBuffer_10_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_3_aw_valid         (_sgdmaMulti_m_axiN_3_aw_valid),
    .m_axiN_3_aw_bits_addr     (_sgdmaMulti_m_axiN_3_aw_bits_addr),
    .m_axiN_3_aw_bits_len      (_sgdmaMulti_m_axiN_3_aw_bits_len),
    .m_axiN_3_w_ready          (_sourceBuffer_11_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .m_axiN_3_w_valid          (_sgdmaMulti_m_axiN_3_w_valid),
    .m_axiN_3_w_bits_data      (_sgdmaMulti_m_axiN_3_w_bits_data),
    .m_axiN_3_w_bits_strb      (_sgdmaMulti_m_axiN_3_w_bits_strb),
    .m_axiN_3_w_bits_last      (_sgdmaMulti_m_axiN_3_w_bits_last),
    .m_axiN_3_b_ready          (_sgdmaMulti_m_axiN_3_b_ready),
    .m_axiN_3_b_valid          (_sinkBuffer_7_io_deq_valid)	// src/main/scala/chext/elastic/Buffer.scala:148:30
  );
  protocolConverter protocolConverter1_0 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_protocolConverter1_0_s_axi_ar_ready),
    .s_axi_ar_valid       (_sourceBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_addr   (_sourceBuffer_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_len    (_sourceBuffer_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_size   (_sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_burst  (_sourceBuffer_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_lock   (_sourceBuffer_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_cache  (_sourceBuffer_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_prot   (_sourceBuffer_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_qos    (_sourceBuffer_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_region (_sourceBuffer_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_r_ready        (_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_r_valid        (_protocolConverter1_0_s_axi_r_valid),
    .s_axi_r_bits_data    (_protocolConverter1_0_s_axi_r_bits_data),
    .s_axi_r_bits_resp    (_protocolConverter1_0_s_axi_r_bits_resp),
    .s_axi_r_bits_last    (_protocolConverter1_0_s_axi_r_bits_last),
    .s_axi_aw_ready       (_protocolConverter1_0_s_axi_aw_ready),
    .s_axi_aw_valid       (_sourceBuffer_1_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_addr   (_sourceBuffer_1_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_len    (_sourceBuffer_1_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_size   (_sourceBuffer_1_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_burst  (_sourceBuffer_1_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_lock   (_sourceBuffer_1_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_cache  (_sourceBuffer_1_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_prot   (_sourceBuffer_1_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_qos    (_sourceBuffer_1_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_region (_sourceBuffer_1_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_ready        (_protocolConverter1_0_s_axi_w_ready),
    .s_axi_w_valid        (_sourceBuffer_2_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_data    (_sourceBuffer_2_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_strb    (_sourceBuffer_2_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_last    (_sourceBuffer_2_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_b_ready        (_sinkBuffer_1_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_b_valid        (_protocolConverter1_0_s_axi_b_valid),
    .m_axi_ar_ready       (_mux_s_axi_0_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_ar_valid       (_protocolConverter1_0_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_protocolConverter1_0_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_protocolConverter1_0_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_protocolConverter1_0_m_axi_ar_bits_size),
    .m_axi_ar_bits_lock   (_protocolConverter1_0_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_protocolConverter1_0_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_protocolConverter1_0_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_protocolConverter1_0_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_protocolConverter1_0_m_axi_ar_bits_region),
    .m_axi_r_ready        (_protocolConverter1_0_m_axi_r_ready),
    .m_axi_r_valid        (_mux_s_axi_0_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_data    (_mux_s_axi_0_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_resp    (_mux_s_axi_0_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_last    (_mux_s_axi_0_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_ready       (_mux_s_axi_0_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_valid       (_protocolConverter1_0_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_protocolConverter1_0_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_protocolConverter1_0_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_protocolConverter1_0_m_axi_aw_bits_size),
    .m_axi_aw_bits_lock   (_protocolConverter1_0_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_protocolConverter1_0_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_protocolConverter1_0_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_protocolConverter1_0_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_protocolConverter1_0_m_axi_aw_bits_region),
    .m_axi_w_ready        (_mux_s_axi_0_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_w_valid        (_protocolConverter1_0_m_axi_w_valid),
    .m_axi_w_bits_data    (_protocolConverter1_0_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_protocolConverter1_0_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_protocolConverter1_0_m_axi_w_bits_last),
    .m_axi_b_ready        (_protocolConverter1_0_m_axi_b_ready),
    .m_axi_b_valid        (_mux_s_axi_0_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_b_bits_resp    (_mux_s_axi_0_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  );
  protocolConverter protocolConverter1_1 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_protocolConverter1_1_s_axi_ar_ready),
    .s_axi_ar_valid       (_sourceBuffer_3_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_addr   (_sourceBuffer_3_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_len    (_sourceBuffer_3_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_size   (_sourceBuffer_3_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_burst  (_sourceBuffer_3_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_lock   (_sourceBuffer_3_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_cache  (_sourceBuffer_3_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_prot   (_sourceBuffer_3_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_qos    (_sourceBuffer_3_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_region (_sourceBuffer_3_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_r_ready        (_sinkBuffer_2_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_r_valid        (_protocolConverter1_1_s_axi_r_valid),
    .s_axi_r_bits_data    (_protocolConverter1_1_s_axi_r_bits_data),
    .s_axi_r_bits_resp    (_protocolConverter1_1_s_axi_r_bits_resp),
    .s_axi_r_bits_last    (_protocolConverter1_1_s_axi_r_bits_last),
    .s_axi_aw_ready       (_protocolConverter1_1_s_axi_aw_ready),
    .s_axi_aw_valid       (_sourceBuffer_4_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_addr   (_sourceBuffer_4_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_len    (_sourceBuffer_4_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_size   (_sourceBuffer_4_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_burst  (_sourceBuffer_4_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_lock   (_sourceBuffer_4_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_cache  (_sourceBuffer_4_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_prot   (_sourceBuffer_4_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_qos    (_sourceBuffer_4_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_region (_sourceBuffer_4_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_ready        (_protocolConverter1_1_s_axi_w_ready),
    .s_axi_w_valid        (_sourceBuffer_5_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_data    (_sourceBuffer_5_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_strb    (_sourceBuffer_5_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_last    (_sourceBuffer_5_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_b_ready        (_sinkBuffer_3_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_b_valid        (_protocolConverter1_1_s_axi_b_valid),
    .m_axi_ar_ready       (_mux_s_axi_1_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_ar_valid       (_protocolConverter1_1_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_protocolConverter1_1_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_protocolConverter1_1_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_protocolConverter1_1_m_axi_ar_bits_size),
    .m_axi_ar_bits_lock   (_protocolConverter1_1_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_protocolConverter1_1_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_protocolConverter1_1_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_protocolConverter1_1_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_protocolConverter1_1_m_axi_ar_bits_region),
    .m_axi_r_ready        (_protocolConverter1_1_m_axi_r_ready),
    .m_axi_r_valid        (_mux_s_axi_1_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_data    (_mux_s_axi_1_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_resp    (_mux_s_axi_1_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_last    (_mux_s_axi_1_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_ready       (_mux_s_axi_1_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_valid       (_protocolConverter1_1_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_protocolConverter1_1_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_protocolConverter1_1_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_protocolConverter1_1_m_axi_aw_bits_size),
    .m_axi_aw_bits_lock   (_protocolConverter1_1_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_protocolConverter1_1_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_protocolConverter1_1_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_protocolConverter1_1_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_protocolConverter1_1_m_axi_aw_bits_region),
    .m_axi_w_ready        (_mux_s_axi_1_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_w_valid        (_protocolConverter1_1_m_axi_w_valid),
    .m_axi_w_bits_data    (_protocolConverter1_1_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_protocolConverter1_1_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_protocolConverter1_1_m_axi_w_bits_last),
    .m_axi_b_ready        (_protocolConverter1_1_m_axi_b_ready),
    .m_axi_b_valid        (_mux_s_axi_1_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_b_bits_resp    (_mux_s_axi_1_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  );
  protocolConverter protocolConverter1_2 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_protocolConverter1_2_s_axi_ar_ready),
    .s_axi_ar_valid       (_sourceBuffer_6_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_addr   (_sourceBuffer_6_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_len    (_sourceBuffer_6_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_size   (_sourceBuffer_6_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_burst  (_sourceBuffer_6_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_lock   (_sourceBuffer_6_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_cache  (_sourceBuffer_6_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_prot   (_sourceBuffer_6_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_qos    (_sourceBuffer_6_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_region (_sourceBuffer_6_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_r_ready        (_sinkBuffer_4_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_r_valid        (_protocolConverter1_2_s_axi_r_valid),
    .s_axi_r_bits_data    (_protocolConverter1_2_s_axi_r_bits_data),
    .s_axi_r_bits_resp    (_protocolConverter1_2_s_axi_r_bits_resp),
    .s_axi_r_bits_last    (_protocolConverter1_2_s_axi_r_bits_last),
    .s_axi_aw_ready       (_protocolConverter1_2_s_axi_aw_ready),
    .s_axi_aw_valid       (_sourceBuffer_7_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_addr   (_sourceBuffer_7_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_len    (_sourceBuffer_7_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_size   (_sourceBuffer_7_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_burst  (_sourceBuffer_7_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_lock   (_sourceBuffer_7_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_cache  (_sourceBuffer_7_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_prot   (_sourceBuffer_7_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_qos    (_sourceBuffer_7_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_region (_sourceBuffer_7_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_ready        (_protocolConverter1_2_s_axi_w_ready),
    .s_axi_w_valid        (_sourceBuffer_8_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_data    (_sourceBuffer_8_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_strb    (_sourceBuffer_8_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_last    (_sourceBuffer_8_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_b_ready        (_sinkBuffer_5_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_b_valid        (_protocolConverter1_2_s_axi_b_valid),
    .m_axi_ar_ready       (_mux_s_axi_2_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_ar_valid       (_protocolConverter1_2_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_protocolConverter1_2_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_protocolConverter1_2_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_protocolConverter1_2_m_axi_ar_bits_size),
    .m_axi_ar_bits_lock   (_protocolConverter1_2_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_protocolConverter1_2_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_protocolConverter1_2_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_protocolConverter1_2_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_protocolConverter1_2_m_axi_ar_bits_region),
    .m_axi_r_ready        (_protocolConverter1_2_m_axi_r_ready),
    .m_axi_r_valid        (_mux_s_axi_2_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_data    (_mux_s_axi_2_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_resp    (_mux_s_axi_2_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_last    (_mux_s_axi_2_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_ready       (_mux_s_axi_2_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_valid       (_protocolConverter1_2_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_protocolConverter1_2_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_protocolConverter1_2_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_protocolConverter1_2_m_axi_aw_bits_size),
    .m_axi_aw_bits_lock   (_protocolConverter1_2_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_protocolConverter1_2_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_protocolConverter1_2_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_protocolConverter1_2_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_protocolConverter1_2_m_axi_aw_bits_region),
    .m_axi_w_ready        (_mux_s_axi_2_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_w_valid        (_protocolConverter1_2_m_axi_w_valid),
    .m_axi_w_bits_data    (_protocolConverter1_2_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_protocolConverter1_2_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_protocolConverter1_2_m_axi_w_bits_last),
    .m_axi_b_ready        (_protocolConverter1_2_m_axi_b_ready),
    .m_axi_b_valid        (_mux_s_axi_2_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_b_bits_resp    (_mux_s_axi_2_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  );
  protocolConverter protocolConverter1_3 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_protocolConverter1_3_s_axi_ar_ready),
    .s_axi_ar_valid       (_sourceBuffer_9_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_addr   (_sourceBuffer_9_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_len    (_sourceBuffer_9_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_size   (_sourceBuffer_9_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_burst  (_sourceBuffer_9_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_lock   (_sourceBuffer_9_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_cache  (_sourceBuffer_9_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_prot   (_sourceBuffer_9_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_qos    (_sourceBuffer_9_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_ar_bits_region (_sourceBuffer_9_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_r_ready        (_sinkBuffer_6_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_r_valid        (_protocolConverter1_3_s_axi_r_valid),
    .s_axi_r_bits_data    (_protocolConverter1_3_s_axi_r_bits_data),
    .s_axi_r_bits_resp    (_protocolConverter1_3_s_axi_r_bits_resp),
    .s_axi_r_bits_last    (_protocolConverter1_3_s_axi_r_bits_last),
    .s_axi_aw_ready       (_protocolConverter1_3_s_axi_aw_ready),
    .s_axi_aw_valid       (_sourceBuffer_10_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_addr   (_sourceBuffer_10_io_deq_bits_addr),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_len    (_sourceBuffer_10_io_deq_bits_len),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_size   (_sourceBuffer_10_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_burst  (_sourceBuffer_10_io_deq_bits_burst),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_lock   (_sourceBuffer_10_io_deq_bits_lock),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_cache  (_sourceBuffer_10_io_deq_bits_cache),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_prot   (_sourceBuffer_10_io_deq_bits_prot),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_qos    (_sourceBuffer_10_io_deq_bits_qos),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_aw_bits_region (_sourceBuffer_10_io_deq_bits_region),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_ready        (_protocolConverter1_3_s_axi_w_ready),
    .s_axi_w_valid        (_sourceBuffer_11_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_data    (_sourceBuffer_11_io_deq_bits_data),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_strb    (_sourceBuffer_11_io_deq_bits_strb),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_w_bits_last    (_sourceBuffer_11_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .s_axi_b_ready        (_sinkBuffer_7_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .s_axi_b_valid        (_protocolConverter1_3_s_axi_b_valid),
    .m_axi_ar_ready       (_mux_s_axi_3_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_ar_valid       (_protocolConverter1_3_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_protocolConverter1_3_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_protocolConverter1_3_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_protocolConverter1_3_m_axi_ar_bits_size),
    .m_axi_ar_bits_lock   (_protocolConverter1_3_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (_protocolConverter1_3_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (_protocolConverter1_3_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (_protocolConverter1_3_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (_protocolConverter1_3_m_axi_ar_bits_region),
    .m_axi_r_ready        (_protocolConverter1_3_m_axi_r_ready),
    .m_axi_r_valid        (_mux_s_axi_3_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_data    (_mux_s_axi_3_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_resp    (_mux_s_axi_3_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_r_bits_last    (_mux_s_axi_3_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_ready       (_mux_s_axi_3_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_aw_valid       (_protocolConverter1_3_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_protocolConverter1_3_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_protocolConverter1_3_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_protocolConverter1_3_m_axi_aw_bits_size),
    .m_axi_aw_bits_lock   (_protocolConverter1_3_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (_protocolConverter1_3_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (_protocolConverter1_3_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (_protocolConverter1_3_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (_protocolConverter1_3_m_axi_aw_bits_region),
    .m_axi_w_ready        (_mux_s_axi_3_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_w_valid        (_protocolConverter1_3_m_axi_w_valid),
    .m_axi_w_bits_data    (_protocolConverter1_3_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_protocolConverter1_3_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (_protocolConverter1_3_m_axi_w_bits_last),
    .m_axi_b_ready        (_protocolConverter1_3_m_axi_b_ready),
    .m_axi_b_valid        (_mux_s_axi_3_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .m_axi_b_bits_resp    (_mux_s_axi_3_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
  );
  Queue16_ReadAddressChannel sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_0_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_0_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_0_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_0_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_io_deq_bits_region)
  );
  Queue16_ReadDataChannel sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_protocolConverter1_0_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_data (_protocolConverter1_0_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_resp (_protocolConverter1_0_s_axi_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_last (_protocolConverter1_0_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready     (_sgdmaMulti_m_axiN_0_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid     (_sinkBuffer_io_deq_valid),
    .io_deq_bits_data (_sinkBuffer_io_deq_bits_data),
    .io_deq_bits_last (_sinkBuffer_io_deq_bits_last)
  );
  Queue16_WriteAddressChannel sourceBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_1_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_0_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_0_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_0_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_0_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_1_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_1_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_1_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_1_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_1_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_1_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_1_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_1_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_1_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_1_io_deq_bits_region)
  );
  Queue16_WriteDataChannel sourceBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sourceBuffer_2_io_enq_ready),
    .io_enq_valid     (_sgdmaMulti_m_axiN_0_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_data (_sgdmaMulti_m_axiN_0_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_strb (_sgdmaMulti_m_axiN_0_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_last (_sgdmaMulti_m_axiN_0_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready     (_protocolConverter1_0_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid     (_sourceBuffer_2_io_deq_valid),
    .io_deq_bits_data (_sourceBuffer_2_io_deq_bits_data),
    .io_deq_bits_strb (_sourceBuffer_2_io_deq_bits_strb),
    .io_deq_bits_last (_sourceBuffer_2_io_deq_bits_last)
  );
  Queue16_WriteResponseChannel sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_sinkBuffer_1_io_enq_ready),
    .io_enq_valid (_protocolConverter1_0_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready (_sgdmaMulti_m_axiN_0_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid (_sinkBuffer_1_io_deq_valid)
  );
  Queue16_ReadAddressChannel sourceBuffer_3 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_3_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_1_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_1_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_1_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_1_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_3_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_3_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_3_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_3_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_3_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_3_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_3_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_3_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_3_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_3_io_deq_bits_region)
  );
  Queue16_ReadDataChannel sinkBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sinkBuffer_2_io_enq_ready),
    .io_enq_valid     (_protocolConverter1_1_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_data (_protocolConverter1_1_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_resp (_protocolConverter1_1_s_axi_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_last (_protocolConverter1_1_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready     (_sgdmaMulti_m_axiN_1_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid     (_sinkBuffer_2_io_deq_valid),
    .io_deq_bits_data (_sinkBuffer_2_io_deq_bits_data),
    .io_deq_bits_last (_sinkBuffer_2_io_deq_bits_last)
  );
  Queue16_WriteAddressChannel sourceBuffer_4 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_4_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_1_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_1_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_1_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_1_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_4_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_4_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_4_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_4_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_4_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_4_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_4_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_4_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_4_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_4_io_deq_bits_region)
  );
  Queue16_WriteDataChannel sourceBuffer_5 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sourceBuffer_5_io_enq_ready),
    .io_enq_valid     (_sgdmaMulti_m_axiN_1_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_data (_sgdmaMulti_m_axiN_1_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_strb (_sgdmaMulti_m_axiN_1_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_last (_sgdmaMulti_m_axiN_1_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready     (_protocolConverter1_1_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid     (_sourceBuffer_5_io_deq_valid),
    .io_deq_bits_data (_sourceBuffer_5_io_deq_bits_data),
    .io_deq_bits_strb (_sourceBuffer_5_io_deq_bits_strb),
    .io_deq_bits_last (_sourceBuffer_5_io_deq_bits_last)
  );
  Queue16_WriteResponseChannel sinkBuffer_3 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_sinkBuffer_3_io_enq_ready),
    .io_enq_valid (_protocolConverter1_1_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready (_sgdmaMulti_m_axiN_1_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid (_sinkBuffer_3_io_deq_valid)
  );
  Queue16_ReadAddressChannel sourceBuffer_6 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_6_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_2_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_2_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_2_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_2_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_6_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_6_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_6_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_6_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_6_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_6_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_6_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_6_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_6_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_6_io_deq_bits_region)
  );
  Queue16_ReadDataChannel sinkBuffer_4 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sinkBuffer_4_io_enq_ready),
    .io_enq_valid     (_protocolConverter1_2_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_data (_protocolConverter1_2_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_resp (_protocolConverter1_2_s_axi_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_last (_protocolConverter1_2_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready     (_sgdmaMulti_m_axiN_2_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid     (_sinkBuffer_4_io_deq_valid),
    .io_deq_bits_data (_sinkBuffer_4_io_deq_bits_data),
    .io_deq_bits_last (_sinkBuffer_4_io_deq_bits_last)
  );
  Queue16_WriteAddressChannel sourceBuffer_7 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_7_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_2_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_2_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_2_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_2_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_7_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_7_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_7_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_7_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_7_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_7_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_7_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_7_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_7_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_7_io_deq_bits_region)
  );
  Queue16_WriteDataChannel sourceBuffer_8 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sourceBuffer_8_io_enq_ready),
    .io_enq_valid     (_sgdmaMulti_m_axiN_2_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_data (_sgdmaMulti_m_axiN_2_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_strb (_sgdmaMulti_m_axiN_2_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_last (_sgdmaMulti_m_axiN_2_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready     (_protocolConverter1_2_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid     (_sourceBuffer_8_io_deq_valid),
    .io_deq_bits_data (_sourceBuffer_8_io_deq_bits_data),
    .io_deq_bits_strb (_sourceBuffer_8_io_deq_bits_strb),
    .io_deq_bits_last (_sourceBuffer_8_io_deq_bits_last)
  );
  Queue16_WriteResponseChannel sinkBuffer_5 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_sinkBuffer_5_io_enq_ready),
    .io_enq_valid (_protocolConverter1_2_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready (_sgdmaMulti_m_axiN_2_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid (_sinkBuffer_5_io_deq_valid)
  );
  Queue16_ReadAddressChannel sourceBuffer_9 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_9_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_3_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_3_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_3_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_3_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_9_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_9_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_9_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_9_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_9_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_9_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_9_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_9_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_9_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_9_io_deq_bits_region)
  );
  Queue16_ReadDataChannel sinkBuffer_6 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sinkBuffer_6_io_enq_ready),
    .io_enq_valid     (_protocolConverter1_3_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_data (_protocolConverter1_3_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_resp (_protocolConverter1_3_s_axi_r_bits_resp),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_enq_bits_last (_protocolConverter1_3_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready     (_sgdmaMulti_m_axiN_3_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid     (_sinkBuffer_6_io_deq_valid),
    .io_deq_bits_data (_sinkBuffer_6_io_deq_bits_data),
    .io_deq_bits_last (_sinkBuffer_6_io_deq_bits_last)
  );
  Queue16_WriteAddressChannel sourceBuffer_10 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_sourceBuffer_10_io_enq_ready),
    .io_enq_valid       (_sgdmaMulti_m_axiN_3_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_addr   (_sgdmaMulti_m_axiN_3_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_len    (_sgdmaMulti_m_axiN_3_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready       (_protocolConverter1_3_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid       (_sourceBuffer_10_io_deq_valid),
    .io_deq_bits_addr   (_sourceBuffer_10_io_deq_bits_addr),
    .io_deq_bits_len    (_sourceBuffer_10_io_deq_bits_len),
    .io_deq_bits_size   (_sourceBuffer_10_io_deq_bits_size),
    .io_deq_bits_burst  (_sourceBuffer_10_io_deq_bits_burst),
    .io_deq_bits_lock   (_sourceBuffer_10_io_deq_bits_lock),
    .io_deq_bits_cache  (_sourceBuffer_10_io_deq_bits_cache),
    .io_deq_bits_prot   (_sourceBuffer_10_io_deq_bits_prot),
    .io_deq_bits_qos    (_sourceBuffer_10_io_deq_bits_qos),
    .io_deq_bits_region (_sourceBuffer_10_io_deq_bits_region)
  );
  Queue16_WriteDataChannel sourceBuffer_11 (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sourceBuffer_11_io_enq_ready),
    .io_enq_valid     (_sgdmaMulti_m_axiN_3_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_data (_sgdmaMulti_m_axiN_3_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_strb (_sgdmaMulti_m_axiN_3_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_enq_bits_last (_sgdmaMulti_m_axiN_3_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_ready     (_protocolConverter1_3_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_valid     (_sourceBuffer_11_io_deq_valid),
    .io_deq_bits_data (_sourceBuffer_11_io_deq_bits_data),
    .io_deq_bits_strb (_sourceBuffer_11_io_deq_bits_strb),
    .io_deq_bits_last (_sourceBuffer_11_io_deq_bits_last)
  );
  Queue16_WriteResponseChannel sinkBuffer_7 (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_sinkBuffer_7_io_enq_ready),
    .io_enq_valid (_protocolConverter1_3_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .io_deq_ready (_sgdmaMulti_m_axiN_3_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:139:36
    .io_deq_valid (_sinkBuffer_7_io_deq_valid)
  );
  axi4FullMux mux (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .clock                  (clock),
    .reset                  (reset),
    .s_axi_0_ar_ready       (_mux_s_axi_0_ar_ready),
    .s_axi_0_ar_valid       (_protocolConverter1_0_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_addr   (_protocolConverter1_0_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_len    (_protocolConverter1_0_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_size   (_protocolConverter1_0_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_lock   (_protocolConverter1_0_m_axi_ar_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_cache  (_protocolConverter1_0_m_axi_ar_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_prot   (_protocolConverter1_0_m_axi_ar_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_qos    (_protocolConverter1_0_m_axi_ar_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_ar_bits_region (_protocolConverter1_0_m_axi_ar_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_r_ready        (_protocolConverter1_0_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_r_valid        (_mux_s_axi_0_r_valid),
    .s_axi_0_r_bits_data    (_mux_s_axi_0_r_bits_data),
    .s_axi_0_r_bits_resp    (_mux_s_axi_0_r_bits_resp),
    .s_axi_0_r_bits_last    (_mux_s_axi_0_r_bits_last),
    .s_axi_0_aw_ready       (_mux_s_axi_0_aw_ready),
    .s_axi_0_aw_valid       (_protocolConverter1_0_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_addr   (_protocolConverter1_0_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_len    (_protocolConverter1_0_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_size   (_protocolConverter1_0_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_lock   (_protocolConverter1_0_m_axi_aw_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_cache  (_protocolConverter1_0_m_axi_aw_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_prot   (_protocolConverter1_0_m_axi_aw_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_qos    (_protocolConverter1_0_m_axi_aw_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_aw_bits_region (_protocolConverter1_0_m_axi_aw_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_w_ready        (_mux_s_axi_0_w_ready),
    .s_axi_0_w_valid        (_protocolConverter1_0_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_w_bits_data    (_protocolConverter1_0_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_w_bits_strb    (_protocolConverter1_0_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_w_bits_last    (_protocolConverter1_0_m_axi_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_b_ready        (_protocolConverter1_0_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_0_b_valid        (_mux_s_axi_0_b_valid),
    .s_axi_0_b_bits_resp    (_mux_s_axi_0_b_bits_resp),
    .s_axi_1_ar_ready       (_mux_s_axi_1_ar_ready),
    .s_axi_1_ar_valid       (_protocolConverter1_1_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_addr   (_protocolConverter1_1_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_len    (_protocolConverter1_1_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_size   (_protocolConverter1_1_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_lock   (_protocolConverter1_1_m_axi_ar_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_cache  (_protocolConverter1_1_m_axi_ar_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_prot   (_protocolConverter1_1_m_axi_ar_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_qos    (_protocolConverter1_1_m_axi_ar_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_ar_bits_region (_protocolConverter1_1_m_axi_ar_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_r_ready        (_protocolConverter1_1_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_r_valid        (_mux_s_axi_1_r_valid),
    .s_axi_1_r_bits_data    (_mux_s_axi_1_r_bits_data),
    .s_axi_1_r_bits_resp    (_mux_s_axi_1_r_bits_resp),
    .s_axi_1_r_bits_last    (_mux_s_axi_1_r_bits_last),
    .s_axi_1_aw_ready       (_mux_s_axi_1_aw_ready),
    .s_axi_1_aw_valid       (_protocolConverter1_1_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_addr   (_protocolConverter1_1_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_len    (_protocolConverter1_1_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_size   (_protocolConverter1_1_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_lock   (_protocolConverter1_1_m_axi_aw_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_cache  (_protocolConverter1_1_m_axi_aw_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_prot   (_protocolConverter1_1_m_axi_aw_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_qos    (_protocolConverter1_1_m_axi_aw_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_aw_bits_region (_protocolConverter1_1_m_axi_aw_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_w_ready        (_mux_s_axi_1_w_ready),
    .s_axi_1_w_valid        (_protocolConverter1_1_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_w_bits_data    (_protocolConverter1_1_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_w_bits_strb    (_protocolConverter1_1_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_w_bits_last    (_protocolConverter1_1_m_axi_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_b_ready        (_protocolConverter1_1_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_1_b_valid        (_mux_s_axi_1_b_valid),
    .s_axi_1_b_bits_resp    (_mux_s_axi_1_b_bits_resp),
    .s_axi_2_ar_ready       (_mux_s_axi_2_ar_ready),
    .s_axi_2_ar_valid       (_protocolConverter1_2_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_addr   (_protocolConverter1_2_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_len    (_protocolConverter1_2_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_size   (_protocolConverter1_2_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_lock   (_protocolConverter1_2_m_axi_ar_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_cache  (_protocolConverter1_2_m_axi_ar_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_prot   (_protocolConverter1_2_m_axi_ar_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_qos    (_protocolConverter1_2_m_axi_ar_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_ar_bits_region (_protocolConverter1_2_m_axi_ar_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_r_ready        (_protocolConverter1_2_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_r_valid        (_mux_s_axi_2_r_valid),
    .s_axi_2_r_bits_data    (_mux_s_axi_2_r_bits_data),
    .s_axi_2_r_bits_resp    (_mux_s_axi_2_r_bits_resp),
    .s_axi_2_r_bits_last    (_mux_s_axi_2_r_bits_last),
    .s_axi_2_aw_ready       (_mux_s_axi_2_aw_ready),
    .s_axi_2_aw_valid       (_protocolConverter1_2_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_addr   (_protocolConverter1_2_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_len    (_protocolConverter1_2_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_size   (_protocolConverter1_2_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_lock   (_protocolConverter1_2_m_axi_aw_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_cache  (_protocolConverter1_2_m_axi_aw_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_prot   (_protocolConverter1_2_m_axi_aw_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_qos    (_protocolConverter1_2_m_axi_aw_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_aw_bits_region (_protocolConverter1_2_m_axi_aw_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_w_ready        (_mux_s_axi_2_w_ready),
    .s_axi_2_w_valid        (_protocolConverter1_2_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_w_bits_data    (_protocolConverter1_2_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_w_bits_strb    (_protocolConverter1_2_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_w_bits_last    (_protocolConverter1_2_m_axi_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_b_ready        (_protocolConverter1_2_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_2_b_valid        (_mux_s_axi_2_b_valid),
    .s_axi_2_b_bits_resp    (_mux_s_axi_2_b_bits_resp),
    .s_axi_3_ar_ready       (_mux_s_axi_3_ar_ready),
    .s_axi_3_ar_valid       (_protocolConverter1_3_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_addr   (_protocolConverter1_3_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_len    (_protocolConverter1_3_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_size   (_protocolConverter1_3_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_lock   (_protocolConverter1_3_m_axi_ar_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_cache  (_protocolConverter1_3_m_axi_ar_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_prot   (_protocolConverter1_3_m_axi_ar_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_qos    (_protocolConverter1_3_m_axi_ar_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_ar_bits_region (_protocolConverter1_3_m_axi_ar_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_r_ready        (_protocolConverter1_3_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_r_valid        (_mux_s_axi_3_r_valid),
    .s_axi_3_r_bits_data    (_mux_s_axi_3_r_bits_data),
    .s_axi_3_r_bits_resp    (_mux_s_axi_3_r_bits_resp),
    .s_axi_3_r_bits_last    (_mux_s_axi_3_r_bits_last),
    .s_axi_3_aw_ready       (_mux_s_axi_3_aw_ready),
    .s_axi_3_aw_valid       (_protocolConverter1_3_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_addr   (_protocolConverter1_3_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_len    (_protocolConverter1_3_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_size   (_protocolConverter1_3_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_lock   (_protocolConverter1_3_m_axi_aw_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_cache  (_protocolConverter1_3_m_axi_aw_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_prot   (_protocolConverter1_3_m_axi_aw_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_qos    (_protocolConverter1_3_m_axi_aw_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_aw_bits_region (_protocolConverter1_3_m_axi_aw_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_w_ready        (_mux_s_axi_3_w_ready),
    .s_axi_3_w_valid        (_protocolConverter1_3_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_w_bits_data    (_protocolConverter1_3_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_w_bits_strb    (_protocolConverter1_3_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_w_bits_last    (_protocolConverter1_3_m_axi_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_b_ready        (_protocolConverter1_3_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:146:13
    .s_axi_3_b_valid        (_mux_s_axi_3_b_valid),
    .s_axi_3_b_bits_resp    (_mux_s_axi_3_b_bits_resp),
    .m_axi_ar_ready         (_protocolConverter2_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_ar_valid         (_mux_m_axi_ar_valid),
    .m_axi_ar_bits_id       (_mux_m_axi_ar_bits_id),
    .m_axi_ar_bits_addr     (_mux_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len      (_mux_m_axi_ar_bits_len),
    .m_axi_ar_bits_size     (_mux_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst    (_mux_m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock     (_mux_m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache    (_mux_m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot     (_mux_m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos      (_mux_m_axi_ar_bits_qos),
    .m_axi_ar_bits_region   (_mux_m_axi_ar_bits_region),
    .m_axi_r_ready          (_mux_m_axi_r_ready),
    .m_axi_r_valid          (_protocolConverter2_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_r_bits_data      (_protocolConverter2_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_r_bits_last      (_protocolConverter2_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_aw_ready         (_protocolConverter2_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_aw_valid         (_mux_m_axi_aw_valid),
    .m_axi_aw_bits_id       (_mux_m_axi_aw_bits_id),
    .m_axi_aw_bits_addr     (_mux_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len      (_mux_m_axi_aw_bits_len),
    .m_axi_aw_bits_size     (_mux_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst    (_mux_m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock     (_mux_m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache    (_mux_m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot     (_mux_m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos      (_mux_m_axi_aw_bits_qos),
    .m_axi_aw_bits_region   (_mux_m_axi_aw_bits_region),
    .m_axi_w_ready          (_protocolConverter2_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_w_valid          (_mux_m_axi_w_valid),
    .m_axi_w_bits_data      (_mux_m_axi_w_bits_data),
    .m_axi_w_bits_strb      (_mux_m_axi_w_bits_strb),
    .m_axi_w_bits_last      (_mux_m_axi_w_bits_last),
    .m_axi_b_ready          (_mux_m_axi_b_ready),
    .m_axi_b_valid          (_protocolConverter2_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .m_axi_b_bits_resp      (_protocolConverter2_s_axi_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
  );
  protocolConverter_4 protocolConverter2 (	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:165:44
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (_protocolConverter2_s_axi_ar_ready),
    .s_axi_ar_valid       (_mux_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_id     (_mux_m_axi_ar_bits_id),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_addr   (_mux_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_len    (_mux_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_size   (_mux_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_burst  (_mux_m_axi_ar_bits_burst),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_lock   (_mux_m_axi_ar_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_cache  (_mux_m_axi_ar_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_prot   (_mux_m_axi_ar_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_qos    (_mux_m_axi_ar_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_ar_bits_region (_mux_m_axi_ar_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_r_ready        (_mux_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_r_valid        (_protocolConverter2_s_axi_r_valid),
    .s_axi_r_bits_data    (_protocolConverter2_s_axi_r_bits_data),
    .s_axi_r_bits_last    (_protocolConverter2_s_axi_r_bits_last),
    .s_axi_aw_ready       (_protocolConverter2_s_axi_aw_ready),
    .s_axi_aw_valid       (_mux_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_id     (_mux_m_axi_aw_bits_id),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_addr   (_mux_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_len    (_mux_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_size   (_mux_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_burst  (_mux_m_axi_aw_bits_burst),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_lock   (_mux_m_axi_aw_bits_lock),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_cache  (_mux_m_axi_aw_bits_cache),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_prot   (_mux_m_axi_aw_bits_prot),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_qos    (_mux_m_axi_aw_bits_qos),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_aw_bits_region (_mux_m_axi_aw_bits_region),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_w_ready        (_protocolConverter2_s_axi_w_ready),
    .s_axi_w_valid        (_mux_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_w_bits_data    (_mux_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_w_bits_strb    (_mux_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_w_bits_last    (_mux_m_axi_w_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_b_ready        (_mux_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:156:29
    .s_axi_b_valid        (_protocolConverter2_s_axi_b_valid),
    .s_axi_b_bits_resp    (_protocolConverter2_s_axi_b_bits_resp),
    .m_axi_ar_ready       (_bridge2_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_ar_valid       (_protocolConverter2_m_axi_ar_valid),
    .m_axi_ar_bits_id     (_protocolConverter2_m_axi_ar_bits_id),
    .m_axi_ar_bits_addr   (_protocolConverter2_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_protocolConverter2_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_protocolConverter2_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (_protocolConverter2_m_axi_ar_bits_burst),
    .m_axi_r_ready        (_protocolConverter2_m_axi_r_ready),
    .m_axi_r_valid        (_bridge2_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_r_bits_id      (_bridge2_s_axi_r_bits_id),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_r_bits_data    (_bridge2_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_r_bits_last    (_bridge2_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_aw_ready       (_bridge2_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_aw_valid       (_protocolConverter2_m_axi_aw_valid),
    .m_axi_aw_bits_id     (_protocolConverter2_m_axi_aw_bits_id),
    .m_axi_aw_bits_addr   (_protocolConverter2_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_protocolConverter2_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_protocolConverter2_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (_protocolConverter2_m_axi_aw_bits_burst),
    .m_axi_w_ready        (_bridge2_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_w_valid        (_protocolConverter2_m_axi_w_valid),
    .m_axi_w_bits_data    (_protocolConverter2_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_protocolConverter2_m_axi_w_bits_strb),
    .m_axi_b_ready        (_protocolConverter2_m_axi_b_ready),
    .m_axi_b_valid        (_bridge2_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_b_bits_id      (_bridge2_s_axi_b_bits_id),	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
    .m_axi_b_bits_resp    (_bridge2_s_axi_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:123:33
  );
  assign S_AXI_MEM_RRESP = 2'h0;	// src/test/scala/chext/amba/axi4/full/components/EmitProtocolConverter.scala:110:9, :122:33, :123:33, :165:44
endmodule

