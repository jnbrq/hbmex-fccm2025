// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// VCS coverage exclude_file
module mem_1024x128(	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  input  [9:0]   R0_addr,
  input          R0_en,
                 R0_clk,
  output [127:0] R0_data,
  input  [9:0]   R1_addr,
  input          R1_en,
                 R1_clk,
  output [127:0] R1_data,
  input  [9:0]   W0_addr,
  input          W0_en,
                 W0_clk,
  input  [127:0] W0_data,
  input  [15:0]  W0_mask,
  input  [9:0]   W1_addr,
  input          W1_en,
                 W1_clk,
  input  [127:0] W1_data,
  input  [15:0]  W1_mask
);

  reg [127:0] Memory[0:1023];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg         _R0_en_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg [9:0]   _R0_addr_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  always @(posedge R0_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R0_en_d0 <= R0_en;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R0_addr_d0 <= R0_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  reg         _R1_en_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg [9:0]   _R1_addr_d0;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  always @(posedge R1_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R1_en_d0 <= R1_en;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    _R1_addr_d0 <= R1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  always @(posedge W0_clk) begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[0])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h0 +: 8] <= W0_data[7:0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[1])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h8 +: 8] <= W0_data[15:8];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[2])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h10 +: 8] <= W0_data[23:16];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[3])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h18 +: 8] <= W0_data[31:24];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[4])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h20 +: 8] <= W0_data[39:32];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[5])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h28 +: 8] <= W0_data[47:40];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[6])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h30 +: 8] <= W0_data[55:48];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[7])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h38 +: 8] <= W0_data[63:56];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[8])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h40 +: 8] <= W0_data[71:64];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[9])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h48 +: 8] <= W0_data[79:72];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[10])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h50 +: 8] <= W0_data[87:80];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[11])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h58 +: 8] <= W0_data[95:88];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[12])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h60 +: 8] <= W0_data[103:96];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[13])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h68 +: 8] <= W0_data[111:104];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[14])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h70 +: 8] <= W0_data[119:112];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W0_en & W0_mask[15])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W0_addr][32'h78 +: 8] <= W0_data[127:120];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[0])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h0 +: 8] <= W1_data[7:0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[1])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h8 +: 8] <= W1_data[15:8];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[2])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h10 +: 8] <= W1_data[23:16];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[3])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h18 +: 8] <= W1_data[31:24];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[4])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h20 +: 8] <= W1_data[39:32];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[5])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h28 +: 8] <= W1_data[47:40];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[6])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h30 +: 8] <= W1_data[55:48];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[7])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h38 +: 8] <= W1_data[63:56];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[8])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h40 +: 8] <= W1_data[71:64];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[9])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h48 +: 8] <= W1_data[79:72];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[10])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h50 +: 8] <= W1_data[87:80];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[11])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h58 +: 8] <= W1_data[95:88];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[12])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h60 +: 8] <= W1_data[103:96];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[13])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h68 +: 8] <= W1_data[111:104];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[14])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h70 +: 8] <= W1_data[119:112];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    if (W1_en & W1_mask[15])	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      Memory[W1_addr][32'h78 +: 8] <= W1_data[127:120];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      reg [31:0] _RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    `endif // RANDOMIZE_REG_INIT
    reg [127:0] _RANDOM_MEM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    initial begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        for (logic [10:0] i = 11'h0; i < 11'h400; i += 11'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'h80; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
          end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
          Memory[i[9:0]] = _RANDOM_MEM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _RANDOM = {`RANDOM};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R0_en_d0 = _RANDOM[0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R0_addr_d0 = _RANDOM[10:1];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R1_en_d0 = _RANDOM[11];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
        _R1_addr_d0 = _RANDOM[21:12];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 128'bx;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  assign R1_data = _R1_en_d0 ? Memory[_R1_addr_d0] : 128'bx;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
endmodule

module ChiselSimpleDualPortMem(	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
  input          clock,	// <stdin>:682:11
  input  [9:0]   raw1_addr,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [127:0] raw1_dIn,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  output [127:0] raw1_dOut,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [15:0]  raw1_wstrb,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:143:16
  input  [9:0]   raw2_addr,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  input  [127:0] raw2_dIn,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  output [127:0] raw2_dOut,	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
  input  [15:0]  raw2_wstrb	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:146:16
);

  wire [127:0] _mem_ext_R0_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  wire [127:0] _mem_ext_R1_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
  reg  [9:0]   wrReqDelayed__r_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] wrReqDelayed__r_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [15:0]  wrReqDelayed__r_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [9:0]   wrReqDelayed__r_1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] wrReqDelayed__r_1_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [15:0]  wrReqDelayed__r_1_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [9:0]   wrReqDelayed__addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] wrReqDelayed__dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [15:0]  wrReqDelayed__wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] raw1_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [127:0] raw1_dOut_r_1;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [127:0] raw1_dOut_r_2;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [9:0]   wrReqDelayed__r_2_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] wrReqDelayed__r_2_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [15:0]  wrReqDelayed__r_2_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [9:0]   wrReqDelayed__r_3_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] wrReqDelayed__r_3_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [15:0]  wrReqDelayed__r_3_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [9:0]   wrReqDelayed__1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] wrReqDelayed__1_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [15:0]  wrReqDelayed__1_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  reg  [127:0] raw2_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [127:0] raw2_dOut_r_1;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  reg  [127:0] raw2_dOut_r_2;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  always @(posedge clock) begin	// <stdin>:682:11
    wrReqDelayed__r_addr <= raw1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_dIn <= raw1_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_wstrb <= raw1_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_1_addr <= wrReqDelayed__r_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_1_dIn <= wrReqDelayed__r_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_1_wstrb <= wrReqDelayed__r_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__addr <= wrReqDelayed__r_1_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__dIn <= wrReqDelayed__r_1_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__wstrb <= wrReqDelayed__r_1_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    raw1_dOut_r <= _mem_ext_R1_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16, :184:45
    raw1_dOut_r_1 <= raw1_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
    raw1_dOut_r_2 <= raw1_dOut_r_1;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
    wrReqDelayed__r_2_addr <= raw2_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_2_dIn <= raw2_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_2_wstrb <= raw2_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_3_addr <= wrReqDelayed__r_2_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_3_dIn <= wrReqDelayed__r_2_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__r_3_wstrb <= wrReqDelayed__r_2_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__1_addr <= wrReqDelayed__r_3_addr;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__1_dIn <= wrReqDelayed__r_3_dIn;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    wrReqDelayed__1_wstrb <= wrReqDelayed__r_3_wstrb;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    raw2_dOut_r <= _mem_ext_R0_data;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16, :184:45
    raw2_dOut_r_1 <= raw2_dOut_r;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
    raw2_dOut_r_2 <= raw2_dOut_r_1;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:184:45
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      automatic logic [31:0] _RANDOM[0:52];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        for (logic [5:0] i = 6'h0; i < 6'h35; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        end	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
        wrReqDelayed__r_addr = _RANDOM[6'h0][9:0];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_dIn =
          {_RANDOM[6'h0][31:10],
           _RANDOM[6'h1],
           _RANDOM[6'h2],
           _RANDOM[6'h3],
           _RANDOM[6'h4][9:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_wstrb = _RANDOM[6'h4][25:10];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_1_addr = {_RANDOM[6'h4][31:26], _RANDOM[6'h5][3:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_1_dIn =
          {_RANDOM[6'h5][31:4],
           _RANDOM[6'h6],
           _RANDOM[6'h7],
           _RANDOM[6'h8],
           _RANDOM[6'h9][3:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_1_wstrb = _RANDOM[6'h9][19:4];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__addr = _RANDOM[6'h9][29:20];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__dIn =
          {_RANDOM[6'h9][31:30],
           _RANDOM[6'hA],
           _RANDOM[6'hB],
           _RANDOM[6'hC],
           _RANDOM[6'hD][29:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__wstrb = {_RANDOM[6'hD][31:30], _RANDOM[6'hE][13:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        raw1_dOut_r =
          {_RANDOM[6'hE][31:14],
           _RANDOM[6'hF],
           _RANDOM[6'h10],
           _RANDOM[6'h11],
           _RANDOM[6'h12][13:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45, :184:45
        raw1_dOut_r_1 =
          {_RANDOM[6'h12][31:14],
           _RANDOM[6'h13],
           _RANDOM[6'h14],
           _RANDOM[6'h15],
           _RANDOM[6'h16][13:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
        raw1_dOut_r_2 =
          {_RANDOM[6'h16][31:14],
           _RANDOM[6'h17],
           _RANDOM[6'h18],
           _RANDOM[6'h19],
           _RANDOM[6'h1A][13:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
        wrReqDelayed__r_2_addr = _RANDOM[6'h1A][23:14];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45, :184:45
        wrReqDelayed__r_2_dIn =
          {_RANDOM[6'h1A][31:24],
           _RANDOM[6'h1B],
           _RANDOM[6'h1C],
           _RANDOM[6'h1D],
           _RANDOM[6'h1E][23:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45, :184:45
        wrReqDelayed__r_2_wstrb = {_RANDOM[6'h1E][31:24], _RANDOM[6'h1F][7:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_3_addr = _RANDOM[6'h1F][17:8];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_3_dIn =
          {_RANDOM[6'h1F][31:18],
           _RANDOM[6'h20],
           _RANDOM[6'h21],
           _RANDOM[6'h22],
           _RANDOM[6'h23][17:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__r_3_wstrb = {_RANDOM[6'h23][31:18], _RANDOM[6'h24][1:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__1_addr = _RANDOM[6'h24][11:2];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__1_dIn =
          {_RANDOM[6'h24][31:12],
           _RANDOM[6'h25],
           _RANDOM[6'h26],
           _RANDOM[6'h27],
           _RANDOM[6'h28][11:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        wrReqDelayed__1_wstrb = _RANDOM[6'h28][27:12];	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45
        raw2_dOut_r =
          {_RANDOM[6'h28][31:28],
           _RANDOM[6'h29],
           _RANDOM[6'h2A],
           _RANDOM[6'h2B],
           _RANDOM[6'h2C][27:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :171:45, :184:45
        raw2_dOut_r_1 =
          {_RANDOM[6'h2C][31:28],
           _RANDOM[6'h2D],
           _RANDOM[6'h2E],
           _RANDOM[6'h2F],
           _RANDOM[6'h30][27:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
        raw2_dOut_r_2 =
          {_RANDOM[6'h30][31:28],
           _RANDOM[6'h31],
           _RANDOM[6'h32],
           _RANDOM[6'h33],
           _RANDOM[6'h34][27:0]};	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  mem_1024x128 mem_ext (	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:154:16
    .R0_addr (raw2_addr),
    .R0_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .R1_addr (raw1_addr),
    .R1_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .R1_clk  (clock),
    .R1_data (_mem_ext_R1_data),
    .W0_addr (wrReqDelayed__1_addr),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    .W0_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .W0_clk  (clock),
    .W0_data (wrReqDelayed__1_dIn),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    .W0_mask (wrReqDelayed__1_wstrb),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    .W1_addr (wrReqDelayed__addr),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    .W1_en   (1'h1),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7
    .W1_clk  (clock),
    .W1_data (wrReqDelayed__dIn),	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
    .W1_mask (wrReqDelayed__wstrb)	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:171:45
  );
  assign raw1_dOut = raw1_dOut_r_2;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
  assign raw2_dOut = raw2_dOut_r_2;	// src/main/scala/chext/ip/memory/chisel/RawMemories.scala:134:7, :184:45
endmodule

// VCS coverage exclude_file
module ram_2x128(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input          R0_addr,
                 R0_en,
                 R0_clk,
  output [127:0] R0_data,
  input          W0_addr,
                 W0_en,
                 W0_clk,
  input  [127:0] W0_data
);

  reg [127:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [127:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'h80; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 128'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_UInt128(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input          clock,	// <stdin>:942:11, :1345:11
                 reset,	// <stdin>:943:11, :1346:11
  output         io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [127:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [127:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:942:11, :1345:11
    if (reset) begin	// <stdin>:942:11, :1345:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:942:11, :1345:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x128 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Queue2_UInt0(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:993:11, :1396:11
         reset,	// <stdin>:994:11, :1397:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  always @(posedge clock) begin	// <stdin>:993:11, :1396:11
    if (reset) begin	// <stdin>:993:11, :1396:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:993:11, :1396:11
      automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Counter(	// src/main/scala/chext/util/Counter.scala:6:7
  input  clock,	// <stdin>:1044:11, :1068:11, :1092:11, :1447:11, :1471:11, :1495:11
         reset,	// <stdin>:1045:11, :1069:11, :1093:11, :1448:11, :1472:11, :1496:11
         io_incEn,	// src/main/scala/chext/util/Counter.scala:7:14
         io_decEn,	// src/main/scala/chext/util/Counter.scala:7:14
  output io_empty,	// src/main/scala/chext/util/Counter.scala:7:14
         io_full	// src/main/scala/chext/util/Counter.scala:7:14
);

  reg [3:0] rCounter;	// src/main/scala/chext/util/Counter.scala:16:33
  always @(posedge clock) begin	// <stdin>:1044:11, :1068:11, :1092:11, :1447:11, :1471:11, :1495:11
    if (reset)	// <stdin>:1044:11, :1068:11, :1092:11, :1447:11, :1471:11, :1495:11
      rCounter <= 4'h0;	// src/main/scala/chext/util/Counter.scala:16:33
    else if (~(io_incEn & io_decEn)) begin	// src/main/scala/chext/util/Counter.scala:18:17
      if (io_incEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter + 4'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :20:28
      else if (io_decEn)	// src/main/scala/chext/util/Counter.scala:7:14
        rCounter <= rCounter - 4'h1;	// src/main/scala/chext/util/Counter.scala:16:33, :23:28
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/util/Counter.scala:6:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/util/Counter.scala:6:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/util/Counter.scala:6:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/util/Counter.scala:6:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/util/Counter.scala:6:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/util/Counter.scala:6:7
        rCounter = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chext/util/Counter.scala:6:7, :16:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/util/Counter.scala:6:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_empty = rCounter == 4'h0;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :26:24
  assign io_full = rCounter == 4'h8;	// src/main/scala/chext/util/Counter.scala:6:7, :16:33, :27:23
endmodule

module BasicReadWriteArbiter(	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
  input  clock,	// <stdin>:1116:11, :1519:11
         reset,	// <stdin>:1117:11, :1520:11
         rdReq,	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:27:17
         wrReq,	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:28:17
  output chooseRd	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:29:20
);

  reg       state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30
  reg [2:0] count;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
  always @(posedge clock) begin	// <stdin>:1116:11, :1519:11
    if (reset) begin	// <stdin>:1116:11, :1519:11
      state <= 1'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30
      count <= 3'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
    end
    else if (state) begin	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30
      automatic logic _GEN;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
      _GEN = ~wrReq | (&count);	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :32:30, :38:11, :45:18, :52:{10,18}, :55:40
      state <= ~_GEN & state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
      if (_GEN)	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
        count <= 3'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
      else	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :52:18, :55:40
        count <= count + 3'h1;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30, :48:24, :58:24
    end
    else begin	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30
      automatic logic _GEN_0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
      _GEN_0 = ~rdReq | (&count);	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :32:30, :38:11, :42:{10,18}, :45:{18,40}
      state <= _GEN_0 | state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
      if (_GEN_0)	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
        count <= 3'h0;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30
      else	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:31:30, :38:11, :42:18, :45:40
        count <= count + 3'h1;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:32:30, :48:24
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
        state = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30
        count = _RANDOM[/*Zero width*/ 1'b0][3:1];	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30, :32:30
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign chooseRd = ~state;	// src/main/scala/chext/ip/memory/ReadWriteArbiter.scala:21:7, :31:30, :34:21
endmodule

// VCS coverage exclude_file
module ram_8x128(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [2:0]   R0_addr,
  input          R0_en,
                 R0_clk,
  output [127:0] R0_data,
  input  [2:0]   W0_addr,
  input          W0_en,
                 W0_clk,
  input  [127:0] W0_data
);

  reg [127:0] Memory[0:7];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [127:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'h80; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[2:0]] = _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 128'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue8_UInt128(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input          clock,	// <stdin>:1158:11, :1561:11
                 reset,	// <stdin>:1159:11, :1562:11
                 io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [127:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input          io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output         io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [127:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire         io_enq_ready;	// src/main/scala/chisel3/util/Decoupled.scala:286:16, :306:{24,39}
  wire [127:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg  [2:0]   enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [2:0]   deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg          maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire         ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire         empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire         io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  wire         do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire         do_enq = ~(empty & io_deq_ready) & io_enq_ready & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :263:27, :286:16, :298:17, :301:{26,35}, :306:{24,39}
  assign io_enq_ready = io_deq_ready | ~(ptr_match & maybe_full);	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24, :286:{16,19}, :306:{24,39}
  always @(posedge clock) begin	// <stdin>:1158:11, :1561:11
    if (reset) begin	// <stdin>:1158:11, :1561:11
      enq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:1158:11, :1561:11
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
        enq_ptr_value <= enq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:264:27, :298:17, :300:14
        deq_ptr_value <= deq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :264:27, :276:{15,27}, :277:16, :298:17, :300:14, :301:{26,35}
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :263:27, :298:17, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][5:3];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_8x128 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits = empty ? io_enq_bits : _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :261:25, :293:17, :298:17, :299:19
endmodule

module ReadWriteToRawBridge(	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  input          clock,	// <stdin>:1218:11, :1621:11
                 reset,	// <stdin>:1219:11, :1622:11
  output         read_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input          read_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input  [9:0]   read_req_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  input          read_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output         read_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output [127:0] read_resp_bits,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:118:16
  output         write_req_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input          write_req_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [9:0]   write_req_bits_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [127:0] write_req_bits_data,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input  [15:0]  write_req_bits_strb,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  input          write_resp_ready,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  output         write_resp_valid,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:119:17
  output [9:0]   raw_addr,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  output [127:0] raw_dIn,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  input  [127:0] raw_dOut,	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
  output [15:0]  raw_wstrb	// src/main/scala/chext/ip/memory/ElasticBridges.scala:120:15
);

  wire         _read_dataQueue_io_deq_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire [127:0] _read_dataQueue_io_deq_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
  wire         _arbiter_arbiter_chooseRd;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:151:25
  wire         _ctrWriteResp_io_empty;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36
  wire         _ctrWrite_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32
  wire         _ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
  wire         _wrResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         _rdResp_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire         read_req_ready_0 = _arbiter_arbiter_chooseRd & ~_ctrRead_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31, :151:25, :156:37, src/main/scala/chext/util/Counter.scala:33:17
  wire         write_req_ready_0 = ~_arbiter_arbiter_chooseRd & ~_ctrWrite_io_full;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32, :151:25, :157:{20,38}, src/main/scala/chext/util/Counter.scala:33:17
  wire         _read_T_1 = read_req_ready_0 & read_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:156:37, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire         _write_T_1 = write_req_ready_0 & write_req_valid;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:157:38, src/main/scala/chisel3/util/Decoupled.scala:51:35
  reg          read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  reg          read_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  reg          read_r_2;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  reg          read_r_3;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
  wire         rdResp_valid =
    _rdResp_sinkBuffer_io_enq_ready & _read_dataQueue_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27, :194:23
  reg          write_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  reg          write_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  reg          write_r_2;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  reg          write_r_3;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  wire         wrResp_valid = _wrResp_sinkBuffer_io_enq_ready & ~_ctrWriteResp_io_empty;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36, :208:23, src/main/scala/chext/util/Counter.scala:30:17
  always @(posedge clock) begin	// <stdin>:1218:11, :1621:11
    read_r <= _read_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
    read_r_1 <= read_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    read_r_2 <= read_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    read_r_3 <= read_r_2;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    write_r <= _write_T_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23, src/main/scala/chisel3/util/Decoupled.scala:51:35
    write_r_1 <= write_r;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
    write_r_2 <= write_r_1;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
    write_r_3 <= write_r_2;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
        read_r = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        read_r_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        read_r_2 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        read_r_3 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23
        write_r = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23, :205:23
        write_r_1 = _RANDOM[/*Zero width*/ 1'b0][5];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23, :205:23
        write_r_2 = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23, :205:23
        write_r_3 = _RANDOM[/*Zero width*/ 1'b0][7];	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :190:23, :205:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_UInt128 rdResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_rdResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_enq_bits  (_read_dataQueue_io_deq_bits),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .io_deq_ready (read_resp_ready),
    .io_deq_valid (read_resp_valid),
    .io_deq_bits  (read_resp_bits)
  );
  Queue2_UInt0 wrResp_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_wrResp_sinkBuffer_io_enq_ready),
    .io_enq_valid (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_deq_ready (write_resp_ready),
    .io_deq_valid (write_resp_valid)
  );
  Counter ctrRead (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:128:31
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_read_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_empty (/* unused */),
    .io_full  (_ctrRead_io_full)
  );
  Counter ctrWrite (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:134:32
    .clock    (clock),
    .reset    (reset),
    .io_incEn (_write_T_1),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .io_decEn (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_empty (/* unused */),
    .io_full  (_ctrWrite_io_full)
  );
  Counter ctrWriteResp (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:138:36
    .clock    (clock),
    .reset    (reset),
    .io_incEn (write_r_3),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:205:23
    .io_decEn (wrResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:208:23
    .io_empty (_ctrWriteResp_io_empty),
    .io_full  (/* unused */)
  );
  BasicReadWriteArbiter arbiter_arbiter (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:151:25
    .clock    (clock),
    .reset    (reset),
    .rdReq    (read_req_valid),
    .wrReq    (write_req_valid),
    .chooseRd (_arbiter_arbiter_chooseRd)
  );
  Queue8_UInt128 read_dataQueue (	// src/main/scala/chext/ip/memory/ElasticBridges.scala:171:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_valid (read_r_3),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:190:23
    .io_enq_bits  (raw_dOut),
    .io_deq_ready (rdResp_valid),	// src/main/scala/chext/ip/memory/ElasticBridges.scala:194:23
    .io_deq_valid (_read_dataQueue_io_deq_valid),
    .io_deq_bits  (_read_dataQueue_io_deq_bits)
  );
  assign read_req_ready = read_req_ready_0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :156:37
  assign write_req_ready = write_req_ready_0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :157:38
  assign raw_addr = _write_T_1 ? write_req_bits_addr : read_req_bits;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :159:22, :163:22, :164:16, src/main/scala/chisel3/util/Decoupled.scala:51:35
  assign raw_dIn = write_req_bits_data;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7
  assign raw_wstrb = _write_T_1 ? write_req_bits_strb : 16'h0;	// src/main/scala/chext/ip/memory/ElasticBridges.scala:114:7, :146:13, :163:22, :166:17, src/main/scala/chisel3/util/Decoupled.scala:51:35
endmodule

module ChiselTrueDualPortRAM(	// src/main/scala/chext/ip/memory/RAM.scala:70:7
  input          clock,	// <stdin>:1748:11
                 reset,	// <stdin>:1749:11
  output         read1_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input          read1_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input  [9:0]   read1_req_bits,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  input          read1_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output         read1_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output [127:0] read1_resp_bits,	// src/main/scala/chext/ip/memory/RAM.scala:79:17
  output         read2_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input          read2_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input  [9:0]   read2_req_bits,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  input          read2_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output         read2_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output [127:0] read2_resp_bits,	// src/main/scala/chext/ip/memory/RAM.scala:80:17
  output         write1_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input          write1_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [9:0]   write1_req_bits_addr,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [127:0] write1_req_bits_data,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input  [15:0]  write1_req_bits_strb,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  input          write1_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
  output         write1_resp_valid,	// src/main/scala/chext/ip/memory/RAM.scala:81:18
                 write2_req_ready,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input          write2_req_valid,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input  [9:0]   write2_req_bits_addr,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input  [127:0] write2_req_bits_data,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input  [15:0]  write2_req_bits_strb,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  input          write2_resp_ready,	// src/main/scala/chext/ip/memory/RAM.scala:82:18
  output         write2_resp_valid	// src/main/scala/chext/ip/memory/RAM.scala:82:18
);

  wire [9:0]   _bridge2_raw_addr;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [127:0] _bridge2_raw_dIn;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [15:0]  _bridge2_raw_wstrb;	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  wire [9:0]   _bridge1_raw_addr;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [127:0] _bridge1_raw_dIn;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [15:0]  _bridge1_raw_wstrb;	// src/main/scala/chext/ip/memory/RAM.scala:89:31
  wire [127:0] _rawMem_raw1_dOut;	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  wire [127:0] _rawMem_raw2_dOut;	// src/main/scala/chext/ip/memory/RAM.scala:84:30
  ChiselSimpleDualPortMem rawMem (	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .clock      (clock),
    .raw1_addr  (_bridge1_raw_addr),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw1_dIn   (_bridge1_raw_dIn),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw1_dOut  (_rawMem_raw1_dOut),
    .raw1_wstrb (_bridge1_raw_wstrb),	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .raw2_addr  (_bridge2_raw_addr),	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .raw2_dIn   (_bridge2_raw_dIn),	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .raw2_dOut  (_rawMem_raw2_dOut),
    .raw2_wstrb (_bridge2_raw_wstrb)	// src/main/scala/chext/ip/memory/RAM.scala:90:31
  );
  ReadWriteToRawBridge bridge1 (	// src/main/scala/chext/ip/memory/RAM.scala:89:31
    .clock               (clock),
    .reset               (reset),
    .read_req_ready      (read1_req_ready),
    .read_req_valid      (read1_req_valid),
    .read_req_bits       (read1_req_bits),
    .read_resp_ready     (read1_resp_ready),
    .read_resp_valid     (read1_resp_valid),
    .read_resp_bits      (read1_resp_bits),
    .write_req_ready     (write1_req_ready),
    .write_req_valid     (write1_req_valid),
    .write_req_bits_addr (write1_req_bits_addr),
    .write_req_bits_data (write1_req_bits_data),
    .write_req_bits_strb (write1_req_bits_strb),
    .write_resp_ready    (write1_resp_ready),
    .write_resp_valid    (write1_resp_valid),
    .raw_addr            (_bridge1_raw_addr),
    .raw_dIn             (_bridge1_raw_dIn),
    .raw_dOut            (_rawMem_raw1_dOut),	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .raw_wstrb           (_bridge1_raw_wstrb)
  );
  ReadWriteToRawBridge bridge2 (	// src/main/scala/chext/ip/memory/RAM.scala:90:31
    .clock               (clock),
    .reset               (reset),
    .read_req_ready      (read2_req_ready),
    .read_req_valid      (read2_req_valid),
    .read_req_bits       (read2_req_bits),
    .read_resp_ready     (read2_resp_ready),
    .read_resp_valid     (read2_resp_valid),
    .read_resp_bits      (read2_resp_bits),
    .write_req_ready     (write2_req_ready),
    .write_req_valid     (write2_req_valid),
    .write_req_bits_addr (write2_req_bits_addr),
    .write_req_bits_data (write2_req_bits_data),
    .write_req_bits_strb (write2_req_bits_strb),
    .write_resp_ready    (write2_resp_ready),
    .write_resp_valid    (write2_resp_valid),
    .raw_addr            (_bridge2_raw_addr),
    .raw_dIn             (_bridge2_raw_dIn),
    .raw_dOut            (_rawMem_raw2_dOut),	// src/main/scala/chext/ip/memory/RAM.scala:84:30
    .raw_wstrb           (_bridge2_raw_wstrb)
  );
endmodule

// VCS coverage exclude_file
module ram_2x27(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [26:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [26:0] W0_data
);

  reg [26:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[26:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 27'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrLenSizeBurstBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:1784:11, :2092:11, :2850:11, :3158:11, :3916:11, :4404:11
                reset,	// <stdin>:1785:11, :2093:11, :2851:11, :3159:11, :3917:11, :4405:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [13:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [13:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0]  io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0]  io_deq_bits_burst	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [26:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:1784:11, :2092:11, :2850:11, :3158:11, :3916:11, :4404:11
    if (reset) begin	// <stdin>:1784:11, :2092:11, :2850:11, :3158:11, :3916:11, :4404:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:1784:11, :2092:11, :2850:11, :3158:11, :3916:11, :4404:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x27 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_burst, io_enq_bits_size, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[13:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[21:14];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[24:22];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[26:25];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x17(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [16:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [16:0] W0_data
);

  reg [16:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[16:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 17'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrSizeLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:1835:11, :2143:11, :2901:11, :3209:11, :3967:11, :4455:11
                reset,	// <stdin>:1836:11, :2144:11, :2902:11, :3210:11, :3968:11, :4456:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [13:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [13:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_size	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [16:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:1835:11, :2143:11, :2901:11, :3209:11, :3967:11, :4455:11
    if (reset) begin	// <stdin>:1835:11, :2143:11, :2901:11, :3209:11, :3967:11, :4455:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:1835:11, :2143:11, :2901:11, :3209:11, :3967:11, :4455:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x17 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_size, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[13:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[16:14];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module AddressGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
  input         clock,	// <stdin>:1886:11, :2194:11, :2952:11, :3260:11, :4018:11, :4506:11
                reset,	// <stdin>:1887:11, :2195:11, :2953:11, :3261:11, :4019:11, :4507:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [13:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
  output [13:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
  output [2:0]  sink_bits_size	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
);

  wire        _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _source__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [13:0] _source__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _source__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _source__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg  [13:0] addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25
  reg  [7:0]  ctr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24
  reg         generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
  wire        sink__valid =
    _source__sourceBuffer_io_deq_valid & _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22, src/main/scala/chext/elastic/Buffer.scala:93:32, :148:30
  wire        last = ctr == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24, :76:22
  wire [20:0] _result_addr_T = {7'h0, addr} << _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :87:35, :105:31, src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        last_1 = _source__sourceBuffer_io_deq_bits_len == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:76:22, :113:30, src/main/scala/chext/elastic/Buffer.scala:93:32
  always @(posedge clock) begin	// <stdin>:1886:11, :2194:11, :2952:11, :3260:11, :4018:11, :4506:11
    if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22
      if (generating) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
        if (~last) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :76:22, :78:18, :79:20
          if (_source__sourceBuffer_io_deq_bits_burst == 2'h1)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:84:28, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <= addr + 14'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :85:24
          else if (_source__sourceBuffer_io_deq_bits_burst == 2'h2)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:86:34, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <=
              addr & {6'h3F, ~_source__sourceBuffer_io_deq_bits_len} | addr + 14'h1
              & {6'h0, _source__sourceBuffer_io_deq_bits_len};	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :85:24, :87:35, :88:23, :89:{25,34,44,51}, src/main/scala/chext/elastic/Buffer.scala:93:32
          ctr <= ctr - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24, :82:20
        end
      end
      else if (~last_1) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :113:30, :115:18, :118:20
        addr <=
          (_source__sourceBuffer_io_deq_bits_addr
           >> _source__sourceBuffer_io_deq_bits_size) + 14'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :85:24, :119:{32,49}, src/main/scala/chext/elastic/Buffer.scala:93:32
        ctr <= _source__sourceBuffer_io_deq_bits_len - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24, :120:28, src/main/scala/chext/elastic/Buffer.scala:93:32
      end
    end
    if (reset)	// <stdin>:1886:11, :2194:11, :2952:11, :3260:11, :4018:11, :4506:11
      generating <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :69:35
    else if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22
      if (generating)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
        generating <= ~last & generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :76:22, :78:18, :79:20
      else	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
        generating <= ~last_1 | generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :113:30, :115:18, :118:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        addr = _RANDOM[/*Zero width*/ 1'b0][13:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :63:25
        ctr = _RANDOM[/*Zero width*/ 1'b0][21:14];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :63:25, :66:24
        generating = _RANDOM[/*Zero width*/ 1'b0][22];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :63:25, :69:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddrLenSizeBurstBundle source__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (source_ready),
    .io_enq_valid      (source_valid),
    .io_enq_bits_addr  (source_bits_addr),
    .io_enq_bits_len   (source_bits_len),
    .io_enq_bits_size  (source_bits_size),
    .io_enq_bits_burst (source_bits_burst),
    .io_deq_ready      (sink__valid & (generating ? last : last_1)),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :74:{22,38}, :75:22, :76:22, :78:18, :113:30, :115:18, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid      (_source__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr  (_source__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_source__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size  (_source__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst (_source__sourceBuffer_io_deq_bits_burst)
  );
  Queue2_AddrSizeLastBundle sink__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sink__sinkBuffer_io_enq_ready),
    .io_enq_valid     (sink__valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22
    .io_enq_bits_addr
      (~generating | _source__sourceBuffer_io_deq_bits_burst == 2'h0
         ? _source__sourceBuffer_io_deq_bits_addr
         : _result_addr_T[13:0]),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :75:22, :93:{26,47}, :105:{23,31}, src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_enq_bits_size (_source__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_last (generating ? last : last_1),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :75:22, :76:22, :93:47, :113:30, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_deq_ready     (sink_ready),
    .io_deq_valid     (sink_valid),
    .io_deq_bits_addr (sink_bits_addr),
    .io_deq_bits_size (sink_bits_size)
  );
endmodule

// VCS coverage exclude_file
module ram_4x1(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [1:0] R0_addr,
  input        R0_en,
               R0_clk,
  output       R0_data,
  input  [1:0] W0_addr,
  input        W0_en,
               W0_clk,
               W0_data
);

  reg Memory[0:3];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[1:0]] = _RANDOM_MEM[0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue4_IdLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:1990:11, :2427:11, :3056:11, :3493:11
         reset,	// <stdin>:1991:11, :2428:11, :3057:11, :3494:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [1:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [1:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:1990:11, :2427:11, :3056:11, :3493:11
    if (reset) begin	// <stdin>:1990:11, :2427:11, :3056:11, :3493:11
      enq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 2'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:1990:11, :2427:11, :3056:11, :3493:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][1:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_4x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_last),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_last)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

// VCS coverage exclude_file
module ram_2x1(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  R0_addr,
         R0_en,
         R0_clk,
  output R0_data,
  input  W0_addr,
         W0_en,
         W0_clk,
         W0_data
);

  reg Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 1'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_IdLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:2041:11, :2478:11, :3107:11, :3544:11
         reset,	// <stdin>:2042:11, :2479:11, :3108:11, :3545:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits_last	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:2041:11, :2478:11, :3107:11, :3544:11
    if (reset) begin	// <stdin>:2041:11, :2478:11, :3107:11, :3544:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:2041:11, :2478:11, :3107:11, :3544:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_last),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_last)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module StrobeGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:135:7
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:139:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:139:18
  input  [13:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:139:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:139:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:16
  output [13:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:16
  output [2:0]  sink_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:16
  output [15:0] sink_bits_strb	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:140:16
);

  wire [10:0] _upperByteIndex_T_4 =
    ({7'h0, (source_bits_addr[3:0] >> source_bits_size) + 4'h1} << source_bits_size)
    - 11'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:147:25, :153:{34,42,55,67}, :166:47
  assign source_ready = sink_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:135:7
  assign sink_valid = source_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:135:7
  assign sink_bits_addr = source_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:135:7
  assign sink_bits_size = source_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:135:7
  assign sink_bits_strb =
    {_upperByteIndex_T_4 > 11'hE,
     _upperByteIndex_T_4 > 11'hD & source_bits_addr[3:0] != 4'hF,
     _upperByteIndex_T_4 > 11'hC & source_bits_addr[3:1] != 3'h7,
     _upperByteIndex_T_4 > 11'hB & source_bits_addr[3:0] < 4'hD,
     _upperByteIndex_T_4 > 11'hA & source_bits_addr[3:2] != 2'h3,
     _upperByteIndex_T_4 > 11'h9 & source_bits_addr[3:0] < 4'hB,
     _upperByteIndex_T_4 > 11'h8 & source_bits_addr[3:0] < 4'hA,
     (|(_upperByteIndex_T_4[10:3])) & source_bits_addr[3:0] < 4'h9,
     _upperByteIndex_T_4 > 11'h6 & ~(source_bits_addr[3]),
     _upperByteIndex_T_4 > 11'h5 & source_bits_addr[3:0] < 4'h7,
     _upperByteIndex_T_4 > 11'h4 & source_bits_addr[3:0] < 4'h6,
     (|(_upperByteIndex_T_4[10:2])) & source_bits_addr[3:0] < 4'h5,
     _upperByteIndex_T_4 > 11'h2 & source_bits_addr[3:0] < 4'h4,
     (|(_upperByteIndex_T_4[10:1])) & source_bits_addr[3:0] < 4'h3,
     (|_upperByteIndex_T_4) & source_bits_addr[3:0] < 4'h2,
     source_bits_addr[3:0] == 4'h0};	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:135:7, :147:25, :153:67, :166:{18,37,47}, :168:10
endmodule

module AddressStrobeGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:173:7
  input         clock,	// <stdin>:2400:11, :3466:11, :4224:11, :4712:11
                reset,	// <stdin>:2401:11, :3467:11, :4225:11, :4713:11
  output        source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:180:18
  input         source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:180:18
  input  [13:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:180:18
  input  [7:0]  source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:180:18
  input  [2:0]  source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:180:18
  input  [1:0]  source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:180:18
  input         sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:16
  output        sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:16
  output [13:0] sink_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:16
  output [2:0]  sink_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:16
  output [15:0] sink_bits_strb	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:181:16
);

  wire        _strobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:39
  wire        _addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
  wire [13:0] _addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
  wire [2:0]  _addressGenerator_sink_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
  AddressGenerator addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (source_ready),
    .source_valid      (source_valid),
    .source_bits_addr  (source_bits_addr),
    .source_bits_len   (source_bits_len),
    .source_bits_size  (source_bits_size),
    .source_bits_burst (source_bits_burst),
    .sink_ready        (_strobeGenerator_source_ready),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:39
    .sink_valid        (_addressGenerator_sink_valid),
    .sink_bits_addr    (_addressGenerator_sink_bits_addr),
    .sink_bits_size    (_addressGenerator_sink_bits_size)
  );
  StrobeGenerator strobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:175:39
    .source_ready     (_strobeGenerator_source_ready),
    .source_valid     (_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
    .source_bits_addr (_addressGenerator_sink_bits_addr),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
    .source_bits_size (_addressGenerator_sink_bits_size),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:174:40
    .sink_ready       (sink_ready),
    .sink_valid       (sink_valid),
    .sink_bits_addr   (sink_bits_addr),
    .sink_bits_size   (sink_bits_size),
    .sink_bits_strb   (sink_bits_strb)
  );
endmodule

// VCS coverage exclude_file
module ram_2x2(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input        R0_addr,
               R0_en,
               R0_clk,
  output [1:0] R0_data,
  input        W0_addr,
               W0_en,
               W0_clk,
  input  [1:0] W0_data
);

  reg [1:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 2'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_WriteResponseChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:2529:11, :3595:11, :4892:11
               reset,	// <stdin>:2530:11, :3596:11, :4893:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_resp,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_resp	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:2529:11, :3595:11, :4892:11
    if (reset) begin	// <stdin>:2529:11, :3595:11, :4892:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:2529:11, :3595:11, :4892:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x2 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_resp),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_resp)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Axi4FullToReadWriteBridge(	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  input          clock,	// <stdin>:2580:11, :3646:11
                 reset,	// <stdin>:2581:11, :3647:11
  output         s_axi_ar_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input          s_axi_ar_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [13:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]   s_axi_ar_bits_len,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]   s_axi_ar_bits_burst,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input          s_axi_r_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output         s_axi_r_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [127:0] s_axi_r_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
                 s_axi_aw_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input          s_axi_aw_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [13:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [7:0]   s_axi_aw_bits_len,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [1:0]   s_axi_aw_bits_burst,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output         s_axi_w_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input          s_axi_w_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [127:0] s_axi_w_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input  [15:0]  s_axi_w_bits_strb,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input          s_axi_b_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output         s_axi_b_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  output [1:0]   s_axi_b_bits_resp,	// src/main/scala/chext/ip/memory/AxiBridges.scala:28:17
  input          read_req_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output         read_req_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output [9:0]   read_req_bits,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  output         read_resp_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input          read_resp_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input  [127:0] read_resp_bits,	// src/main/scala/chext/ip/memory/AxiBridges.scala:29:16
  input          write_req_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output         write_req_valid,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [9:0]   write_req_bits_addr,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [127:0] write_req_bits_data,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output [15:0]  write_req_bits_strb,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  output         write_resp_ready,	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
  input          write_resp_valid	// src/main/scala/chext/ip/memory/AxiBridges.scala:30:17
);

  wire        write_idLastJoined_ready;	// src/main/scala/chext/elastic/Arrival.scala:65:28
  wire        _write_fork1_eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] write_fork1_replicate1_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_fork1_replicate1_len_T;	// src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
  wire        _read_fork1_eagerFork_result_valid_T;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] read_fork1_replicate1_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_fork1_replicate1_len_T;	// src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
  wire        _write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_fork1_replicate1_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_fork1_replicate1_sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _write_addressStrobeGenerator_source_ready;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire [13:0] _write_addressStrobeGenerator_sink_bits_addr;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire [15:0] _write_addressStrobeGenerator_sink_bits_strb;	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_fork1_replicate1_sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _read_addressGenerator_source_ready;	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  wire [13:0] _read_addressGenerator_sink_bits_addr;	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  reg         read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_fork1_replicate1_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_fork1_replicate1_last =
    read_fork1_replicate1_idx == {7'h0, _read_fork1_replicate1_len_T} - 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9, src/main/scala/chext/ip/memory/AxiBridges.scala:43:{17,27}
  assign _read_fork1_replicate1_len_T = {1'h0, s_axi_ar_bits_len} + 9'h1;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :43:27
  wire        _read_fork1_replicate1_T =
    s_axi_ar_valid & _read_fork1_eagerFork_result_valid_T
    & _read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_fork1_replicate1_T_2 = _read_fork1_replicate1_len_T == 9'h1;	// src/main/scala/chext/elastic/Replicate.scala:50:22, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
  assign read_fork1_replicate1_idx =
    read_fork1_replicate1_generating_ ? read_fork1_replicate1_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _read_fork1_eagerFork_result_valid_T = ~read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        read_fork1_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_fork1_replicate1_T
    & (read_fork1_replicate1_generating_
         ? read_fork1_replicate1_last
         : ~(|_read_fork1_replicate1_len_T) | _read_fork1_replicate1_T_2)
    | read_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        read_fork1_eagerFork_s_axi_ar_ready_qual1_1 =
    _read_addressGenerator_source_ready | read_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
  wire        s_axi_ar_ready_0 =
    read_fork1_eagerFork_s_axi_ar_ready_qual1_0
    & read_fork1_eagerFork_s_axi_ar_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        s_axi_r_valid_0 =
    read_resp_valid & _read_fork1_replicate1_sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        read_resp_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_fork1_replicate1_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_fork1_replicate1_last =
    write_fork1_replicate1_idx == {7'h0, _write_fork1_replicate1_len_T} - 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9, src/main/scala/chext/ip/memory/AxiBridges.scala:43:17, :89:27
  assign _write_fork1_replicate1_len_T = {1'h0, s_axi_aw_bits_len} + 9'h1;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :43:27, :89:27
  wire        _write_fork1_replicate1_T =
    s_axi_aw_valid & _write_fork1_eagerFork_result_valid_T
    & _write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_fork1_replicate1_T_2 = _write_fork1_replicate1_len_T == 9'h1;	// src/main/scala/chext/elastic/Replicate.scala:50:22, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27, :89:27
  assign write_fork1_replicate1_idx =
    write_fork1_replicate1_generating_ ? write_fork1_replicate1_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _write_fork1_eagerFork_result_valid_T = ~write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        write_fork1_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_fork1_replicate1_T
    & (write_fork1_replicate1_generating_
         ? write_fork1_replicate1_last
         : ~(|_write_fork1_replicate1_len_T) | _write_fork1_replicate1_T_2)
    | write_fork1_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        write_fork1_eagerFork_s_axi_aw_ready_qual1_1 =
    _write_addressStrobeGenerator_source_ready | write_fork1_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        s_axi_aw_ready_0 =
    write_fork1_eagerFork_s_axi_aw_ready_qual1_0
    & write_fork1_eagerFork_s_axi_aw_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        write_req_valid_0 =
    _write_addressStrobeGenerator_sink_valid & s_axi_w_valid;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
  wire        s_axi_w_ready_0 = write_req_ready & write_req_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  wire        write_idLastJoined_valid =
    _write_fork1_replicate1_sinkBuffer_io_deq_valid & write_resp_valid;	// src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_resp_ready_0 = write_idLastJoined_ready & write_idLastJoined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  assign write_idLastJoined_ready =
    _write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready & write_idLastJoined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  always @(posedge clock) begin	// <stdin>:2580:11, :3646:11
    if (reset) begin	// <stdin>:2580:11, :3646:11
      read_fork1_replicate1_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      read_fork1_replicate1_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      read_fork1_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      read_fork1_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_replicate1_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_replicate1_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_fork1_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      write_fork1_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    end
    else begin	// <stdin>:2580:11, :3646:11
      if (_read_fork1_replicate1_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_fork1_replicate1_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_fork1_replicate1_generating_ <=
            ~read_fork1_replicate1_last & read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_fork1_replicate1_idx_ <= read_fork1_replicate1_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN =
            ~(|_read_fork1_replicate1_len_T) | _read_fork1_replicate1_T_2;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
          read_fork1_replicate1_generating_ <= ~_GEN | read_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_fork1_replicate1_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      read_fork1_eagerFork_regs_0 <=
        read_fork1_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_fork1_eagerFork_regs_1 <=
        read_fork1_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_write_fork1_replicate1_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_fork1_replicate1_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_fork1_replicate1_generating_ <=
            ~write_fork1_replicate1_last & write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_fork1_replicate1_idx_ <= write_fork1_replicate1_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_0 =
            ~(|_write_fork1_replicate1_len_T) | _write_fork1_replicate1_T_2;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
          write_fork1_replicate1_generating_ <=
            ~_GEN_0 | write_fork1_replicate1_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_0)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_fork1_replicate1_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      write_fork1_eagerFork_regs_0 <=
        write_fork1_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_fork1_eagerFork_regs_1 <=
        write_fork1_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      automatic logic [31:0] _RANDOM[0:1];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        end	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_replicate1_generating_ = _RANDOM[1'h0][0];	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_replicate1_idx_ = _RANDOM[1'h0][16:1];	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_eagerFork_regs_0 = _RANDOM[1'h0][17];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        read_fork1_eagerFork_regs_1 = _RANDOM[1'h0][18];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_replicate1_generating_ = _RANDOM[1'h0][19];	// src/main/scala/chext/elastic/Replicate.scala:20:36, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_replicate1_idx_ = {_RANDOM[1'h0][31:20], _RANDOM[1'h1][3:0]};	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_eagerFork_regs_0 = _RANDOM[1'h1][4];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
        write_fork1_eagerFork_regs_1 = _RANDOM[1'h1][5];	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressGenerator read_addressGenerator (	// src/main/scala/chext/ip/memory/AxiBridges.scala:33:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_fork1_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr),
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (read_req_ready),
    .sink_valid        (read_req_valid),
    .sink_bits_addr    (_read_addressGenerator_sink_bits_addr),
    .sink_bits_size    (/* unused */)
  );
  Queue4_IdLastBundle read_fork1_replicate1_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_fork1_replicate1_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_last (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready     (read_resp_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid     (_read_fork1_replicate1_sinkBuffer_io_deq_valid),
    .io_deq_bits_last (s_axi_r_bits_last)
  );
  Queue2_IdLastBundle read_fork1_replicate1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (_read_fork1_replicate1_T
       & (read_fork1_replicate1_generating_ | (|_read_fork1_replicate1_len_T))),	// src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}, src/main/scala/chext/ip/memory/AxiBridges.scala:43:27
    .io_enq_bits_last (read_fork1_replicate1_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready     (_read_fork1_replicate1_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_last (_read_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last)
  );
  AddressStrobeGenerator write_addressStrobeGenerator (	// src/main/scala/chext/ip/memory/AxiBridges.scala:81:40
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_fork1_eagerFork_regs_1),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr),
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (s_axi_w_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_write_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (_write_addressStrobeGenerator_sink_bits_addr),
    .sink_bits_size    (/* unused */),
    .sink_bits_strb    (_write_addressStrobeGenerator_sink_bits_strb)
  );
  Queue4_IdLastBundle write_fork1_replicate1_sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_fork1_replicate1_sinkBuffer_io_enq_ready),
    .io_enq_valid     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_last (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_deq_ready     (write_resp_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid     (_write_fork1_replicate1_sinkBuffer_io_deq_valid),
    .io_deq_bits_last (_write_fork1_replicate1_sinkBuffer_io_deq_bits_last)
  );
  Queue2_IdLastBundle write_fork1_replicate1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (_write_fork1_replicate1_T
       & (write_fork1_replicate1_generating_ | (|_write_fork1_replicate1_len_T))),	// src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}, src/main/scala/chext/ip/memory/AxiBridges.scala:89:27
    .io_enq_bits_last (write_fork1_replicate1_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready     (_write_fork1_replicate1_sinkBuffer_io_enq_ready),	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .io_deq_valid     (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_last (_write_fork1_replicate1_sinkBuffered__sinkBuffer_io_deq_bits_last)
  );
  Queue2_WriteResponseChannel write_arrival1_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_arrival1_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid
      (write_idLastJoined_ready & _write_fork1_replicate1_sinkBuffer_io_deq_bits_last),	// src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}, src/main/scala/chext/elastic/Buffer.scala:148:30, src/main/scala/chext/ip/memory/AxiBridges.scala:130:23
    .io_enq_bits_resp (2'h0),	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_resp (s_axi_b_bits_resp)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:87:23, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_r_bits_data = read_resp_bits;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:87:23, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign s_axi_w_ready = s_axi_w_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign read_req_bits = _read_addressGenerator_sink_bits_addr[13:4];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :33:34, :62:24
  assign read_resp_ready = read_resp_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_valid = write_req_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_bits_addr = _write_addressStrobeGenerator_sink_bits_addr[13:4];	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :81:40, :111:37
  assign write_req_bits_data = s_axi_w_bits_data;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
  assign write_req_bits_strb =
    _write_addressStrobeGenerator_sink_bits_strb & s_axi_w_bits_strb;	// src/main/scala/chext/ip/memory/AxiBridges.scala:20:7, :81:40, :113:37
  assign write_resp_ready = write_resp_ready_0;	// src/main/scala/chext/elastic/Join.scala:42:29, src/main/scala/chext/ip/memory/AxiBridges.scala:20:7
endmodule

// VCS coverage exclude_file
module ram_8x8(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [2:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [2:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data
);

  reg [7:0] Memory[0:7];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[2:0]] = _RANDOM_MEM[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue8_UInt8(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:4251:11, :4739:11
               reset,	// <stdin>:4252:11, :4740:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [2:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [2:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:4251:11, :4739:11
    if (reset) begin	// <stdin>:4251:11, :4739:11
      enq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 3'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4251:11, :4739:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 3'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][2:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][5:3];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][6];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_8x8 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

// VCS coverage exclude_file
module ram_2x16(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [15:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [15:0] W0_data
);

  reg [15:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[15:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 16'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_ReadAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:4302:11
                reset,	// <stdin>:4303:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [13:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [15:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:4302:11
    if (reset) begin	// <stdin>:4302:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4302:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x16 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_lock = _ram_ext_R0_data[0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[4:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[7:5];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[11:8];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[15:12];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Queue2_Bool(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input  clock,	// <stdin>:4353:11, :4841:11
         reset,	// <stdin>:4354:11, :4842:11
  output io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
         io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:4353:11, :4841:11
    if (reset) begin	// <stdin>:4353:11, :4841:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4353:11, :4841:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x1 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module Queue2_WriteAddressChannel(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// <stdin>:4790:11
                reset,	// <stdin>:4791:11
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [13:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0]  io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0]  io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0]  io_enq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [3:0]  io_enq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_region,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_lock,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_cache,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0]  io_deq_bits_prot,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [3:0]  io_deq_bits_qos,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_region	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [15:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:4790:11
    if (reset) begin	// <stdin>:4790:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:4790:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x16 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_region,
        io_enq_bits_qos,
        io_enq_bits_prot,
        io_enq_bits_cache,
        io_enq_bits_lock})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_lock = _ram_ext_R0_data[0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_cache = _ram_ext_R0_data[4:1];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_prot = _ram_ext_R0_data[7:5];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_qos = _ram_ext_R0_data[11:8];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_region = _ram_ext_R0_data[15:12];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

module Unburst(	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  input          clock,	// <stdin>:4943:11
                 reset,	// <stdin>:4944:11
  output         s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [13:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [7:0]   s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [1:0]   s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [3:0]   s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [2:0]   s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [3:0]   s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
                 s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output         s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output [127:0] s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output [1:0]   s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
                 s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [13:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [7:0]   s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [1:0]   s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [3:0]   s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [2:0]   s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [3:0]   s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
                 s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output         s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [127:0] s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input  [15:0]  s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
                 s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output         s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  output [1:0]   s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:31:17
  input          m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [13:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [2:0]   m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [1:0]   m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [3:0]   m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [2:0]   m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [3:0]   m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
                 m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input          m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input  [127:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input  [1:0]   m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
                 m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [13:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [2:0]   m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [1:0]   m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [3:0]   m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [2:0]   m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [3:0]   m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
                 m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input          m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [127:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output [15:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
                 m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input          m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
  input  [1:0]   m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:32:17
);

  wire        write_joined_ready;	// src/main/scala/chext/elastic/Arrival.scala:65:28
  wire [15:0] write_idx_1;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_len_T_1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:185:21
  wire        _write_eagerFork_result_valid_T_2;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] write_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _write_len_T;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:143:29
  wire [15:0] read_r_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_r_len_T;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:97:21
  wire        _read_ar_eagerFork_result_valid_T_2;	// src/main/scala/chext/elastic/Fork.scala:79:41
  wire [15:0] read_ar_idx;	// src/main/scala/chext/elastic/Replicate.scala:61:23, :62:9, :64:9
  wire [8:0]  _read_ar_len_T;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29
  wire        _write_sinkBuffered__sinkBuffer_2_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_1_io_deq_bits;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _write_lenQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:123:26
  wire        _write_lenQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:123:26
  wire [7:0]  _write_lenQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:123:26
  wire        _write_addressStrobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:119:13
  wire        _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:119:13
  wire        _read_r_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_r_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_ar_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_ar_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30
  wire        _read_lenQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26
  wire        _read_lenQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26
  wire [7:0]  _read_lenQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26
  wire        _read_addressStrobeGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:39:13
  wire        _read_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:39:13
  reg         read_ar_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_ar_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_ar_last = read_ar_idx == {7'h0, _read_ar_len_T} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:{19,29}, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _read_ar_len_T = {1'h0, s_axi_ar_bits_len} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _read_ar_T =
    s_axi_ar_valid & _read_ar_eagerFork_result_valid_T_2
    & _read_ar_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_ar_T_2 = _read_ar_len_T == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign read_ar_idx = read_ar_generating_ ? read_ar_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         read_ar_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         read_ar_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _read_ar_eagerFork_result_valid_T_2 = ~read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        read_ar_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_addressStrobeGenerator_source_ready | read_ar_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:39:13, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        read_ar_eagerFork_s_axi_ar_ready_qual1_1 =
    _read_ar_T & (read_ar_generating_ ? read_ar_last : ~(|_read_ar_len_T) | _read_ar_T_2)
    | read_ar_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        read_ar_eagerFork_s_axi_ar_ready_qual1_2 =
    _read_lenQueue_io_enq_ready | read_ar_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        s_axi_ar_ready_0 =
    read_ar_eagerFork_s_axi_ar_ready_qual1_0 & read_ar_eagerFork_s_axi_ar_ready_qual1_1
    & read_ar_eagerFork_s_axi_ar_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        m_axi_ar_valid_0 =
    _read_ar_sinkBuffered__sinkBuffer_io_deq_valid
    & _read_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:39:13, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        read_arReplicated_ready = m_axi_ar_ready & m_axi_ar_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         read_r_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] read_r_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        read_r_last = read_r_idx == {7'h0, _read_r_len_T} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:19, :97:21, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _read_r_len_T = {1'h0, _read_lenQueue_io_deq_bits} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26, :63:29, :97:21, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _read_r_T =
    _read_lenQueue_io_deq_valid & _read_r_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _read_r_T_2 = _read_r_len_T == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, :97:21, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign read_r_idx = read_r_generating_ ? read_r_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  wire        s_axi_r_valid_0 =
    m_axi_r_valid & _read_r_sinkBuffered__sinkBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        m_axi_r_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_idx_;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_last = write_idx == {7'h0, _write_len_T} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:19, :143:29, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _write_len_T = {1'h0, s_axi_aw_bits_len} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, :143:29, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _write_T =
    s_axi_aw_valid & _write_eagerFork_result_valid_T_2
    & _write_sinkBuffered__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Fork.scala:79:41, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_T_2 = _write_len_T == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, :143:29, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign write_idx = write_generating_ ? write_idx_ : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  reg         write_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg         write_eagerFork_regs_2;	// src/main/scala/chext/elastic/Fork.scala:75:25
  assign _write_eagerFork_result_valid_T_2 = ~write_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:41
  wire        write_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_addressStrobeGenerator_source_ready | write_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:119:13, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        write_eagerFork_s_axi_aw_ready_qual1_1 =
    _write_T & (write_generating_ ? write_last : ~(|_write_len_T) | _write_T_2)
    | write_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:143:29, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
  wire        write_eagerFork_s_axi_aw_ready_qual1_2 =
    _write_lenQueue_io_enq_ready | write_eagerFork_regs_2;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:123:26, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire        s_axi_aw_ready_0 =
    write_eagerFork_s_axi_aw_ready_qual1_0 & write_eagerFork_s_axi_aw_ready_qual1_1
    & write_eagerFork_s_axi_aw_ready_qual1_2;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire        write_mkJoin_allValid =
    _write_sinkBuffered__sinkBuffer_io_deq_valid
    & _write_addressStrobeGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:119:13, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_mkJoin_fire = m_axi_aw_ready & write_mkJoin_allValid;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg         write_generating__1;	// src/main/scala/chext/elastic/Replicate.scala:20:36
  reg  [15:0] write_idx__1;	// src/main/scala/chext/elastic/Replicate.scala:21:29
  wire        write_last_1 = write_idx_1 == {7'h0, _write_len_T_1} - 16'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:19, :185:21, src/main/scala/chext/elastic/Replicate.scala:27:{29,38}, :61:23, :62:9, :64:9
  assign _write_len_T_1 = {1'h0, _write_lenQueue_io_deq_bits} + 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, :123:26, :185:21, src/main/scala/chext/elastic/Replicate.scala:20:36
  wire        _write_T_4 =
    _write_lenQueue_io_deq_valid & _write_sinkBuffered__sinkBuffer_1_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:123:26, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Replicate.scala:36:21
  wire        _write_T_6 = _write_len_T_1 == 9'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, :185:21, src/main/scala/chext/elastic/Replicate.scala:50:22
  assign write_idx_1 = write_generating__1 ? write_idx__1 : 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29, :61:23, :62:9, :64:9
  wire        write_joined_valid =
    m_axi_b_valid & _write_sinkBuffered__sinkBuffer_1_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        write_lastReplicated_ready = write_joined_ready & write_joined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg  [1:0]  write_respReg;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:192:28
  assign write_joined_ready =
    _write_sinkBuffered__sinkBuffer_2_io_enq_ready & write_joined_valid;	// src/main/scala/chext/elastic/Arrival.scala:65:28, src/main/scala/chext/elastic/Buffer.scala:131:30, src/main/scala/chext/elastic/Join.scala:41:55
  wire        _write_T_9 = m_axi_b_bits_resp > write_respReg;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:192:28, :199:27
  always @(posedge clock) begin	// <stdin>:4943:11
    if (reset) begin	// <stdin>:4943:11
      read_ar_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      read_ar_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      read_ar_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      read_ar_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      read_ar_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      read_r_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      read_r_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_generating_ <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      write_idx_ <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      write_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      write_eagerFork_regs_2 <= 1'h0;	// src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
      write_generating__1 <= 1'h0;	// src/main/scala/chext/elastic/Replicate.scala:20:36
      write_idx__1 <= 16'h0;	// src/main/scala/chext/elastic/Replicate.scala:21:29
      write_respReg <= 2'h0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, :192:28
    end
    else begin	// <stdin>:4943:11
      if (_read_ar_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_ar_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_ar_generating_ <= ~read_ar_last & read_ar_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_ar_idx_ <= read_ar_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN = ~(|_read_ar_len_T) | _read_ar_T_2;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          read_ar_generating_ <= ~_GEN | read_ar_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_ar_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      read_ar_eagerFork_regs_0 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_1 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_2 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_2 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_read_r_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (read_r_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          read_r_generating_ <= ~read_r_last & read_r_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          read_r_idx_ <= read_r_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_0 = ~(|_read_r_len_T) | _read_r_T_2;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:97:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          read_r_generating_ <= ~_GEN_0 | read_r_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_0)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            read_r_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      if (_write_T) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_generating_) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_generating_ <= ~write_last & write_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_idx_ <= write_idx_ + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_1 = ~(|_write_len_T) | _write_T_2;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:143:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          write_generating_ <= ~_GEN_1 | write_generating_;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_1)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_idx_ <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      write_eagerFork_regs_0 <=
        write_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_1 <=
        write_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_eagerFork_regs_2 <=
        write_eagerFork_s_axi_aw_ready_qual1_2 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      if (_write_T_4) begin	// src/main/scala/chext/elastic/Replicate.scala:36:21
        if (write_generating__1) begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          write_generating__1 <= ~write_last_1 & write_generating__1;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :38:18, :40:21
          write_idx__1 <= write_idx__1 + 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :46:20, :56:14
        end
        else begin	// src/main/scala/chext/elastic/Replicate.scala:20:36
          automatic logic _GEN_2 = ~(|_write_len_T_1) | _write_T_6;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:185:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :48:{16,25}, :50:{22,31}, :55:21
          write_generating__1 <= ~_GEN_2 | write_generating__1;	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
          if (~_GEN_2)	// src/main/scala/chext/elastic/Replicate.scala:20:36, :48:25, :50:31, :55:21
            write_idx__1 <= 16'h1;	// src/main/scala/chext/elastic/Replicate.scala:21:29, :56:14
        end
      end
      if (write_joined_ready) begin	// src/main/scala/chext/elastic/Arrival.scala:65:28
        if (_write_sinkBuffered__sinkBuffer_1_io_deq_bits)	// src/main/scala/chext/elastic/Buffer.scala:131:30
          write_respReg <= 2'h0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, :192:28
        else if (_write_T_9)	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:199:27
          write_respReg <= m_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:192:28
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
      automatic logic [31:0] _RANDOM[0:2];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
        end	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
        read_ar_generating_ = _RANDOM[2'h0][0];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_ar_idx_ = _RANDOM[2'h0][16:1];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        read_ar_eagerFork_regs_0 = _RANDOM[2'h0][17];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_ar_eagerFork_regs_1 = _RANDOM[2'h0][18];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_ar_eagerFork_regs_2 = _RANDOM[2'h0][19];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_r_generating_ = _RANDOM[2'h0][20];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:20:36
        read_r_idx_ = {_RANDOM[2'h0][31:21], _RANDOM[2'h1][4:0]};	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        write_generating_ = _RANDOM[2'h1][5];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        write_idx_ = _RANDOM[2'h1][21:6];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_eagerFork_regs_0 = _RANDOM[2'h1][22];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_eagerFork_regs_1 = _RANDOM[2'h1][23];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_eagerFork_regs_2 = _RANDOM[2'h1][24];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:75:25, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_generating__1 = _RANDOM[2'h1][25];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:20:36, :21:29
        write_idx__1 = {_RANDOM[2'h1][31:26], _RANDOM[2'h2][9:0]};	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:21:29
        write_respReg = _RANDOM[2'h2][11:10];	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, :192:28, src/main/scala/chext/elastic/Replicate.scala:21:29
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressStrobeGenerator read_addressStrobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:39:13
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_ar_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr),
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (read_arReplicated_ready),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_read_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (m_axi_ar_bits_addr),
    .sink_bits_size    (m_axi_ar_bits_size),
    .sink_bits_strb    (/* unused */)
  );
  Queue8_UInt8 read_lenQueue (	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:43:26
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_lenQueue_io_enq_ready),
    .io_enq_valid (s_axi_ar_valid & ~read_ar_eagerFork_regs_2),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (s_axi_ar_bits_len),
    .io_deq_ready
      (_read_r_T & (read_r_generating_ ? read_r_last : ~(|_read_r_len_T) | _read_r_T_2)),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:97:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
    .io_deq_valid (_read_lenQueue_io_deq_valid),
    .io_deq_bits  (_read_lenQueue_io_deq_bits)
  );
  Queue2_ReadAddressChannel read_ar_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_read_ar_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid       (_read_ar_T & (read_ar_generating_ | (|_read_ar_len_T))),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:63:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits_addr   (s_axi_ar_bits_addr),
    .io_enq_bits_len    (s_axi_ar_bits_len),
    .io_enq_bits_size   (s_axi_ar_bits_size),
    .io_enq_bits_burst  (s_axi_ar_bits_burst),
    .io_enq_bits_lock   (s_axi_ar_bits_lock),
    .io_enq_bits_cache  (s_axi_ar_bits_cache),
    .io_enq_bits_prot   (s_axi_ar_bits_prot),
    .io_enq_bits_qos    (s_axi_ar_bits_qos),
    .io_enq_bits_region (s_axi_ar_bits_region),
    .io_deq_ready       (read_arReplicated_ready),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid       (_read_ar_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_lock   (m_axi_ar_bits_lock),
    .io_deq_bits_cache  (m_axi_ar_bits_cache),
    .io_deq_bits_prot   (m_axi_ar_bits_prot),
    .io_deq_bits_qos    (m_axi_ar_bits_qos),
    .io_deq_bits_region (m_axi_ar_bits_region)
  );
  Queue2_Bool read_r_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_r_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid (_read_r_T & (read_r_generating_ | (|_read_r_len_T))),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:97:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits  (read_r_last),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready (m_axi_r_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_read_r_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits  (s_axi_r_bits_last)
  );
  AddressStrobeGenerator write_addressStrobeGenerator (	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:119:13
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressStrobeGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr),
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (write_mkJoin_fire),	// src/main/scala/chext/elastic/Join.scala:42:29
    .sink_valid        (_write_addressStrobeGenerator_sink_valid),
    .sink_bits_addr    (m_axi_aw_bits_addr),
    .sink_bits_size    (m_axi_aw_bits_size),
    .sink_bits_strb    (/* unused */)
  );
  Queue8_UInt8 write_lenQueue (	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:123:26
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_lenQueue_io_enq_ready),
    .io_enq_valid (s_axi_aw_valid & ~write_eagerFork_regs_2),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .io_enq_bits  (s_axi_aw_bits_len),
    .io_deq_ready
      (_write_T_4
       & (write_generating__1 ? write_last_1 : ~(|_write_len_T_1) | _write_T_6)),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:185:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :27:29, :33:16, :36:{21,45}, :37:23, :38:18, :48:{16,25}, :50:{22,31}, src/main/scala/chisel3/util/Decoupled.scala:76:20
    .io_deq_valid (_write_lenQueue_io_deq_valid),
    .io_deq_bits  (_write_lenQueue_io_deq_bits)
  );
  Queue2_WriteAddressChannel write_sinkBuffered__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock              (clock),
    .reset              (reset),
    .io_enq_ready       (_write_sinkBuffered__sinkBuffer_io_enq_ready),
    .io_enq_valid       (_write_T & (write_generating_ | (|_write_len_T))),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:143:29, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits_addr   (s_axi_aw_bits_addr),
    .io_enq_bits_len    (s_axi_aw_bits_len),
    .io_enq_bits_size   (s_axi_aw_bits_size),
    .io_enq_bits_burst  (s_axi_aw_bits_burst),
    .io_enq_bits_lock   (s_axi_aw_bits_lock),
    .io_enq_bits_cache  (s_axi_aw_bits_cache),
    .io_enq_bits_prot   (s_axi_aw_bits_prot),
    .io_enq_bits_qos    (s_axi_aw_bits_qos),
    .io_enq_bits_region (s_axi_aw_bits_region),
    .io_deq_ready       (write_mkJoin_fire),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid       (_write_sinkBuffered__sinkBuffer_io_deq_valid),
    .io_deq_bits_lock   (m_axi_aw_bits_lock),
    .io_deq_bits_cache  (m_axi_aw_bits_cache),
    .io_deq_bits_prot   (m_axi_aw_bits_prot),
    .io_deq_bits_qos    (m_axi_aw_bits_qos),
    .io_deq_bits_region (m_axi_aw_bits_region)
  );
  Queue2_Bool write_sinkBuffered__sinkBuffer_1 (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_sinkBuffered__sinkBuffer_1_io_enq_ready),
    .io_enq_valid (_write_T_4 & (write_generating__1 | (|_write_len_T_1))),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:185:21, src/main/scala/chext/elastic/Replicate.scala:20:36, :34:23, :36:{21,45}, :37:23, :45:27, :48:{16,25}
    .io_enq_bits  (write_last_1),	// src/main/scala/chext/elastic/Replicate.scala:27:29
    .io_deq_ready (write_lastReplicated_ready),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_write_sinkBuffered__sinkBuffer_1_io_deq_valid),
    .io_deq_bits  (_write_sinkBuffered__sinkBuffer_1_io_deq_bits)
  );
  Queue2_WriteResponseChannel write_sinkBuffered__sinkBuffer_2 (	// src/main/scala/chext/elastic/Buffer.scala:131:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_write_sinkBuffered__sinkBuffer_2_io_enq_ready),
    .io_enq_valid
      (write_joined_ready & _write_sinkBuffered__sinkBuffer_1_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:206:35, src/main/scala/chext/elastic/Arrival.scala:36:25, :65:{28,45}, src/main/scala/chext/elastic/Buffer.scala:131:30
    .io_enq_bits_resp (_write_T_9 ? m_axi_b_bits_resp : write_respReg),	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:192:28, :199:{27,38}, :200:21
    .io_deq_ready     (s_axi_b_ready),
    .io_deq_valid     (s_axi_b_valid),
    .io_deq_bits_resp (s_axi_b_bits_resp)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign s_axi_r_bits_data = m_axi_r_bits_data;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign s_axi_r_bits_resp = m_axi_r_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_w_ready = m_axi_w_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign m_axi_ar_valid = m_axi_ar_valid_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign m_axi_ar_bits_len = 8'h0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, :79:19
  assign m_axi_ar_bits_burst = 2'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign m_axi_r_ready = m_axi_r_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign m_axi_aw_valid = write_mkJoin_allValid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign m_axi_aw_bits_len = 8'h0;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, :79:19
  assign m_axi_aw_bits_burst = 2'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign m_axi_w_valid = s_axi_w_valid;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign m_axi_w_bits_data = s_axi_w_bits_data;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign m_axi_w_bits_strb = s_axi_w_bits_strb;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7
  assign m_axi_w_bits_last = 1'h1;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Replicate.scala:27:38
  assign m_axi_b_ready = write_lastReplicated_ready;	// src/main/scala/chext/amba/axi4/full/components/Unburst.scala:28:7, src/main/scala/chext/elastic/Join.scala:42:29
endmodule

module UnburstTestTop1_1(	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:13:7
  input          clock,	// <stdin>:5382:11
                 reset,	// <stdin>:5383:11
  output         S_AXI_NORMAL_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [13:0]  S_AXI_NORMAL_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [7:0]   S_AXI_NORMAL_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [2:0]   S_AXI_NORMAL_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [1:0]   S_AXI_NORMAL_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [3:0]   S_AXI_NORMAL_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [2:0]   S_AXI_NORMAL_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [3:0]   S_AXI_NORMAL_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
                 S_AXI_NORMAL_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_RREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output         S_AXI_NORMAL_RVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output [127:0] S_AXI_NORMAL_RDATA,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output [1:0]   S_AXI_NORMAL_RRESP,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output         S_AXI_NORMAL_RLAST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
                 S_AXI_NORMAL_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [13:0]  S_AXI_NORMAL_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [7:0]   S_AXI_NORMAL_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [2:0]   S_AXI_NORMAL_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [1:0]   S_AXI_NORMAL_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [3:0]   S_AXI_NORMAL_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [2:0]   S_AXI_NORMAL_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [3:0]   S_AXI_NORMAL_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
                 S_AXI_NORMAL_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output         S_AXI_NORMAL_WREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_WVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [127:0] S_AXI_NORMAL_WDATA,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input  [15:0]  S_AXI_NORMAL_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  input          S_AXI_NORMAL_WLAST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
                 S_AXI_NORMAL_BREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output         S_AXI_NORMAL_BVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output [1:0]   S_AXI_NORMAL_BRESP,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:22:24
  output         S_AXI_TEST_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [13:0]  S_AXI_TEST_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [7:0]   S_AXI_TEST_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [2:0]   S_AXI_TEST_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [1:0]   S_AXI_TEST_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [3:0]   S_AXI_TEST_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [2:0]   S_AXI_TEST_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [3:0]   S_AXI_TEST_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
                 S_AXI_TEST_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_RREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output         S_AXI_TEST_RVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output [127:0] S_AXI_TEST_RDATA,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output [1:0]   S_AXI_TEST_RRESP,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output         S_AXI_TEST_RLAST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
                 S_AXI_TEST_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [13:0]  S_AXI_TEST_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [7:0]   S_AXI_TEST_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [2:0]   S_AXI_TEST_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [1:0]   S_AXI_TEST_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [3:0]   S_AXI_TEST_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [2:0]   S_AXI_TEST_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [3:0]   S_AXI_TEST_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
                 S_AXI_TEST_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output         S_AXI_TEST_WREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_WVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [127:0] S_AXI_TEST_WDATA,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input  [15:0]  S_AXI_TEST_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  input          S_AXI_TEST_WLAST,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
                 S_AXI_TEST_BREADY,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output         S_AXI_TEST_BVALID,	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
  output [1:0]   S_AXI_TEST_BRESP	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:23:22
);

  wire         _unburst_m_axi_ar_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [13:0]  _unburst_m_axi_ar_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [7:0]   _unburst_m_axi_ar_bits_len;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [2:0]   _unburst_m_axi_ar_bits_size;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [1:0]   _unburst_m_axi_ar_bits_burst;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire         _unburst_m_axi_r_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire         _unburst_m_axi_aw_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [13:0]  _unburst_m_axi_aw_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [7:0]   _unburst_m_axi_aw_bits_len;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [2:0]   _unburst_m_axi_aw_bits_size;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [1:0]   _unburst_m_axi_aw_bits_burst;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire         _unburst_m_axi_w_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [127:0] _unburst_m_axi_w_bits_data;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire [15:0]  _unburst_m_axi_w_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire         _unburst_m_axi_b_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
  wire         _axiBridge2_s_axi_ar_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_s_axi_r_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire [127:0] _axiBridge2_s_axi_r_bits_data;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_s_axi_r_bits_last;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_s_axi_aw_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_s_axi_w_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_s_axi_b_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire [1:0]   _axiBridge2_s_axi_b_bits_resp;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_read_req_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire [9:0]   _axiBridge2_read_req_bits;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_read_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_write_req_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire [9:0]   _axiBridge2_write_req_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire [127:0] _axiBridge2_write_req_bits_data;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire [15:0]  _axiBridge2_write_req_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge2_write_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  wire         _axiBridge1_read_req_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire [9:0]   _axiBridge1_read_req_bits;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire         _axiBridge1_read_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire         _axiBridge1_write_req_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire [9:0]   _axiBridge1_write_req_bits_addr;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire [127:0] _axiBridge1_write_req_bits_data;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire [15:0]  _axiBridge1_write_req_bits_strb;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire         _axiBridge1_write_resp_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
  wire         _mem_read1_req_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_read1_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire [127:0] _mem_read1_resp_bits;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_read2_req_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_read2_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire [127:0] _mem_read2_resp_bits;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_write1_req_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_write1_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_write2_req_ready;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  wire         _mem_write2_resp_valid;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  ChiselTrueDualPortRAM mem (	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .clock                (clock),
    .reset                (reset),
    .read1_req_ready      (_mem_read1_req_ready),
    .read1_req_valid      (_axiBridge1_read_req_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .read1_req_bits       (_axiBridge1_read_req_bits),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .read1_resp_ready     (_axiBridge1_read_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .read1_resp_valid     (_mem_read1_resp_valid),
    .read1_resp_bits      (_mem_read1_resp_bits),
    .read2_req_ready      (_mem_read2_req_ready),
    .read2_req_valid      (_axiBridge2_read_req_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .read2_req_bits       (_axiBridge2_read_req_bits),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .read2_resp_ready     (_axiBridge2_read_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .read2_resp_valid     (_mem_read2_resp_valid),
    .read2_resp_bits      (_mem_read2_resp_bits),
    .write1_req_ready     (_mem_write1_req_ready),
    .write1_req_valid     (_axiBridge1_write_req_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .write1_req_bits_addr (_axiBridge1_write_req_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .write1_req_bits_data (_axiBridge1_write_req_bits_data),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .write1_req_bits_strb (_axiBridge1_write_req_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .write1_resp_ready    (_axiBridge1_write_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .write1_resp_valid    (_mem_write1_resp_valid),
    .write2_req_ready     (_mem_write2_req_ready),
    .write2_req_valid     (_axiBridge2_write_req_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .write2_req_bits_addr (_axiBridge2_write_req_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .write2_req_bits_data (_axiBridge2_write_req_bits_data),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .write2_req_bits_strb (_axiBridge2_write_req_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .write2_resp_ready    (_axiBridge2_write_resp_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .write2_resp_valid    (_mem_write2_resp_valid)
  );
  Axi4FullToReadWriteBridge axiBridge1 (	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:29:34
    .clock               (clock),
    .reset               (reset),
    .s_axi_ar_ready      (S_AXI_NORMAL_ARREADY),
    .s_axi_ar_valid      (S_AXI_NORMAL_ARVALID),
    .s_axi_ar_bits_addr  (S_AXI_NORMAL_ARADDR),
    .s_axi_ar_bits_len   (S_AXI_NORMAL_ARLEN),
    .s_axi_ar_bits_size  (S_AXI_NORMAL_ARSIZE),
    .s_axi_ar_bits_burst (S_AXI_NORMAL_ARBURST),
    .s_axi_r_ready       (S_AXI_NORMAL_RREADY),
    .s_axi_r_valid       (S_AXI_NORMAL_RVALID),
    .s_axi_r_bits_data   (S_AXI_NORMAL_RDATA),
    .s_axi_r_bits_last   (S_AXI_NORMAL_RLAST),
    .s_axi_aw_ready      (S_AXI_NORMAL_AWREADY),
    .s_axi_aw_valid      (S_AXI_NORMAL_AWVALID),
    .s_axi_aw_bits_addr  (S_AXI_NORMAL_AWADDR),
    .s_axi_aw_bits_len   (S_AXI_NORMAL_AWLEN),
    .s_axi_aw_bits_size  (S_AXI_NORMAL_AWSIZE),
    .s_axi_aw_bits_burst (S_AXI_NORMAL_AWBURST),
    .s_axi_w_ready       (S_AXI_NORMAL_WREADY),
    .s_axi_w_valid       (S_AXI_NORMAL_WVALID),
    .s_axi_w_bits_data   (S_AXI_NORMAL_WDATA),
    .s_axi_w_bits_strb   (S_AXI_NORMAL_WSTRB),
    .s_axi_b_ready       (S_AXI_NORMAL_BREADY),
    .s_axi_b_valid       (S_AXI_NORMAL_BVALID),
    .s_axi_b_bits_resp   (S_AXI_NORMAL_BRESP),
    .read_req_ready      (_mem_read1_req_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .read_req_valid      (_axiBridge1_read_req_valid),
    .read_req_bits       (_axiBridge1_read_req_bits),
    .read_resp_ready     (_axiBridge1_read_resp_ready),
    .read_resp_valid     (_mem_read1_resp_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .read_resp_bits      (_mem_read1_resp_bits),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .write_req_ready     (_mem_write1_req_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .write_req_valid     (_axiBridge1_write_req_valid),
    .write_req_bits_addr (_axiBridge1_write_req_bits_addr),
    .write_req_bits_data (_axiBridge1_write_req_bits_data),
    .write_req_bits_strb (_axiBridge1_write_req_bits_strb),
    .write_resp_ready    (_axiBridge1_write_resp_ready),
    .write_resp_valid    (_mem_write1_resp_valid)	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  );
  Axi4FullToReadWriteBridge axiBridge2 (	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .clock               (clock),
    .reset               (reset),
    .s_axi_ar_ready      (_axiBridge2_s_axi_ar_ready),
    .s_axi_ar_valid      (_unburst_m_axi_ar_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_ar_bits_addr  (_unburst_m_axi_ar_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_ar_bits_len   (_unburst_m_axi_ar_bits_len),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_ar_bits_size  (_unburst_m_axi_ar_bits_size),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_ar_bits_burst (_unburst_m_axi_ar_bits_burst),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_r_ready       (_unburst_m_axi_r_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_r_valid       (_axiBridge2_s_axi_r_valid),
    .s_axi_r_bits_data   (_axiBridge2_s_axi_r_bits_data),
    .s_axi_r_bits_last   (_axiBridge2_s_axi_r_bits_last),
    .s_axi_aw_ready      (_axiBridge2_s_axi_aw_ready),
    .s_axi_aw_valid      (_unburst_m_axi_aw_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_aw_bits_addr  (_unburst_m_axi_aw_bits_addr),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_aw_bits_len   (_unburst_m_axi_aw_bits_len),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_aw_bits_size  (_unburst_m_axi_aw_bits_size),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_aw_bits_burst (_unburst_m_axi_aw_bits_burst),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_w_ready       (_axiBridge2_s_axi_w_ready),
    .s_axi_w_valid       (_unburst_m_axi_w_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_w_bits_data   (_unburst_m_axi_w_bits_data),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_w_bits_strb   (_unburst_m_axi_w_bits_strb),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_b_ready       (_unburst_m_axi_b_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .s_axi_b_valid       (_axiBridge2_s_axi_b_valid),
    .s_axi_b_bits_resp   (_axiBridge2_s_axi_b_bits_resp),
    .read_req_ready      (_mem_read2_req_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .read_req_valid      (_axiBridge2_read_req_valid),
    .read_req_bits       (_axiBridge2_read_req_bits),
    .read_resp_ready     (_axiBridge2_read_resp_ready),
    .read_resp_valid     (_mem_read2_resp_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .read_resp_bits      (_mem_read2_resp_bits),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .write_req_ready     (_mem_write2_req_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
    .write_req_valid     (_axiBridge2_write_req_valid),
    .write_req_bits_addr (_axiBridge2_write_req_bits_addr),
    .write_req_bits_data (_axiBridge2_write_req_bits_data),
    .write_req_bits_strb (_axiBridge2_write_req_bits_strb),
    .write_resp_ready    (_axiBridge2_write_resp_ready),
    .write_resp_valid    (_mem_write2_resp_valid)	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:25:27
  );
  Unburst unburst (	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:48:31
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (S_AXI_TEST_ARREADY),
    .s_axi_ar_valid       (S_AXI_TEST_ARVALID),
    .s_axi_ar_bits_addr   (S_AXI_TEST_ARADDR),
    .s_axi_ar_bits_len    (S_AXI_TEST_ARLEN),
    .s_axi_ar_bits_size   (S_AXI_TEST_ARSIZE),
    .s_axi_ar_bits_burst  (S_AXI_TEST_ARBURST),
    .s_axi_ar_bits_lock   (S_AXI_TEST_ARLOCK),
    .s_axi_ar_bits_cache  (S_AXI_TEST_ARCACHE),
    .s_axi_ar_bits_prot   (S_AXI_TEST_ARPROT),
    .s_axi_ar_bits_qos    (S_AXI_TEST_ARQOS),
    .s_axi_ar_bits_region (S_AXI_TEST_ARREGION),
    .s_axi_r_ready        (S_AXI_TEST_RREADY),
    .s_axi_r_valid        (S_AXI_TEST_RVALID),
    .s_axi_r_bits_data    (S_AXI_TEST_RDATA),
    .s_axi_r_bits_resp    (S_AXI_TEST_RRESP),
    .s_axi_r_bits_last    (S_AXI_TEST_RLAST),
    .s_axi_aw_ready       (S_AXI_TEST_AWREADY),
    .s_axi_aw_valid       (S_AXI_TEST_AWVALID),
    .s_axi_aw_bits_addr   (S_AXI_TEST_AWADDR),
    .s_axi_aw_bits_len    (S_AXI_TEST_AWLEN),
    .s_axi_aw_bits_size   (S_AXI_TEST_AWSIZE),
    .s_axi_aw_bits_burst  (S_AXI_TEST_AWBURST),
    .s_axi_aw_bits_lock   (S_AXI_TEST_AWLOCK),
    .s_axi_aw_bits_cache  (S_AXI_TEST_AWCACHE),
    .s_axi_aw_bits_prot   (S_AXI_TEST_AWPROT),
    .s_axi_aw_bits_qos    (S_AXI_TEST_AWQOS),
    .s_axi_aw_bits_region (S_AXI_TEST_AWREGION),
    .s_axi_w_ready        (S_AXI_TEST_WREADY),
    .s_axi_w_valid        (S_AXI_TEST_WVALID),
    .s_axi_w_bits_data    (S_AXI_TEST_WDATA),
    .s_axi_w_bits_strb    (S_AXI_TEST_WSTRB),
    .s_axi_w_bits_last    (S_AXI_TEST_WLAST),
    .s_axi_b_ready        (S_AXI_TEST_BREADY),
    .s_axi_b_valid        (S_AXI_TEST_BVALID),
    .s_axi_b_bits_resp    (S_AXI_TEST_BRESP),
    .m_axi_ar_ready       (_axiBridge2_s_axi_ar_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_ar_valid       (_unburst_m_axi_ar_valid),
    .m_axi_ar_bits_addr   (_unburst_m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (_unburst_m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (_unburst_m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (_unburst_m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock   (/* unused */),
    .m_axi_ar_bits_cache  (/* unused */),
    .m_axi_ar_bits_prot   (/* unused */),
    .m_axi_ar_bits_qos    (/* unused */),
    .m_axi_ar_bits_region (/* unused */),
    .m_axi_r_ready        (_unburst_m_axi_r_ready),
    .m_axi_r_valid        (_axiBridge2_s_axi_r_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_r_bits_data    (_axiBridge2_s_axi_r_bits_data),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_r_bits_resp    (2'h0),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:13:7, :29:34, :39:34, :48:31
    .m_axi_r_bits_last    (_axiBridge2_s_axi_r_bits_last),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_aw_ready       (_axiBridge2_s_axi_aw_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_aw_valid       (_unburst_m_axi_aw_valid),
    .m_axi_aw_bits_addr   (_unburst_m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (_unburst_m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (_unburst_m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (_unburst_m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock   (/* unused */),
    .m_axi_aw_bits_cache  (/* unused */),
    .m_axi_aw_bits_prot   (/* unused */),
    .m_axi_aw_bits_qos    (/* unused */),
    .m_axi_aw_bits_region (/* unused */),
    .m_axi_w_ready        (_axiBridge2_s_axi_w_ready),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_w_valid        (_unburst_m_axi_w_valid),
    .m_axi_w_bits_data    (_unburst_m_axi_w_bits_data),
    .m_axi_w_bits_strb    (_unburst_m_axi_w_bits_strb),
    .m_axi_w_bits_last    (/* unused */),
    .m_axi_b_ready        (_unburst_m_axi_b_ready),
    .m_axi_b_valid        (_axiBridge2_s_axi_b_valid),	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
    .m_axi_b_bits_resp    (_axiBridge2_s_axi_b_bits_resp)	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:39:34
  );
  assign S_AXI_NORMAL_RRESP = 2'h0;	// src/test/scala/chext/amba/axi4/full/components/Unburst.tb.scala:13:7, :29:34, :39:34, :48:31
endmodule

