// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// VCS coverage exclude_file
module ram_2x18(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input         R0_addr,
                R0_en,
                R0_clk,
  output [17:0] R0_data,
  input         W0_addr,
                W0_en,
                W0_clk,
  input  [17:0] W0_data
);

  reg [17:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[17:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 18'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrLenSizeBurstBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:75:11, :358:11
               reset,	// <stdin>:76:11, :359:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [4:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_burst,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [4:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits_len,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_burst	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [17:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg         wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:75:11, :358:11
    if (reset) begin	// <stdin>:75:11, :358:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:75:11, :358:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x18 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_burst, io_enq_bits_size, io_enq_bits_len, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_addr = _ram_ext_R0_data[4:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_len = _ram_ext_R0_data[12:5];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_size = _ram_ext_R0_data[15:13];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_burst = _ram_ext_R0_data[17:16];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

// VCS coverage exclude_file
module ram_2x5(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input        R0_addr,
               R0_en,
               R0_clk,
  output [4:0] R0_data,
  input        W0_addr,
               W0_en,
               W0_clk,
  input  [4:0] W0_data
);

  reg [4:0] Memory[0:1];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[0]] = _RANDOM_MEM[4:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 5'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue2_AddrSizeLastBundle(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:126:11, :409:11
               reset,	// <stdin>:127:11, :410:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [4:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits_size,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits_last,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [4:0] io_deq_bits_addr	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  wrap;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire ptr_match = wrap == wrap_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:126:11, :409:11
    if (reset) begin	// <stdin>:126:11, :409:11
      wrap <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      wrap_1 <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:126:11, :409:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap <= wrap - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        wrap_1 <= wrap_1 - 1'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        wrap_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_2x5 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (wrap_1),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits_addr),
    .W0_addr (wrap),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits_addr)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module AddressGenerator(	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
  input        clock,	// <stdin>:177:11, :460:11
               reset,	// <stdin>:178:11, :461:11
  output       source_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input        source_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [4:0] source_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [7:0] source_bits_len,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [2:0] source_bits_size,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input  [1:0] source_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:54:18
  input        sink_ready,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
  output       sink_valid,	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
  output [4:0] sink_bits_addr	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:55:16
);

  wire        _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/elastic/Buffer.scala:148:30
  wire        _source__sourceBuffer_io_deq_valid;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [4:0]  _source__sourceBuffer_io_deq_bits_addr;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [7:0]  _source__sourceBuffer_io_deq_bits_len;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [2:0]  _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  wire [1:0]  _source__sourceBuffer_io_deq_bits_burst;	// src/main/scala/chext/elastic/Buffer.scala:93:32
  reg  [4:0]  addr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25
  reg  [7:0]  ctr;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24
  reg         generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
  wire        sink__valid =
    _source__sourceBuffer_io_deq_valid & _sink__sinkBuffer_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22, src/main/scala/chext/elastic/Buffer.scala:93:32, :148:30
  wire        last = ctr == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24, :76:22
  wire [11:0] _result_addr_T = {7'h0, addr} << _source__sourceBuffer_io_deq_bits_size;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :105:31, src/main/scala/chext/elastic/Buffer.scala:93:32
  wire        last_1 = _source__sourceBuffer_io_deq_bits_len == 8'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:76:22, :113:30, src/main/scala/chext/elastic/Buffer.scala:93:32
  always @(posedge clock) begin	// <stdin>:177:11, :460:11
    if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22
      if (generating) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
        if (~last) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :76:22, :78:18, :79:20
          if (_source__sourceBuffer_io_deq_bits_burst == 2'h1)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:84:28, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <= addr + 5'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :85:24
          else if (_source__sourceBuffer_io_deq_bits_burst == 2'h2)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:86:34, src/main/scala/chext/elastic/Buffer.scala:93:32
            addr <=
              ~(_source__sourceBuffer_io_deq_bits_len[4:0]) & addr
              | _source__sourceBuffer_io_deq_bits_len[4:0] & addr + 5'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :85:24, :88:23, :89:{25,34,44,51}, src/main/scala/chext/elastic/Buffer.scala:93:32
          ctr <= ctr - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24, :82:20
        end
      end
      else if (~last_1) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :113:30, :115:18, :118:20
        addr <=
          (_source__sourceBuffer_io_deq_bits_addr
           >> _source__sourceBuffer_io_deq_bits_size) + 5'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:63:25, :85:24, :119:{32,49}, src/main/scala/chext/elastic/Buffer.scala:93:32
        ctr <= _source__sourceBuffer_io_deq_bits_len - 8'h1;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:66:24, :120:28, src/main/scala/chext/elastic/Buffer.scala:93:32
      end
    end
    if (reset)	// <stdin>:177:11, :460:11
      generating <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :69:35
    else if (sink__valid) begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22
      if (generating)	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
        generating <= ~last & generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :76:22, :78:18, :79:20
      else	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35
        generating <= ~last_1 | generating;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :113:30, :115:18, :118:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
        addr = _RANDOM[/*Zero width*/ 1'b0][4:0];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :63:25
        ctr = _RANDOM[/*Zero width*/ 1'b0][12:5];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :63:25, :66:24
        generating = _RANDOM[/*Zero width*/ 1'b0][13];	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7, :63:25, :69:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:50:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue2_AddrLenSizeBurstBundle source__sourceBuffer (	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .clock             (clock),
    .reset             (reset),
    .io_enq_ready      (source_ready),
    .io_enq_valid      (source_valid),
    .io_enq_bits_addr  (source_bits_addr),
    .io_enq_bits_len   (source_bits_len),
    .io_enq_bits_size  (source_bits_size),
    .io_enq_bits_burst (source_bits_burst),
    .io_deq_ready      (sink__valid & (generating ? last : last_1)),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :74:{22,38}, :75:22, :76:22, :78:18, :113:30, :115:18, src/main/scala/chisel3/util/Decoupled.scala:83:20
    .io_deq_valid      (_source__sourceBuffer_io_deq_valid),
    .io_deq_bits_addr  (_source__sourceBuffer_io_deq_bits_addr),
    .io_deq_bits_len   (_source__sourceBuffer_io_deq_bits_len),
    .io_deq_bits_size  (_source__sourceBuffer_io_deq_bits_size),
    .io_deq_bits_burst (_source__sourceBuffer_io_deq_bits_burst)
  );
  Queue2_AddrSizeLastBundle sink__sinkBuffer (	// src/main/scala/chext/elastic/Buffer.scala:148:30
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (_sink__sinkBuffer_io_enq_ready),
    .io_enq_valid     (sink__valid),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:74:22
    .io_enq_bits_addr
      (~generating | _source__sourceBuffer_io_deq_bits_burst == 2'h0
         ? _source__sourceBuffer_io_deq_bits_addr
         : _result_addr_T[4:0]),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :75:22, :93:{26,47}, :105:{23,31}, src/main/scala/chext/elastic/Buffer.scala:93:32, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_enq_bits_size (_source__sourceBuffer_io_deq_bits_size),	// src/main/scala/chext/elastic/Buffer.scala:93:32
    .io_enq_bits_last (generating ? last : last_1),	// src/main/scala/chext/amba/axi4/full/components/AddressGenerator.scala:69:35, :75:22, :76:22, :93:47, :113:30, src/main/scala/chisel3/util/Decoupled.scala:59:19
    .io_deq_ready     (sink_ready),
    .io_deq_valid     (sink_valid),
    .io_deq_bits_addr (sink_bits_addr)
  );
endmodule

// VCS coverage exclude_file
module ram_16x3(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [2:0] R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [2:0] W0_data
);

  reg [2:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[2:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 3'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_UInt3(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// <stdin>:281:11, :564:11
               reset,	// <stdin>:282:11, :565:11
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [2:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [2:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// <stdin>:281:11, :564:11
    if (reset) begin	// <stdin>:281:11, :564:11
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// <stdin>:281:11, :564:11
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x3 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module SteerRight(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7
  input  [255:0] dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:34:18
  input  [2:0]   offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:35:20
  output [31:0]  dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:36:19
);

  wire [7:0][31:0] _GEN =
    {{dataIn[255:224]},
     {dataIn[223:192]},
     {dataIn[191:160]},
     {dataIn[159:128]},
     {dataIn[127:96]},
     {dataIn[95:64]},
     {dataIn[63:32]},
     {dataIn[31:0]}};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:42:13, :46:11
  assign dataOut = _GEN[offsetIn];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:28:7, :46:11
endmodule

module SteerLeft(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7
  input  [31:0]  dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:13:18
  input  [2:0]   offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:14:20
  output [255:0] dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:15:19
);

  wire [7:0][255:0] _GEN =
    {{{dataIn, 224'h0}},
     {{32'h0, dataIn, 192'h0}},
     {{64'h0, dataIn, 160'h0}},
     {{96'h0, dataIn, 128'h0}},
     {{128'h0, dataIn, 96'h0}},
     {{160'h0, dataIn, 64'h0}},
     {{192'h0, dataIn, 32'h0}},
     {{224'h0, dataIn}}};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:21:10, :25:11
  assign dataOut = _GEN[offsetIn];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7, :25:11
endmodule

module SteerLeft_1(	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7
  input  [3:0]  dataIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:13:18
  input  [2:0]  offsetIn,	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:14:20
  output [31:0] dataOut	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:15:19
);

  wire [7:0][31:0] _GEN =
    {{{dataIn, 28'h0}},
     {{4'h0, dataIn, 24'h0}},
     {{8'h0, dataIn, 20'h0}},
     {{12'h0, dataIn, 16'h0}},
     {{16'h0, dataIn, 12'h0}},
     {{20'h0, dataIn, 8'h0}},
     {{24'h0, dataIn, 4'h0}},
     {{28'h0, dataIn}}};	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:21:10, :25:11
  assign dataOut = _GEN[offsetIn];	// src/main/scala/chext/amba/axi4/full/components/helpers/Steer.scala:6:7, :25:11
endmodule

module Upscale(	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  input          clock,	// <stdin>:683:11
                 reset,	// <stdin>:684:11
  output         s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [19:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [7:0]   s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [1:0]   s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [3:0]   s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [2:0]   s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [3:0]   s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
                 s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output         s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output [31:0]  s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output [1:0]   s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
                 s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [19:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [7:0]   s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [1:0]   s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [3:0]   s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [2:0]   s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [3:0]   s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
                 s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output         s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [31:0]  s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input  [3:0]   s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
                 s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output         s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  output [1:0]   s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:40:17
  input          m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [19:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [2:0]   m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [1:0]   m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [3:0]   m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [2:0]   m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [3:0]   m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                 m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input          m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [255:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [1:0]   m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                 m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [19:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [2:0]   m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [1:0]   m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [3:0]   m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [2:0]   m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [3:0]   m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                 m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input          m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [255:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output [31:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
                 m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input          m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
  input  [1:0]   m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:41:17
);

  wire       _write_offsetQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
  wire       _write_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
  wire [2:0] _write_offsetQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
  wire       _write_addressGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34
  wire       _write_addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34
  wire [4:0] _write_addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34
  wire       _read_offsetQueue_io_enq_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29
  wire       _read_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29
  wire [2:0] _read_offsetQueue_io_deq_bits;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29
  wire       _read_addressGenerator_source_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34
  wire       _read_addressGenerator_sink_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34
  wire [4:0] _read_addressGenerator_sink_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34
  reg        read_ar_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       read_ar_eagerFork_s_axi_ar_ready_qual1_0 =
    _read_addressGenerator_source_ready | read_ar_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       read_ar_eagerFork_s_axi_ar_ready_qual1_1 =
    m_axi_ar_ready | read_ar_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       s_axi_ar_ready_0 =
    read_ar_eagerFork_s_axi_ar_ready_qual1_0 & read_ar_eagerFork_s_axi_ar_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire       s_axi_r_valid_0 = m_axi_r_valid & _read_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29, src/main/scala/chext/elastic/Join.scala:41:55
  wire       m_axi_r_ready_0 = s_axi_r_ready & s_axi_r_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  reg        write_aw_eagerFork_regs_0;	// src/main/scala/chext/elastic/Fork.scala:75:25
  reg        write_aw_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25
  wire       write_aw_eagerFork_s_axi_aw_ready_qual1_0 =
    _write_addressGenerator_source_ready | write_aw_eagerFork_regs_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34, src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       write_aw_eagerFork_s_axi_aw_ready_qual1_1 =
    m_axi_aw_ready | write_aw_eagerFork_regs_1;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22
  wire       s_axi_aw_ready_0 =
    write_aw_eagerFork_s_axi_aw_ready_qual1_0 & write_aw_eagerFork_s_axi_aw_ready_qual1_1;	// src/main/scala/chext/elastic/Fork.scala:85:22, :87:23
  wire       m_axi_w_valid_0 = s_axi_w_valid & _write_offsetQueue_io_deq_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29, src/main/scala/chext/elastic/Join.scala:41:55
  wire       s_axi_w_ready_0 = m_axi_w_ready & m_axi_w_valid_0;	// src/main/scala/chext/elastic/Join.scala:41:55, :42:29
  always @(posedge clock) begin	// <stdin>:683:11
    if (reset) begin	// <stdin>:683:11
      read_ar_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
      read_ar_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_aw_eagerFork_regs_0 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
      write_aw_eagerFork_regs_1 <= 1'h0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
    end
    else begin	// <stdin>:683:11
      read_ar_eagerFork_regs_0 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_0 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      read_ar_eagerFork_regs_1 <=
        read_ar_eagerFork_s_axi_ar_ready_qual1_1 & s_axi_ar_valid & ~s_axi_ar_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_aw_eagerFork_regs_0 <=
        write_aw_eagerFork_s_axi_aw_ready_qual1_0 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
      write_aw_eagerFork_regs_1 <=
        write_aw_eagerFork_s_axi_aw_ready_qual1_1 & s_axi_aw_valid & ~s_axi_aw_ready_0;	// src/main/scala/chext/elastic/Fork.scala:75:25, :85:22, :87:23, :92:{54,57}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
        read_ar_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
        read_ar_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][1];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_aw_eagerFork_regs_0 = _RANDOM[/*Zero width*/ 1'b0][2];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
        write_aw_eagerFork_regs_1 = _RANDOM[/*Zero width*/ 1'b0][3];	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AddressGenerator read_addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_read_addressGenerator_source_ready),
    .source_valid      (s_axi_ar_valid & ~read_ar_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_ar_bits_addr[4:0]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:52:24
    .source_bits_len   (s_axi_ar_bits_len),
    .source_bits_size  (s_axi_ar_bits_size),
    .source_bits_burst (s_axi_ar_bits_burst),
    .sink_ready        (_read_offsetQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29
    .sink_valid        (_read_addressGenerator_sink_valid),
    .sink_bits_addr    (_read_addressGenerator_sink_bits_addr)
  );
  Queue16_UInt3 read_offsetQueue (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_read_offsetQueue_io_enq_ready),
    .io_enq_valid (_read_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34
    .io_enq_bits  (_read_addressGenerator_sink_bits_addr[4:2]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:44:34, src/main/scala/chext/util/BitOps.scala:82:10
    .io_deq_ready (m_axi_r_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_read_offsetQueue_io_deq_valid),
    .io_deq_bits  (_read_offsetQueue_io_deq_bits)
  );
  SteerRight read_r_steerRight (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:71:30
    .dataIn   (m_axi_r_bits_data),
    .offsetIn (_read_offsetQueue_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:45:29
    .dataOut  (s_axi_r_bits_data)
  );
  AddressGenerator write_addressGenerator (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34
    .clock             (clock),
    .reset             (reset),
    .source_ready      (_write_addressGenerator_source_ready),
    .source_valid      (s_axi_aw_valid & ~write_aw_eagerFork_regs_0),	// src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
    .source_bits_addr  (s_axi_aw_bits_addr[4:0]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:104:24
    .source_bits_len   (s_axi_aw_bits_len),
    .source_bits_size  (s_axi_aw_bits_size),
    .source_bits_burst (s_axi_aw_bits_burst),
    .sink_ready        (_write_offsetQueue_io_enq_ready),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
    .sink_valid        (_write_addressGenerator_sink_valid),
    .sink_bits_addr    (_write_addressGenerator_sink_bits_addr)
  );
  Queue16_UInt3 write_offsetQueue (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_write_offsetQueue_io_enq_ready),
    .io_enq_valid (_write_addressGenerator_sink_valid),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34
    .io_enq_bits  (_write_addressGenerator_sink_bits_addr[4:2]),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:96:34, src/main/scala/chext/util/BitOps.scala:82:10
    .io_deq_ready (s_axi_w_ready_0),	// src/main/scala/chext/elastic/Join.scala:42:29
    .io_deq_valid (_write_offsetQueue_io_deq_valid),
    .io_deq_bits  (_write_offsetQueue_io_deq_bits)
  );
  SteerLeft write_w_steerLeft (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:123:29
    .dataIn   (s_axi_w_bits_data),
    .offsetIn (_write_offsetQueue_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
    .dataOut  (m_axi_w_bits_data)
  );
  SteerLeft_1 write_w_steerLeftStrobe (	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:124:35
    .dataIn   (s_axi_w_bits_strb),
    .offsetIn (_write_offsetQueue_io_deq_bits),	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:97:29
    .dataOut  (m_axi_w_bits_strb)
  );
  assign s_axi_ar_ready = s_axi_ar_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_r_valid = s_axi_r_valid_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign s_axi_r_bits_resp = m_axi_r_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign s_axi_r_bits_last = m_axi_r_bits_last;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign s_axi_aw_ready = s_axi_aw_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:87:23
  assign s_axi_w_ready = s_axi_w_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign s_axi_b_valid = m_axi_b_valid;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign s_axi_b_bits_resp = m_axi_b_bits_resp;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_valid = s_axi_ar_valid & ~read_ar_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
  assign m_axi_ar_bits_addr = s_axi_ar_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_len = s_axi_ar_bits_len;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_size = s_axi_ar_bits_size;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_burst = s_axi_ar_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_lock = s_axi_ar_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_cache = s_axi_ar_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_prot = s_axi_ar_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_qos = s_axi_ar_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_ar_bits_region = s_axi_ar_bits_region;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_r_ready = m_axi_r_ready_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Join.scala:42:29
  assign m_axi_aw_valid = s_axi_aw_valid & ~write_aw_eagerFork_regs_1;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Fork.scala:75:25, :79:{38,41}
  assign m_axi_aw_bits_addr = s_axi_aw_bits_addr;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_len = s_axi_aw_bits_len;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_size = s_axi_aw_bits_size;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_burst = s_axi_aw_bits_burst;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_lock = s_axi_aw_bits_lock;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_cache = s_axi_aw_bits_cache;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_prot = s_axi_aw_bits_prot;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_qos = s_axi_aw_bits_qos;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_aw_bits_region = s_axi_aw_bits_region;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_w_valid = m_axi_w_valid_0;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7, src/main/scala/chext/elastic/Join.scala:41:55
  assign m_axi_w_bits_last = s_axi_w_bits_last;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
  assign m_axi_b_ready = s_axi_b_ready;	// src/main/scala/chext/amba/axi4/full/components/Upscale.scala:37:7
endmodule

module ProtocolConverter(	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:171:7
  input          clock,	// <stdin>:833:11
                 reset,	// <stdin>:834:11
  output         s_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [19:0]  s_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [7:0]   s_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [2:0]   s_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [1:0]   s_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [3:0]   s_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [2:0]   s_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [3:0]   s_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
                 s_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output         s_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output [31:0]  s_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output [1:0]   s_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output         s_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
                 s_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [19:0]  s_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [7:0]   s_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [2:0]   s_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [1:0]   s_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [3:0]   s_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [2:0]   s_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [3:0]   s_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
                 s_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output         s_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [31:0]  s_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input  [3:0]   s_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          s_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
                 s_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output         s_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  output [1:0]   s_axi_b_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:174:17
  input          m_axi_ar_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_ar_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [19:0]  m_axi_ar_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [7:0]   m_axi_ar_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [2:0]   m_axi_ar_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [1:0]   m_axi_ar_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_ar_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [3:0]   m_axi_ar_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [2:0]   m_axi_ar_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [3:0]   m_axi_ar_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 m_axi_ar_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_r_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          m_axi_r_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [255:0] m_axi_r_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]   m_axi_r_bits_resp,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          m_axi_r_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 m_axi_aw_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_aw_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [19:0]  m_axi_aw_bits_addr,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [7:0]   m_axi_aw_bits_len,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [2:0]   m_axi_aw_bits_size,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [1:0]   m_axi_aw_bits_burst,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_aw_bits_lock,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [3:0]   m_axi_aw_bits_cache,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [2:0]   m_axi_aw_bits_prot,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [3:0]   m_axi_aw_bits_qos,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 m_axi_aw_bits_region,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          m_axi_w_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_w_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [255:0] m_axi_w_bits_data,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output [31:0]  m_axi_w_bits_strb,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  output         m_axi_w_bits_last,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
                 m_axi_b_ready,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input          m_axi_b_valid,	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
  input  [1:0]   m_axi_b_bits_resp	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:175:17
);

  Upscale upscale_0 (	// src/main/scala/chext/amba/axi4/full/components/ProtocolConverter.scala:221:32
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (s_axi_ar_ready),
    .s_axi_ar_valid       (s_axi_ar_valid),
    .s_axi_ar_bits_addr   (s_axi_ar_bits_addr),
    .s_axi_ar_bits_len    (s_axi_ar_bits_len),
    .s_axi_ar_bits_size   (s_axi_ar_bits_size),
    .s_axi_ar_bits_burst  (s_axi_ar_bits_burst),
    .s_axi_ar_bits_lock   (s_axi_ar_bits_lock),
    .s_axi_ar_bits_cache  (s_axi_ar_bits_cache),
    .s_axi_ar_bits_prot   (s_axi_ar_bits_prot),
    .s_axi_ar_bits_qos    (s_axi_ar_bits_qos),
    .s_axi_ar_bits_region (s_axi_ar_bits_region),
    .s_axi_r_ready        (s_axi_r_ready),
    .s_axi_r_valid        (s_axi_r_valid),
    .s_axi_r_bits_data    (s_axi_r_bits_data),
    .s_axi_r_bits_resp    (s_axi_r_bits_resp),
    .s_axi_r_bits_last    (s_axi_r_bits_last),
    .s_axi_aw_ready       (s_axi_aw_ready),
    .s_axi_aw_valid       (s_axi_aw_valid),
    .s_axi_aw_bits_addr   (s_axi_aw_bits_addr),
    .s_axi_aw_bits_len    (s_axi_aw_bits_len),
    .s_axi_aw_bits_size   (s_axi_aw_bits_size),
    .s_axi_aw_bits_burst  (s_axi_aw_bits_burst),
    .s_axi_aw_bits_lock   (s_axi_aw_bits_lock),
    .s_axi_aw_bits_cache  (s_axi_aw_bits_cache),
    .s_axi_aw_bits_prot   (s_axi_aw_bits_prot),
    .s_axi_aw_bits_qos    (s_axi_aw_bits_qos),
    .s_axi_aw_bits_region (s_axi_aw_bits_region),
    .s_axi_w_ready        (s_axi_w_ready),
    .s_axi_w_valid        (s_axi_w_valid),
    .s_axi_w_bits_data    (s_axi_w_bits_data),
    .s_axi_w_bits_strb    (s_axi_w_bits_strb),
    .s_axi_w_bits_last    (s_axi_w_bits_last),
    .s_axi_b_ready        (s_axi_b_ready),
    .s_axi_b_valid        (s_axi_b_valid),
    .s_axi_b_bits_resp    (s_axi_b_bits_resp),
    .m_axi_ar_ready       (m_axi_ar_ready),
    .m_axi_ar_valid       (m_axi_ar_valid),
    .m_axi_ar_bits_addr   (m_axi_ar_bits_addr),
    .m_axi_ar_bits_len    (m_axi_ar_bits_len),
    .m_axi_ar_bits_size   (m_axi_ar_bits_size),
    .m_axi_ar_bits_burst  (m_axi_ar_bits_burst),
    .m_axi_ar_bits_lock   (m_axi_ar_bits_lock),
    .m_axi_ar_bits_cache  (m_axi_ar_bits_cache),
    .m_axi_ar_bits_prot   (m_axi_ar_bits_prot),
    .m_axi_ar_bits_qos    (m_axi_ar_bits_qos),
    .m_axi_ar_bits_region (m_axi_ar_bits_region),
    .m_axi_r_ready        (m_axi_r_ready),
    .m_axi_r_valid        (m_axi_r_valid),
    .m_axi_r_bits_data    (m_axi_r_bits_data),
    .m_axi_r_bits_resp    (m_axi_r_bits_resp),
    .m_axi_r_bits_last    (m_axi_r_bits_last),
    .m_axi_aw_ready       (m_axi_aw_ready),
    .m_axi_aw_valid       (m_axi_aw_valid),
    .m_axi_aw_bits_addr   (m_axi_aw_bits_addr),
    .m_axi_aw_bits_len    (m_axi_aw_bits_len),
    .m_axi_aw_bits_size   (m_axi_aw_bits_size),
    .m_axi_aw_bits_burst  (m_axi_aw_bits_burst),
    .m_axi_aw_bits_lock   (m_axi_aw_bits_lock),
    .m_axi_aw_bits_cache  (m_axi_aw_bits_cache),
    .m_axi_aw_bits_prot   (m_axi_aw_bits_prot),
    .m_axi_aw_bits_qos    (m_axi_aw_bits_qos),
    .m_axi_aw_bits_region (m_axi_aw_bits_region),
    .m_axi_w_ready        (m_axi_w_ready),
    .m_axi_w_valid        (m_axi_w_valid),
    .m_axi_w_bits_data    (m_axi_w_bits_data),
    .m_axi_w_bits_strb    (m_axi_w_bits_strb),
    .m_axi_w_bits_last    (m_axi_w_bits_last),
    .m_axi_b_ready        (m_axi_b_ready),
    .m_axi_b_valid        (m_axi_b_valid),
    .m_axi_b_bits_resp    (m_axi_b_bits_resp)
  );
endmodule

module SctlmTest(	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:11:7
  input          clock,	// <stdin>:946:11
                 reset,	// <stdin>:947:11
  output         S_AXI_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [19:0]  S_AXI_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [7:0]   S_AXI_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [2:0]   S_AXI_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [1:0]   S_AXI_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [3:0]   S_AXI_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [2:0]   S_AXI_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [3:0]   S_AXI_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
                 S_AXI_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_RREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output         S_AXI_RVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output [31:0]  S_AXI_RDATA,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output [1:0]   S_AXI_RRESP,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output         S_AXI_RLAST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
                 S_AXI_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [19:0]  S_AXI_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [7:0]   S_AXI_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [2:0]   S_AXI_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [1:0]   S_AXI_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [3:0]   S_AXI_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [2:0]   S_AXI_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [3:0]   S_AXI_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
                 S_AXI_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output         S_AXI_WREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_WVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [31:0]  S_AXI_WDATA,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input  [3:0]   S_AXI_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          S_AXI_WLAST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
                 S_AXI_BREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output         S_AXI_BVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  output [1:0]   S_AXI_BRESP,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:15:17
  input          M_AXI_ARREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_ARVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [19:0]  M_AXI_ARADDR,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [7:0]   M_AXI_ARLEN,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [2:0]   M_AXI_ARSIZE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [1:0]   M_AXI_ARBURST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_ARLOCK,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [3:0]   M_AXI_ARCACHE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [2:0]   M_AXI_ARPROT,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [3:0]   M_AXI_ARQOS,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
                 M_AXI_ARREGION,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_RREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input          M_AXI_RVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input  [255:0] M_AXI_RDATA,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input  [1:0]   M_AXI_RRESP,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input          M_AXI_RLAST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
                 M_AXI_AWREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_AWVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [19:0]  M_AXI_AWADDR,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [7:0]   M_AXI_AWLEN,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [2:0]   M_AXI_AWSIZE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [1:0]   M_AXI_AWBURST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_AWLOCK,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [3:0]   M_AXI_AWCACHE,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [2:0]   M_AXI_AWPROT,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [3:0]   M_AXI_AWQOS,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
                 M_AXI_AWREGION,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input          M_AXI_WREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_WVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [255:0] M_AXI_WDATA,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output [31:0]  M_AXI_WSTRB,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  output         M_AXI_WLAST,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
                 M_AXI_BREADY,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input          M_AXI_BVALID,	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
  input  [1:0]   M_AXI_BRESP	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:16:17
);

  ProtocolConverter protocolConverter (	// src/test/scala/chext/amba/axi4/full/components/SctlmTest.tb.scala:18:41
    .clock                (clock),
    .reset                (reset),
    .s_axi_ar_ready       (S_AXI_ARREADY),
    .s_axi_ar_valid       (S_AXI_ARVALID),
    .s_axi_ar_bits_addr   (S_AXI_ARADDR),
    .s_axi_ar_bits_len    (S_AXI_ARLEN),
    .s_axi_ar_bits_size   (S_AXI_ARSIZE),
    .s_axi_ar_bits_burst  (S_AXI_ARBURST),
    .s_axi_ar_bits_lock   (S_AXI_ARLOCK),
    .s_axi_ar_bits_cache  (S_AXI_ARCACHE),
    .s_axi_ar_bits_prot   (S_AXI_ARPROT),
    .s_axi_ar_bits_qos    (S_AXI_ARQOS),
    .s_axi_ar_bits_region (S_AXI_ARREGION),
    .s_axi_r_ready        (S_AXI_RREADY),
    .s_axi_r_valid        (S_AXI_RVALID),
    .s_axi_r_bits_data    (S_AXI_RDATA),
    .s_axi_r_bits_resp    (S_AXI_RRESP),
    .s_axi_r_bits_last    (S_AXI_RLAST),
    .s_axi_aw_ready       (S_AXI_AWREADY),
    .s_axi_aw_valid       (S_AXI_AWVALID),
    .s_axi_aw_bits_addr   (S_AXI_AWADDR),
    .s_axi_aw_bits_len    (S_AXI_AWLEN),
    .s_axi_aw_bits_size   (S_AXI_AWSIZE),
    .s_axi_aw_bits_burst  (S_AXI_AWBURST),
    .s_axi_aw_bits_lock   (S_AXI_AWLOCK),
    .s_axi_aw_bits_cache  (S_AXI_AWCACHE),
    .s_axi_aw_bits_prot   (S_AXI_AWPROT),
    .s_axi_aw_bits_qos    (S_AXI_AWQOS),
    .s_axi_aw_bits_region (S_AXI_AWREGION),
    .s_axi_w_ready        (S_AXI_WREADY),
    .s_axi_w_valid        (S_AXI_WVALID),
    .s_axi_w_bits_data    (S_AXI_WDATA),
    .s_axi_w_bits_strb    (S_AXI_WSTRB),
    .s_axi_w_bits_last    (S_AXI_WLAST),
    .s_axi_b_ready        (S_AXI_BREADY),
    .s_axi_b_valid        (S_AXI_BVALID),
    .s_axi_b_bits_resp    (S_AXI_BRESP),
    .m_axi_ar_ready       (M_AXI_ARREADY),
    .m_axi_ar_valid       (M_AXI_ARVALID),
    .m_axi_ar_bits_addr   (M_AXI_ARADDR),
    .m_axi_ar_bits_len    (M_AXI_ARLEN),
    .m_axi_ar_bits_size   (M_AXI_ARSIZE),
    .m_axi_ar_bits_burst  (M_AXI_ARBURST),
    .m_axi_ar_bits_lock   (M_AXI_ARLOCK),
    .m_axi_ar_bits_cache  (M_AXI_ARCACHE),
    .m_axi_ar_bits_prot   (M_AXI_ARPROT),
    .m_axi_ar_bits_qos    (M_AXI_ARQOS),
    .m_axi_ar_bits_region (M_AXI_ARREGION),
    .m_axi_r_ready        (M_AXI_RREADY),
    .m_axi_r_valid        (M_AXI_RVALID),
    .m_axi_r_bits_data    (M_AXI_RDATA),
    .m_axi_r_bits_resp    (M_AXI_RRESP),
    .m_axi_r_bits_last    (M_AXI_RLAST),
    .m_axi_aw_ready       (M_AXI_AWREADY),
    .m_axi_aw_valid       (M_AXI_AWVALID),
    .m_axi_aw_bits_addr   (M_AXI_AWADDR),
    .m_axi_aw_bits_len    (M_AXI_AWLEN),
    .m_axi_aw_bits_size   (M_AXI_AWSIZE),
    .m_axi_aw_bits_burst  (M_AXI_AWBURST),
    .m_axi_aw_bits_lock   (M_AXI_AWLOCK),
    .m_axi_aw_bits_cache  (M_AXI_AWCACHE),
    .m_axi_aw_bits_prot   (M_AXI_AWPROT),
    .m_axi_aw_bits_qos    (M_AXI_AWQOS),
    .m_axi_aw_bits_region (M_AXI_AWREGION),
    .m_axi_w_ready        (M_AXI_WREADY),
    .m_axi_w_valid        (M_AXI_WVALID),
    .m_axi_w_bits_data    (M_AXI_WDATA),
    .m_axi_w_bits_strb    (M_AXI_WSTRB),
    .m_axi_w_bits_last    (M_AXI_WLAST),
    .m_axi_b_ready        (M_AXI_BREADY),
    .m_axi_b_valid        (M_AXI_BVALID),
    .m_axi_b_bits_resp    (M_AXI_BRESP)
  );
endmodule

